<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="zh-tw">
    <title>NatsuCamellia</title>
    <subtitle>When camellia blooms in summer.</subtitle>
    <link rel="self" type="application/atom+xml" href="https://natsucamellia.github.io/atom.xml"/>
    <link rel="alternate" type="text/html" href="https://natsucamellia.github.io/"/>
    <generator uri="https://www.getzola.org/">Zola</generator>
    <updated>2025-02-23T00:00:00+00:00</updated>
    <id>https://natsucamellia.github.io/atom.xml</id>
    <entry xml:lang="zh-tw">
        <title>大三下開學札記</title>
        <published>2025-02-23T00:00:00+00:00</published>
        <updated>2025-02-23T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              NatsuCamellia
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://natsucamellia.github.io/3rd-year-first-week/"/>
        <id>https://natsucamellia.github.io/3rd-year-first-week/</id>
        
        <content type="html" xml:base="https://natsucamellia.github.io/3rd-year-first-week/">&lt;p&gt;大學第三年的第二學期開學了，開學的這週一邊找專題實驗室，一邊在課程之間抉擇，是個令人煩惱的第一週。不過第一週過去之後，大致上的學期規劃都已經定下來了，不僅決定了專題實驗室、加退選了大量課程，也簡單地對課餘時間做了初步安排。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;xuan-ke-jie-guo&quot;&gt;選課結果&lt;&#x2F;h2&gt;
&lt;p&gt;時間退回 1&#x2F;13 公布初選第一階段結果的這一天，當時我幸運地直接選上 22 學分，其中還有兩門只收一名臺大生的三校聯盟課程，應該是受到幸運女神的眷顧了。因為第一階段選的課對當時的我已經足夠理想，因此我沒有參與初選二階。&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;natsucamellia.github.io&#x2F;3rd-year-first-week&#x2F;.&#x2F;first-stage.png&quot; alt=&quot;第一階段結果&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;開學第一週，我到現場上了大部分已經選上的課，以及額外想要修的課，實際修課後課程給我的感覺和選課時不同，因此產生許多課程的變動。&lt;&#x2F;p&gt;
&lt;p&gt;先說說初選選到且被我保留下來的課，它們是必修課《人工智慧導論》、《計算機網路實驗》以及臺師大的《編譯系統設計》。前兩門課是必修所以無意外的話都會留著，而《編譯系統設計》則是我聽課後覺得不錯的課程。《編譯系統設計》這門課開在師大的公館校區，騎腳踏車過去大約需要 8 分鐘，不遠也不近，之後行程定下來後我預計從宿舍搭公車過去上課。上課的教室令我驚訝的是行動網路的訊號品質，我用手機開個網頁都需要讀取半分鐘，我又沒有權限存取師大的 Wi-Fi，後來我趕緊在上課前十分鐘申請好 &lt;strong&gt;eduroam&lt;&#x2F;strong&gt;，上課後才有網路可以用。&lt;a href=&quot;https:&#x2F;&#x2F;ccnet.ntu.edu.tw&#x2F;wireless&#x2F;ccnet&#x2F;wireless.php?page=eduroam&quot;&gt;eduroam&lt;&#x2F;a&gt; 是一個用學校帳號申請的服務，開通後可以在各個教育機構內連接 &lt;strong&gt;eduroam&lt;&#x2F;strong&gt; 這一個 Wi-Fi SSID 存取網路。根據老師的說法，原本是打算在師大內裝設無線基地台，但有老師反對表示蓋基地台老師會因為電磁波而死掉。（？？？）&lt;&#x2F;p&gt;
&lt;p&gt;接著是被我退選的課程，有《演算法的數學解析》、《程式語言結構》、《食品營養概論》、《區塊鏈與數據分析》及《巨量資料系統之應用》。（幸運女神的恩惠我心領了）&lt;&#x2F;p&gt;
&lt;ol&gt;
&lt;li&gt;《演算法的數學分析》是一門不錯的課，使用的教科書是 Knuth 的《Concrete Math》。根據老師的說法每週需要花 20 小時寫作業，但我實際體驗後更準確的說法應該是花 20 小時讀課本和寫作業，因為題目需要大量腦力激盪（通靈）、佔用過多時間，加上我認為學了沒有實質的幫助，所以最後退選了這門課。&lt;&#x2F;li&gt;
&lt;li&gt;《程式語言結構》完全沒有到現場聽課，因為當時打算加簽另一門課，而且到師大上課有點麻煩，不想要一週去師大上兩次這門課，更是因為課程的大部分內容我之前已經學過了，所以果斷退選。&lt;&#x2F;li&gt;
&lt;li&gt;《食品營養概論》的教室很難找，他在一大堆的建築中的一棟教學大樓中的地下一樓的很不起眼的一間小教室，我花了大約 10 分鐘才找到教室。老師本人的氣質很好，說話的語氣很溫和，不過對於特定情況如補考規則會有自己的堅持與底線，給我一種專業又親切的印象。退選的原因主要是需要背英文的營養學名詞，光是讓我背中文就不行了更何況是英文；此外考試的形式是線上測驗，老師表示這幾年改為線上測驗後同學的成績都變好了，讓我覺得這門課可能可以透過小手段取得高分，這不是我樂見的。&lt;&#x2F;li&gt;
&lt;li&gt;《區塊鏈與數據分析》（Blockchain）及《巨量資料系統之應用》（Big Data）兩門課合稱 2B。老師給我的感覺不太正經，而且上課的時候一直扯到關於業界的話題，實際有關課程內容的比例過少，我沒有把握可以學到紮實的知識，因此最後退選了這兩門課。&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;p&gt;最後是加簽的課，分別是《系統軟體設計與實作特論》與《機器學習》。前者探討了 Linux 內部結構以及最新系統設計，我對 Linux kernel 這一方面有興趣所以加簽了。這門課不開放初選，原本加簽這門課需要在開學前繳交 paper review，我一開始不打算加簽這門課所以並沒有交這份作業。但碰巧的是老師表示這學期是第一次使用這種加錢方式，所以額外延長了繳交期限，讓我有機會加簽這堂課，又是幸運女神的眷顧。另一門是李宏毅的《機器學習》，這門課會讓所有電資學院的學生加簽，雖然我在寒假就填好加簽表單了，不過到現在還沒收到授權碼。上課當天我有打算去教室聽課，但是因為加簽人潮過多，就算我在上課半小時前到教室外，還是沒有辦法擠進教室，最後打退堂鼓離開了。&lt;&#x2F;p&gt;
&lt;p&gt;最後選到的課如下，暫時使用我的 Excel 課表，等正式的選課結果出來後會換上課程網的課表。&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;natsucamellia.github.io&#x2F;3rd-year-first-week&#x2F;.&#x2F;final-schedule.png&quot; alt=&quot;最終課表&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;總共是 15 學分，一開始 22 學分退選了 14 學分剩下 8 學分，再加簽 7 學分後才變成現在這個樣子，初選靠運氣選來的課通通吐回去，有夠揮霍運氣。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;zhuan-ti-yan-jiu&quot;&gt;專題研究&lt;&#x2F;h2&gt;
&lt;p&gt;這部分由於比較隱私，只能說個大概，如果有興趣了解更多可以私底下來問我。我和三位教授討論過專題研究，分別是廖世偉、洪士灝和黎士瑋（很巧的是，名字中間都唸作世）。我和廖世偉沒聊到什麼；我和洪士灝談了比較多，雖然最後沒有加入實驗室，不過教授給我了很大的啟發；和黎士瑋的約談則是下週。&lt;&#x2F;p&gt;
&lt;p&gt;由於起步較晚（已經開學了）、主題不明確且空閒時間有其他規劃，所以打算這學期找專題主題與加入研究室（主要是避免之後煩惱要找哪個研究室），大四再開始做專題。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;ke-hou-xue-xi&quot;&gt;課後學習&lt;&#x2F;h2&gt;
&lt;p&gt;這學期只修了 15 學分的課程，因此我打算在課餘時間做點規劃，主要是打算學習關於系統安全知識，為之後的專題研究鋪路。&lt;&#x2F;p&gt;
&lt;p&gt;首先是旁聽系上的《密碼學與資訊安全》課程，目的主要是學習常見的密碼學元件以及透過實作的作業學習資安攻防的簡單技術。另外是 MIT 的 Computer Systems Security 課程，主要學習系統如何實作安全性如虛擬化等技術的簡介，規劃是跟著表定的日程表走，參與整套的課程規劃。&lt;&#x2F;p&gt;
&lt;p&gt;週日到誠品書店逛了一下，看到了新出版的比爾・蓋茲傳記，這讓我想要了解資訊界各個傳奇人物的故事，包括十年前的賈伯斯傳，學習這些先人的行事態度。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;xin-de&quot;&gt;心得&lt;&#x2F;h2&gt;
&lt;p&gt;這學期大量的加退選的過程令人難以抉擇，因為加簽和退選的課都是我想學習的課程，手心手背都是肉。然而一個人的時間與精力是有限的，如何在多門課之間做出取捨是很重要的。這學期我考量課程的所需時間成本、回報等因素來選課，學習了做出取捨所需要的心態。&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="zh-tw">
        <title>Minecraft 與 Java 的關係</title>
        <published>2025-02-16T00:00:00+00:00</published>
        <updated>2025-02-16T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              NatsuCamellia
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://natsucamellia.github.io/minecraft-and-java/"/>
        <id>https://natsucamellia.github.io/minecraft-and-java/</id>
        
        <content type="html" xml:base="https://natsucamellia.github.io/minecraft-and-java/">&lt;h2 id=&quot;wei-shen-mo-wan-minecraft-xu-yao-an-zhuang-java&quot;&gt;為什麼玩 Minecraft 需要安裝 Java？&lt;&#x2F;h2&gt;
&lt;p&gt;Minecraft 主要分為兩個版本：&lt;strong&gt;Java Edition&lt;&#x2F;strong&gt; 和 &lt;strong&gt;Bedrock Edition&lt;&#x2F;strong&gt;。&lt;strong&gt;Java Edition&lt;&#x2F;strong&gt; 是以 Java 程式語言編寫的，所有用 Java 開發的程式都需要透過 &lt;strong&gt;Java 虛擬機（Java Virtual Machine，JVM）&lt;&#x2F;strong&gt; 來運行。因此，遊玩 Java Edition 需要安裝 Java。&lt;&#x2F;p&gt;
&lt;p&gt;而 &lt;strong&gt;Bedrock Edition&lt;&#x2F;strong&gt; 則是使用 C++ 編寫的，它可以直接執行在作業系統上，無需額外安裝 Java 環境。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;java-jvm-yu-jdk-de-guan-xi&quot;&gt;Java、JVM 與 JDK 的關係&lt;&#x2F;h2&gt;
&lt;p&gt;要理解 Java 與 JVM 的關係，就不得不提到 Java Development Kit（JDK）和 Java Runtime Environment（JRE）。&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Java 是一種程式語言，本身只是抽象的規範，不能直接執行程式碼。&lt;&#x2F;li&gt;
&lt;li&gt;JDK（Java 開發工具包）包含 JRE，以及 Java 編譯器、開發工具等，主要供開發者使用。&lt;&#x2F;li&gt;
&lt;li&gt;JRE（Java 運行環境）包含 JVM 以及 Java 標準函式庫，讓 Java 程式能夠執行。&lt;&#x2F;li&gt;
&lt;li&gt;JVM 是負責執行 Java 程式的虛擬機，所有 Java 程式都必須透過 JVM 運行。&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;對於 Minecraft 來說，執行 Java Edition 只需要 JRE 即可，但現代 Java 的發行方式通常是直接安裝 JDK，因此「安裝 Java」通常指的是安裝 JDK。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;minecraft-xu-yao-shen-mo-ban-ben-de-java&quot;&gt;Minecraft 需要什麼版本的 Java？&lt;&#x2F;h2&gt;
&lt;p&gt;程式語言隨著時代演進會推出新版本，Minecraft 也會在新版本中採用更新的 Java。根據 &lt;a href=&quot;https:&#x2F;&#x2F;forum.gamer.com.tw&#x2F;C.php?bsn=18673&amp;amp;snA=201333&quot;&gt;Minecraft 巴哈姆特哈啦板的文章&lt;&#x2F;a&gt;可以知道各個版本對應的 Java 版本。&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Minecraft 1.16 及更早版本使用 Java 8。&lt;&#x2F;li&gt;
&lt;li&gt;Minecraft 1.17 至 1.20.4 建議使用 Java 17。&lt;&#x2F;li&gt;
&lt;li&gt;Minecraft 1.20.5 及更新版本建議使用 Java 21。&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;ru-he-an-zhuang-java&quot;&gt;如何安裝 Java？&lt;&#x2F;h2&gt;
&lt;p&gt;如果用 Google 搜尋 Java，第一個結果就是 Java 8 的下載連結，如果要下載其他的 Java 版本，對於 Windows 系統可以到 &lt;a href=&quot;https:&#x2F;&#x2F;www.oracle.com&#x2F;tw&#x2F;java&#x2F;technologies&#x2F;downloads&#x2F;#java11-mac&quot;&gt;Oracle 網站&lt;&#x2F;a&gt;下載，而 Linux 系統可以使用內建的套件管理器安裝 OpenJDK（開源），macOS 則可以使用 Homebrew 安裝 OpenJDK。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;tong-shi-an-zhuang-duo-ge-ban-ben-de-java&quot;&gt;同時安裝多個版本的 Java&lt;&#x2F;h2&gt;
&lt;p&gt;如果同時玩很多個版本的 Minecraft，可能需要安裝多個版本的 Java，那麼開啟遊戲的時候 Minecraft 要怎麼知道要使用哪個 Java？要解決這個問題有兩種方法，第一種是找出不同版本的 Java 的安裝路徑，在遊戲開啟時告訴 Minecraft 要用哪個路徑。&lt;&#x2F;p&gt;
&lt;p&gt;第二種方法（推薦）則是使用&lt;strong&gt;第三方啟動器&lt;&#x2F;strong&gt;如 Prism Launcher、CurseForge、Modrinth 等軟體，大部分的第三方啟動器不僅可以幫你管理遊戲版本、Java 版本，還能在上面安裝模組，十分方便。&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="zh-tw">
        <title>客製化順手的開發環境（2）——終端機與 Shell</title>
        <published>2025-02-09T00:00:00+00:00</published>
        <updated>2025-02-09T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              NatsuCamellia
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://natsucamellia.github.io/development-environment-2/"/>
        <id>https://natsucamellia.github.io/development-environment-2/</id>
        
        <content type="html" xml:base="https://natsucamellia.github.io/development-environment-2/">&lt;h2 id=&quot;zhong-duan-ji-yu-shell&quot;&gt;終端機與 Shell&lt;&#x2F;h2&gt;
&lt;p&gt;終端機與 shell 是寫程式時不可或缺的工具，兩者關係緊密卻是兩個不同的軟體。終端機是用來裝 shell 的容器，可以將使用者的輸入傳送給 shell，也能夠將 shell 的輸出顯示在使用者的面前。而 shell 則是實際上執行工作的軟體，負責執行如 &lt;code&gt;ls&lt;&#x2F;code&gt;、&lt;code&gt;cd&lt;&#x2F;code&gt; 一類的指令，讓使用者能夠和作業系統互動。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;zhong-duan-ji&quot;&gt;終端機&lt;&#x2F;h2&gt;
&lt;p&gt;現代的作業系統一般而言都會自帶終端機，在 macOS 上有 Terminal、Windows 上有傳統的 cmd 與現代的 PowerShell，而 Linux 上有 GNOME Terminal 等不同的終端機。一般來說這些終端機的功能就已經足夠強大，能夠直接用來做任何想做的事了，不過市面上也有推出更多功能的終端機，例如近年推出的 &lt;a href=&quot;https:&#x2F;&#x2F;www.warp.dev&quot;&gt;Warp&lt;&#x2F;a&gt; 終端機，配有現代化的圖形界面，也搭配了這幾年流行的 AI，讓使用者可以在終端機內和語言模型對話。&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;natsucamellia.github.io&#x2F;development-environment-2&#x2F;.&#x2F;warp.svg&quot; alt=&quot;Warp&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;不過因為我覺得 macOS 已經很好用了，而且不需要安裝額外的軟體，因此這篇文章著重介紹如何客製化 macOS 內建的終端機 Terminal。&lt;&#x2F;p&gt;
&lt;p&gt;首先打開 Terminal.app 並按下 &lt;code&gt;Cmd ,&lt;&#x2F;code&gt; 打開設定，選取「描述檔」分頁，可以看到內建多個預設的設定，不過讓我們來客製化一個自己喜歡的設定。點擊左下角的 + 號新增一個設定檔後，再按下方的「預設值」，這樣以後新開的終端機視窗都會預設使用新的設定檔。接著看看設定檔裡面的設定，我認為最需要調整的是以下設定：&lt;&#x2F;p&gt;
&lt;ol&gt;
&lt;li&gt;背景顏色：我個人把背景顏色調成黑色，並且將不透明度調成 70%，這樣就會有透明玻璃的效果，美觀又可以看到終端機後的文字。&lt;&#x2F;li&gt;
&lt;li&gt;字體：下一節會介紹字體，我個人使用 JetBrains Mono Regular 字體，並且字體大小調整為 18 點，我認為終端機的字體要大一些，使用起來才會比較有效率也比較不傷眼。需要注意的是，如果如果使用的字體在顯示上有鋸齒的話，可以勾選「柔邊處理文字」讓文字更圓滑。&lt;&#x2F;li&gt;
&lt;li&gt;游標：勾選「閃爍游標」可以讓終端機生動些。&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;p&gt;以上就是 macOS Terminal 簡單的設定，用這些簡單的設定就可以讓終端機「外觀」好看不少，如果需要好看到「骨子」裡，那麼可以依照後續章節設定 shell。另外介紹一組和外觀有密切關係的快捷鍵，每當使用外接螢幕時，終端機的文字大小就可能會顯得過大或過小，這時可以使用以下快捷鍵調整：&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Cmd +&lt;&#x2F;code&gt;：放大字體&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;Cmd -&lt;&#x2F;code&gt;：縮小字體&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;Cmd 0&lt;&#x2F;code&gt;：重設字體縮放&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;zi-ti&quot;&gt;字體&lt;&#x2F;h2&gt;
&lt;p&gt;寫程式時最「無所不在」的元素就是文字了，因此一套順眼的字體能讓我們寫程式的心情好上不少。我在這裡介紹兩個開源字體，強烈建議讀者點進連結看個幾眼，第一個是 &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;tonsky&#x2F;FiraCode&quot;&gt;Fira Code&lt;&#x2F;a&gt;，這是我前期所使用的字體，看起來圓滾滾的很可愛，也是我第一個使用的外部字體；另一個字體是我目前正在使用的 &lt;a href=&quot;https:&#x2F;&#x2F;www.jetbrains.com&#x2F;lp&#x2F;mono&#x2F;&quot;&gt;JetBrains Mono&lt;&#x2F;a&gt;，一個由 IDE 開發公司 JetBrains 所設計的開源字體，這個字體比起 Fira Code 較為細長，省略了大部分不必要的細節，因此看起來更加整潔。&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;natsucamellia.github.io&#x2F;development-environment-2&#x2F;.&#x2F;firacode.svg&quot; alt=&quot;Fira Code&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;natsucamellia.github.io&#x2F;development-environment-2&#x2F;.&#x2F;jetbrains-mono.png&quot; alt=&quot;JetBrains Mono&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;這兩個適合用來寫程式的字體的特色是連字（Ligature），這個功能會將某些相連的字元連在一起，以 Fira Code 為例，它不只支援常見的 &lt;code&gt;==&lt;&#x2F;code&gt; 和 &lt;code&gt;++&lt;&#x2F;code&gt;，還支援各種程式語言的特殊字元組合：&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;natsucamellia.github.io&#x2F;development-environment-2&#x2F;.&#x2F;ligatures.png&quot; alt=&quot;Ligature&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;要使用這些字體我們需要先將字體安裝到電腦上，以 JetBrains Mono 為例，先到字體官網下載字體，解壓縮後打開 &lt;code&gt;&#x2F;font&#x2F;variable&lt;&#x2F;code&gt; 內的所有字體並安裝即可。安裝完成後，我們就可以在電腦的各種程式中使用該字體，例如想要將字體用在 Terminal 中，我們打開 Terminal 的設定並選擇等寬字 JetBrains Mono，儲存設定就可以了。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;shell&quot;&gt;Shell&lt;&#x2F;h2&gt;
&lt;p&gt;最後要介紹的是 shell，不同的作業系統內建的 shell 可能不同，但是 Unix 系統如 macOS、Linux 的 shell 在功能上都大同小異，因此選擇自己最順手的 shell 即可，而 macOS 內建的 shell 是 Zsh，因此本節介紹 zsh 的設定。&lt;&#x2F;p&gt;
&lt;p&gt;首先是 shell 的 rc 檔，Zsh 的 rc 檔位於 &lt;code&gt;~&#x2F;.zshrc&lt;&#x2F;code&gt;，Zsh 開啟時會執行一次裡面所有的指令，可以用於設定環境變數或是 shell 的初始化設定。&lt;&#x2F;p&gt;
&lt;p&gt;接著是 shell 的主題，搜尋「zsh themes」即可在網路上找到各式各樣的主題，我從以前用到現在的主題是 &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;romkatv&#x2F;powerlevel10k&quot;&gt;Powerlevel10k&lt;&#x2F;a&gt;，是一個很熱門的主題。安裝主題可以透過我在&lt;a href=&quot;&#x2F;development-environment-1&#x2F;&quot;&gt;上一篇文章&lt;&#x2F;a&gt;提到的 Homebrew，只需要使用指令安裝即可：&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#eff1f5;color:#4f5b66;&quot;&gt;&lt;code&gt;&lt;span&gt;brew install powerlevel10k
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;因為每次開啟 Zsh 我們都希望能夠使用這個主題，所以我們需要將設定寫入 &lt;code&gt;.zshrc&lt;&#x2F;code&gt;，打開 &lt;code&gt;.zshrc&lt;&#x2F;code&gt; 寫入以下指令後儲存：&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#eff1f5;color:#4f5b66;&quot;&gt;&lt;code&gt;&lt;span&gt;source $(brew --prefix)&#x2F;share&#x2F;powerlevel10k&#x2F;powerlevel10k.zsh-theme
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;這會讓 Zsh 在啟動時運行 Powerlevel10k 的初始化腳本，下次打開 Zsh 後就會自動開啟設定引導，完成初次設定就可以了，若想要重新設定可以使用 &lt;code&gt;p10k configure&lt;&#x2F;code&gt; 指令。&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="zh-tw">
        <title>客製化順手的開發環境（1）——套件管理軟體</title>
        <published>2025-02-02T00:00:00+00:00</published>
        <updated>2025-02-02T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              NatsuCamellia
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://natsucamellia.github.io/development-environment-1/"/>
        <id>https://natsucamellia.github.io/development-environment-1/</id>
        
        <content type="html" xml:base="https://natsucamellia.github.io/development-environment-1/">&lt;h2 id=&quot;tao-jian-guan-li-ruan-ti-homebrew&quot;&gt;套件管理軟體 - Homebrew&lt;&#x2F;h2&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;natsucamellia.github.io&#x2F;development-environment-1&#x2F;.&#x2F;homebrew.png&quot; alt=&quot;Homebrew&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;剛拿到一台電腦要建立開發環境之前，第一步就是安裝日後必要的軟體與套件。在 macOS 上常見的套件管理軟體是 &lt;a href=&quot;https:&#x2F;&#x2F;brew.sh&quot;&gt;Homebrew&lt;&#x2F;a&gt; 與 &lt;a href=&quot;https:&#x2F;&#x2F;www.macports.org&quot;&gt;MacPorts&lt;&#x2F;a&gt;，而兩者之中&lt;a href=&quot;https:&#x2F;&#x2F;www.reddit.com&#x2F;r&#x2F;MacOS&#x2F;comments&#x2F;1cmiq5w&#x2F;which_package_manager_do_you_use&#x2F;&quot;&gt;最多人使用的是 Homebrew&lt;&#x2F;a&gt;，也是我目前正在使用的套件管理軟體，因此本節以 Homebrew 為主要介紹對象。對於 Linux 系統只需要使用各個 Linux distro 的內建套件管理軟體即可，因為內建軟體的相容度一般來說會比較高，所以不推薦再使用其他套件管理軟體。&lt;&#x2F;p&gt;
&lt;p&gt;幾乎所有有關程式開發的函式庫、軟體都可以在 Homebrew 上安裝，因此每次我要安裝函式庫時第一步就是先檢查 Homebrew 上有沒有該函式庫，把所有東西都用 Homebrew 管理真的很舒爽。安裝 Homebrew 很容易，只需要到 &lt;a href=&quot;https:&#x2F;&#x2F;brew.sh&quot;&gt;Homebrew 的網站&lt;&#x2F;a&gt;上複製安裝指令，並貼上至終端機執行即可，記得下載完後要在輸出文字中找到 &lt;code&gt;Next steps&lt;&#x2F;code&gt;，照做完成 &lt;code&gt;PATH&lt;&#x2F;code&gt; 設定就算是安裝成功了。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;an-zhuang-tao-jian&quot;&gt;安裝套件&lt;&#x2F;h2&gt;
&lt;p&gt;接著以安裝 GCC 為例來展示 Homebrew 的常見用法，我們先搜尋在 Homebrew 上有哪些安裝選項：（我已經安裝好 &lt;code&gt;gcc&lt;&#x2F;code&gt; 了所以旁邊有個勾）&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;讀者可能會有疑問，在 macOS 上可以使用 &lt;code&gt;gcc&lt;&#x2F;code&gt; 指令來編譯 C 程式，為什麼還要安裝 GCC？這是因為 macOS 中的 &lt;code&gt;gcc&lt;&#x2F;code&gt; 指令預設指向 Clang 編譯器（macOS 因為 GCC 條款問題而自行開發的 C 編譯器），如果使用 &lt;code&gt;gcc --version&lt;&#x2F;code&gt; 指令就能觀察到這一點。下方會告訴讀者如何將 &lt;code&gt;gcc&lt;&#x2F;code&gt; 指令指向 GCC 而不是 Clang。&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;pre style=&quot;background-color:#eff1f5;color:#4f5b66;&quot;&gt;&lt;code&gt;&lt;span&gt;brew search gcc
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;natsucamellia.github.io&#x2F;development-environment-1&#x2F;.&#x2F;search.png&quot; alt=&quot;search&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;這時候會看到很多輸出訊息，我來解釋這些訊息是什麼意思。&lt;code&gt;Formulae&lt;&#x2F;code&gt; 中的套件通常是編譯而成、不帶有 GUI 的 CLI 軟體，如 Python、GCC；而 &lt;code&gt;Casks&lt;&#x2F;code&gt; 中的套件通常是透過官方網站下載的安裝包安裝而成的 GUI 軟體，如 WireShark（沒錯，WireShark 可以透過 Homebrew 安裝）。&lt;&#x2F;p&gt;
&lt;p&gt;從中可以看到 &lt;code&gt;gcc&lt;&#x2F;code&gt; 以及標有版本號的 &lt;code&gt;gcc@13&lt;&#x2F;code&gt; 等套件，&lt;code&gt;gcc&lt;&#x2F;code&gt; 會指向最新版本的 GCC，未來如果 GCC 更新了 GCC 15、GCC 16，&lt;code&gt;gcc&lt;&#x2F;code&gt; 也會自動更新上去，而 &lt;code&gt;gcc@13&lt;&#x2F;code&gt; 就只會停在 GCC 13。&lt;&#x2F;p&gt;
&lt;p&gt;最後我們確認一下 &lt;code&gt;gcc&lt;&#x2F;code&gt; 是不是我們所期望的 GCC，使用指令查看套件訊息：&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#eff1f5;color:#4f5b66;&quot;&gt;&lt;code&gt;&lt;span&gt;brew info gcc
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;natsucamellia.github.io&#x2F;development-environment-1&#x2F;.&#x2F;info.png&quot; alt=&quot;info&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;在輸出中可以看到套件的完整名稱 GNU compiler collection、官方網站連結、來源以及授權條款等資訊，也可以看到最近的總安裝次數。決定好要安裝的套件後，使用指令安裝該套件：&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#eff1f5;color:#4f5b66;&quot;&gt;&lt;code&gt;&lt;span&gt;brew install gcc
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;此時 GCC 就安裝成功了。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;homebrew-an-zhuang-yuan-li&quot;&gt;Homebrew 安裝原理&lt;&#x2F;h2&gt;
&lt;p&gt;使用 &lt;code&gt;brew list&lt;&#x2F;code&gt; 可以看到目前已經安裝的套件以及預設安裝的套件，其中應該包含 &lt;code&gt;gcc&lt;&#x2F;code&gt;：（我的套件很多沒辦法完整截圖，&lt;code&gt;gcc&lt;&#x2F;code&gt; 在更下方）&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#eff1f5;color:#4f5b66;&quot;&gt;&lt;code&gt;&lt;span&gt;brew list
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;natsucamellia.github.io&#x2F;development-environment-1&#x2F;.&#x2F;list.png&quot; alt=&quot;list&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;如果要查看一個套件中的所有可執行檔：&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#eff1f5;color:#4f5b66;&quot;&gt;&lt;code&gt;&lt;span&gt;brew list gcc
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;natsucamellia.github.io&#x2F;development-environment-1&#x2F;.&#x2F;list_gcc.png&quot; alt=&quot;list gcc&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;此時會輸出許多可執行檔，而其中我想要使用的 &lt;code&gt;gcc&lt;&#x2F;code&gt; 是：&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#eff1f5;color:#4f5b66;&quot;&gt;&lt;code&gt;&lt;span&gt;&#x2F;opt&#x2F;homebrew&#x2F;Cellar&#x2F;gcc&#x2F;14.2.0_1&#x2F;bin&#x2F;gcc-14
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Homebrew 安裝完套件後，會將套件的指令放在 &lt;code&gt;&#x2F;opt&#x2F;homebrew&#x2F;bin&lt;&#x2F;code&gt; 中，並指向真正的位置。例如我想使用的 &lt;code&gt;gcc-14&lt;&#x2F;code&gt; 就會位於 &lt;code&gt;&#x2F;opt&#x2F;homebrew&#x2F;bin&#x2F;gcc-14&lt;&#x2F;code&gt; 並指向 &lt;code&gt;&#x2F;opt&#x2F;homebrew&#x2F;Cellar&#x2F;gcc&#x2F;14.2.0_1&#x2F;bin&#x2F;gcc-14&lt;&#x2F;code&gt;，使用以下指令可以驗證這一點：&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#eff1f5;color:#4f5b66;&quot;&gt;&lt;code&gt;&lt;span&gt;ls -l &#x2F;opt&#x2F;homebrew&#x2F;bin&#x2F;gcc-14
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;&#x2F;&#x2F; Output
&lt;&#x2F;span&gt;&lt;span&gt;... &#x2F;opt&#x2F;homebrew&#x2F;bin&#x2F;gcc-14 -&amp;gt; ..&#x2F;Cellar&#x2F;gcc&#x2F;14.2.0_1&#x2F;bin&#x2F;gcc-14
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;而 &lt;code&gt;&#x2F;opt&#x2F;homebrew&#x2F;bin&lt;&#x2F;code&gt; 在安裝 Homebrew 時就已經加入 &lt;code&gt;PATH&lt;&#x2F;code&gt; 環境變數中了，所以我們只需要使用 &lt;code&gt;gcc-14&lt;&#x2F;code&gt; 就可以用 GCC 編譯 C 程式了。&lt;&#x2F;p&gt;
&lt;p&gt;簡單整理一下，當我們使用 &lt;code&gt;gcc-14&lt;&#x2F;code&gt; 指令時，作業系統會在 &lt;code&gt;PATH&lt;&#x2F;code&gt; 中尋找 &lt;code&gt;gcc-14&lt;&#x2F;code&gt;，此時作業系統在 &lt;code&gt;PATH&lt;&#x2F;code&gt; 中的 &lt;code&gt;&#x2F;opt&#x2F;homebrew&#x2F;bin&lt;&#x2F;code&gt; 找到了 &lt;code&gt;gcc-14&lt;&#x2F;code&gt; 於是執行它，而這個 &lt;code&gt;gcc-14&lt;&#x2F;code&gt; 實際上指向 &lt;code&gt;&#x2F;opt&#x2F;homebrew&#x2F;Cellar&#x2F;gcc&#x2F;14.2.0_1&#x2F;bin&#x2F;gcc-14&lt;&#x2F;code&gt;，所以被執行的是後者的 &lt;code&gt;gcc-14&lt;&#x2F;code&gt; 也就是真正安裝的 &lt;code&gt;gcc-14&lt;&#x2F;code&gt;。&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#eff1f5;color:#4f5b66;&quot;&gt;&lt;code&gt;&lt;span&gt;gcc-14
&lt;&#x2F;span&gt;&lt;span&gt; ↓ (OS find gcc-14 in PATH)
&lt;&#x2F;span&gt;&lt;span&gt;PATH
&lt;&#x2F;span&gt;&lt;span&gt; ↓ (OS found gcc-14)
&lt;&#x2F;span&gt;&lt;span&gt;&#x2F;opt&#x2F;homebrew&#x2F;bin&#x2F;gcc-14
&lt;&#x2F;span&gt;&lt;span&gt; ↓ (Links to real gcc-14)
&lt;&#x2F;span&gt;&lt;span&gt;&#x2F;opt&#x2F;homebrew&#x2F;Cellar&#x2F;gcc&#x2F;14.2.0_1&#x2F;bin&#x2F;gcc-14
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h2 id=&quot;rang-gcc-zhi-xiang-zhen-zheng-de-gcc&quot;&gt;讓 GCC 指向真正的 GCC&lt;&#x2F;h2&gt;
&lt;p&gt;現在如果使用 &lt;code&gt;gcc --version&lt;&#x2F;code&gt;，輸出依舊是 macOS 的內建編譯器 Clang。有不同方法可以將 &lt;code&gt;gcc&lt;&#x2F;code&gt; 指向我們剛安裝的 GCC，我這裡使用最溫和而不破壞環境的方法：&lt;code&gt;alias gcc=gcc-14&lt;&#x2F;code&gt;，讓 shell 在讀取到 &lt;code&gt;gcc&lt;&#x2F;code&gt; 指令時自動轉換成 &lt;code&gt;gcc-14&lt;&#x2F;code&gt;，如果想要取消的話，使用 &lt;code&gt;unalias gcc&lt;&#x2F;code&gt; 即可。如果要使用 Clang 編譯器的話可以使用 &lt;code&gt;clang&lt;&#x2F;code&gt; 指令。&lt;&#x2F;p&gt;
&lt;p&gt;其實安裝的 GCC 中也包括了 G++，可以使用相同的方法將 &lt;code&gt;g++&lt;&#x2F;code&gt; 指向 &lt;code&gt;g++-14&lt;&#x2F;code&gt;。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;chang-yong-zhi-ling&quot;&gt;常用指令&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;brew search gcc&lt;&#x2F;code&gt;：搜尋名稱包含 &lt;code&gt;gcc&lt;&#x2F;code&gt; 的所有套件&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;brew info gcc&lt;&#x2F;code&gt;：查看套件 &lt;code&gt;gcc&lt;&#x2F;code&gt; 的訊息&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;brew install gcc&lt;&#x2F;code&gt;：安裝 &lt;code&gt;gcc&lt;&#x2F;code&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;brew uninstall gcc&lt;&#x2F;code&gt;：解除安裝 &lt;code&gt;gcc&lt;&#x2F;code&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;brew list&lt;&#x2F;code&gt;：列出已安裝的套件&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;brew list gcc&lt;&#x2F;code&gt;：列出 &lt;code&gt;gcc&lt;&#x2F;code&gt; 的可執行檔&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;brew update&lt;&#x2F;code&gt;：更新 Homebrew 套件資料庫&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;brew upgrade&lt;&#x2F;code&gt;：更新所有套件&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;brew upgrade gcc&lt;&#x2F;code&gt;：更新 &lt;code&gt;gcc&lt;&#x2F;code&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
</content>
        
    </entry>
    <entry xml:lang="zh-tw">
        <title>Lambda Calculus 簡介</title>
        <published>2025-01-26T00:00:00+00:00</published>
        <updated>2025-01-26T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              NatsuCamellia
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://natsucamellia.github.io/lambda-calculus-intro/"/>
        <id>https://natsucamellia.github.io/lambda-calculus-intro/</id>
        
        <content type="html" xml:base="https://natsucamellia.github.io/lambda-calculus-intro/">&lt;h2 id=&quot;1-lambda-calculus&quot;&gt;1 Lambda Calculus&lt;&#x2F;h2&gt;
&lt;p&gt;Lambda calculus 是由數學家 Alonzo Church 在 1930 年代提出的一套數學邏輯規則，在程式語言領域中有重要的地位，被視為是程式語言的雛形。它對許多函數式程式語言造成很大的影響，如第一個函數式程式語言 Lisp、純函數式程式語言 Haskell 等，此外 Haskell 的標誌中的 λ 就代表 lambda calculus。&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;natsucamellia.github.io&#x2F;lambda-calculus-intro&#x2F;.&#x2F;haskell-logo.svg&quot; alt=&quot;Haskell Logo&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;如果對於 Alan Turing 在相同年代提出的圖靈機有概念的話，lambda calculus 具有圖靈完備性，也就是說 lambda calculus 可以用來模擬圖靈機的運算。&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;h2 id=&quot;2-basics&quot;&gt;2 Basics&lt;&#x2F;h2&gt;
&lt;p&gt;我們首先定義 lambda calculus 的 syntax 以及 semantics。&lt;&#x2F;p&gt;
&lt;p&gt;Syntax（語法）指的是一門語言怎麼寫才是對的，semantics（語意）則是指語言的意義。在這裡，語言指的是 lambda calculus，程式語言領域中指的是程式語言本身，而在語言學中則是指自然語言。舉英文為例，句子的 syntax 可以是 S + V，其 semantics 為「S 做了動作 V」。&lt;&#x2F;p&gt;
&lt;h3 id=&quot;2-1-syntax&quot;&gt;2.1 Syntax&lt;&#x2F;h3&gt;
&lt;p&gt;最簡單的 lambda calculus 包含了三種 &lt;strong&gt;terms&lt;&#x2F;strong&gt;：&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#eff1f5;color:#4f5b66;&quot;&gt;&lt;code&gt;&lt;span&gt;t ::= x     (variable)
&lt;&#x2F;span&gt;&lt;span&gt;      λx. t (abstraction)
&lt;&#x2F;span&gt;&lt;span&gt;      t t   (application)
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;其中 &lt;code&gt;t&lt;&#x2F;code&gt; 代表的是 &lt;strong&gt;term&lt;&#x2F;strong&gt;，它可以是：&lt;&#x2F;p&gt;
&lt;ol&gt;
&lt;li&gt;由任何符號代表的 &lt;strong&gt;variable&lt;&#x2F;strong&gt;。&lt;&#x2F;li&gt;
&lt;li&gt;完整的函式定義 &lt;strong&gt;abstraction&lt;&#x2F;strong&gt;，包括了 &lt;code&gt;λ&lt;&#x2F;code&gt; 與 &lt;code&gt;.&lt;&#x2F;code&gt; 之間一個參數 &lt;code&gt;x&lt;&#x2F;code&gt;，以及 &lt;code&gt;.&lt;&#x2F;code&gt; 之後代表函式本體的 term &lt;code&gt;t&lt;&#x2F;code&gt;。&lt;&#x2F;li&gt;
&lt;li&gt;將第二個 term 作為參數傳入第一個 term 的 &lt;strong&gt;application&lt;&#x2F;strong&gt;，類似於函式呼叫。&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;t&lt;&#x2F;code&gt; 是一個 metavariable，它不存在於 syntax 中，它只用於指涉 term，也就是說在 application term 中的兩個 &lt;code&gt;t&lt;&#x2F;code&gt; 可以是兩個不同的 terms。&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;h3 id=&quot;2-2-semantics&quot;&gt;2.2 Semantics&lt;&#x2F;h3&gt;
&lt;p&gt;在最簡單的 lambda calculus 中沒有條件控制、迴圈等元素，計算方法只有將參數帶入函式而已，也就是將 abstraction 中的參數替換成右邊的 term：&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#eff1f5;color:#4f5b66;&quot;&gt;&lt;code&gt;&lt;span&gt;(λx. t1) t2 → [x ↦ t2]t1
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;λx.&lt;&#x2F;code&gt; 後方會被視為一個整體，因此需要用括號限制 abstraction 的範圍。&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;其中 &lt;code&gt;→&lt;&#x2F;code&gt; 代表左邊的 term 經過一步 evaluation 會變成右邊的 term，而 &lt;code&gt;[x ↦ t2]t1&lt;&#x2F;code&gt; 代表將 &lt;code&gt;t1&lt;&#x2F;code&gt; 中所有的 &lt;code&gt;x&lt;&#x2F;code&gt; 替換為 &lt;code&gt;t2&lt;&#x2F;code&gt;。&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;這裡說的「將 &lt;code&gt;t1&lt;&#x2F;code&gt; 中所有的 &lt;code&gt;x&lt;&#x2F;code&gt; 替換為 &lt;code&gt;t2&lt;&#x2F;code&gt;」其實是不準確的說法，應該要說「將 &lt;code&gt;t1&lt;&#x2F;code&gt; 中所有的 &lt;strong&gt;free variable&lt;&#x2F;strong&gt; &lt;code&gt;x&lt;&#x2F;code&gt; 替換為 &lt;code&gt;t2&lt;&#x2F;code&gt;」，因為我們一般預期的行為是&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#eff1f5;color:#4f5b66;&quot;&gt;&lt;code&gt;&lt;span&gt;(λx. (λx. x) (x + 1)) n → (λx. x) (n + 1) → n + 1
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;而非&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#eff1f5;color:#4f5b66;&quot;&gt;&lt;code&gt;&lt;span&gt;(λx. (λx. x) (x + 1)) n → (λx. n) (n + 1) → n
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;所謂 free variable 簡單來說就是 &lt;code&gt;x&lt;&#x2F;code&gt; 不是任何 abstraction 的參數。在這個例子中，&lt;code&gt;t1 = (λx. x) (x + 1)&lt;&#x2F;code&gt;：&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;(x + 1)&lt;&#x2F;code&gt; 的 &lt;code&gt;x&lt;&#x2F;code&gt; 是 &lt;code&gt;t1&lt;&#x2F;code&gt; 中的 &lt;strong&gt;free variable&lt;&#x2F;strong&gt;，因為這個 &lt;code&gt;x&lt;&#x2F;code&gt; 在 &lt;code&gt;t1&lt;&#x2F;code&gt; 中沒有對應的 &lt;code&gt;λx.&lt;&#x2F;code&gt;，所以根據 semantics 可以被替換成 &lt;code&gt;n&lt;&#x2F;code&gt;。&lt;&#x2F;li&gt;
&lt;li&gt;而 &lt;code&gt;(λx. x)&lt;&#x2F;code&gt; 中的 &lt;code&gt;x&lt;&#x2F;code&gt; 就不是 free variable，而是 &lt;strong&gt;bound variable&lt;&#x2F;strong&gt;，因為它和旁邊的 &lt;code&gt;λx.&lt;&#x2F;code&gt; 綁定（bound）。&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;舉例而言，我們定義 identity function：&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#eff1f5;color:#4f5b66;&quot;&gt;&lt;code&gt;&lt;span&gt;id = λx. x
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;從 syntax 的角度看，因為函式本體中的 &lt;code&gt;x&lt;&#x2F;code&gt;（第二個 &lt;code&gt;x&lt;&#x2F;code&gt;）是一個 variable，所以 &lt;code&gt;id&lt;&#x2F;code&gt; 是一個 abstraction。&lt;&#x2F;p&gt;
&lt;p&gt;接著我們透過 &lt;code&gt;id n&lt;&#x2F;code&gt; 觀察 semantics：&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#eff1f5;color:#4f5b66;&quot;&gt;&lt;code&gt;&lt;span&gt;id n
&lt;&#x2F;span&gt;&lt;span&gt;= (λx. x) n
&lt;&#x2F;span&gt;&lt;span&gt;→ [x ↦ n]x
&lt;&#x2F;span&gt;&lt;span&gt;= n
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;&lt;code&gt;id&lt;&#x2F;code&gt; 確實是一個回傳參數本身的 identity function。&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;h2 id=&quot;3-programming&quot;&gt;3 Programming&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;3-1-multiple-arguments&quot;&gt;3.1 Multiple Arguments&lt;&#x2F;h3&gt;
&lt;p&gt;Abstraction terms 中，&lt;code&gt;λ&lt;&#x2F;code&gt; 後面只能定義一個參數，如果要讓一個函式可以接收多個參數，則需要透過 &lt;a href=&quot;https:&#x2F;&#x2F;zh.wikipedia.org&#x2F;wiki&#x2F;%E6%9F%AF%E9%87%8C%E5%8C%96&quot;&gt;currying&lt;&#x2F;a&gt; 讓一個函式回傳另一個函式來達到多個參數的效果。舉例而言，我們要讓一個函數接收兩個參數並回傳第一個參數，可以這樣定義：&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#eff1f5;color:#4f5b66;&quot;&gt;&lt;code&gt;&lt;span&gt;tru = λt. λf. t
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;展示使用的效果：&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#eff1f5;color:#4f5b66;&quot;&gt;&lt;code&gt;&lt;span&gt;tru x y
&lt;&#x2F;span&gt;&lt;span&gt;= (λt. λf. t) x y
&lt;&#x2F;span&gt;&lt;span&gt;→ (λf. x) y          &#x2F;&#x2F; t ↦ x
&lt;&#x2F;span&gt;&lt;span&gt;→ x                  &#x2F;&#x2F; f ↦ y
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;當 &lt;code&gt;tru&lt;&#x2F;code&gt; 接收參數 &lt;code&gt;x&lt;&#x2F;code&gt; 後就會得到另一個函式 &lt;code&gt;(λf. x)&lt;&#x2F;code&gt;，接著這個函式會負責接收第二個參數 &lt;code&gt;y&lt;&#x2F;code&gt;。&lt;&#x2F;p&gt;
&lt;p&gt;同樣的我們也可以定義回傳第二個參數的函式：&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#eff1f5;color:#4f5b66;&quot;&gt;&lt;code&gt;&lt;span&gt;fls = λt. λf. f
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;3-2-church-booleans&quot;&gt;3.2 Church Booleans&lt;&#x2F;h3&gt;
&lt;p&gt;以上介紹的兩個 term &lt;code&gt;tru&lt;&#x2F;code&gt; 和 &lt;code&gt;fls&lt;&#x2F;code&gt; 被稱為 &lt;strong&gt;Church booleans&lt;&#x2F;strong&gt;，相當於 lambda calculus 中的布林值。使用 &lt;code&gt;tru&lt;&#x2F;code&gt; 與 &lt;code&gt;fls&lt;&#x2F;code&gt; 命名的目的是避免和一般的布林值 &lt;code&gt;true&lt;&#x2F;code&gt; 與 &lt;code&gt;false&lt;&#x2F;code&gt; 搞混，Church booleans 實際上是 abstraction。&lt;&#x2F;p&gt;
&lt;p&gt;有了 &lt;code&gt;tru&lt;&#x2F;code&gt; 與 &lt;code&gt;fls&lt;&#x2F;code&gt; 後，我們可以將它們用於條件判斷，常見的 &lt;code&gt;if-then-else&lt;&#x2F;code&gt; 可以寫成接收三個參數的 term &lt;code&gt;test&lt;&#x2F;code&gt;：&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#eff1f5;color:#4f5b66;&quot;&gt;&lt;code&gt;&lt;span&gt;test = λb. λt. λf. b t f
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;&lt;code&gt;test b t f&lt;&#x2F;code&gt; 的用法就相當於 &lt;code&gt;if b then t else f&lt;&#x2F;code&gt;，我們將 &lt;code&gt;tru&lt;&#x2F;code&gt; 或 &lt;code&gt;fls&lt;&#x2F;code&gt; 傳入作為第一個參數，然後傳入 then-branch 與 else-branch，如果 &lt;code&gt;b = tru&lt;&#x2F;code&gt;，那麼&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#eff1f5;color:#4f5b66;&quot;&gt;&lt;code&gt;&lt;span&gt;test tru t f
&lt;&#x2F;span&gt;&lt;span&gt;→ tru t f
&lt;&#x2F;span&gt;&lt;span&gt;→ t
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;最後得到 &lt;code&gt;t&lt;&#x2F;code&gt;（&lt;code&gt;tru&lt;&#x2F;code&gt; 會回傳第一個參數！），反之若 &lt;code&gt;b = fls&lt;&#x2F;code&gt; 則會得到 &lt;code&gt;f&lt;&#x2F;code&gt;。&lt;&#x2F;p&gt;
&lt;p&gt;我們也可以定義邏輯運算：&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#eff1f5;color:#4f5b66;&quot;&gt;&lt;code&gt;&lt;span&gt;and = λb. λc. b c fls
&lt;&#x2F;span&gt;&lt;span&gt;or = λb. λc. b tru c
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;這裡的定義和 short-circuit 的概念有異曲同工之妙，在 short-circuit 中，如果 &lt;code&gt;b&lt;&#x2F;code&gt; 是 &lt;code&gt;false&lt;&#x2F;code&gt; 那麼 &lt;code&gt;b and c&lt;&#x2F;code&gt; 就不可能是 &lt;code&gt;true&lt;&#x2F;code&gt; 了，所以可以直接回傳 &lt;code&gt;false&lt;&#x2F;code&gt;，在上方的定義中，如果 &lt;code&gt;b&lt;&#x2F;code&gt; 是 &lt;code&gt;fls&lt;&#x2F;code&gt;，因為 &lt;code&gt;fls&lt;&#x2F;code&gt; 會選擇第二個參數，所以不管 &lt;code&gt;c&lt;&#x2F;code&gt; 為何 &lt;code&gt;b c fls&lt;&#x2F;code&gt; 都會直接回傳 &lt;code&gt;fls&lt;&#x2F;code&gt;。Short-circuit 這種提前回傳結果的概念在大多的現代程式語言中都有實作，因此需要注意 &lt;code&gt;and&lt;&#x2F;code&gt; 及 &lt;code&gt;or&lt;&#x2F;code&gt; 的第二個參數可能會被忽略，尤其當第二個參數是函式時，會導致函式沒有被執行。&lt;&#x2F;p&gt;
&lt;h3 id=&quot;3-3-pairs&quot;&gt;3.3 Pairs&lt;&#x2F;h3&gt;
&lt;p&gt;在 lambda calculus 中如何表達資料結構呢？我們先看在函數式程式語言中最基本的資料結構 &lt;strong&gt;pair&lt;&#x2F;strong&gt;。&lt;&#x2F;p&gt;
&lt;p&gt;在函數式程式語言中，tuple（元組）是一個簡單的資料結構，語法通常是括號中放多個元素並以 &lt;code&gt;,&lt;&#x2F;code&gt; 隔開，例如 &lt;code&gt;(1, 3, 5, 7)&lt;&#x2F;code&gt;、&lt;code&gt;(&#x27;h&#x27;, &#x27;e&#x27;, &#x27;l&#x27;, &#x27;l&#x27;, &#x27;o&#x27;)&lt;&#x2F;code&gt;，而 pair 就是元素數量為 2 的 tuple。&lt;&#x2F;p&gt;
&lt;p&gt;最常與 pair 搭配使用的函式是 &lt;code&gt;first&lt;&#x2F;code&gt; 與 &lt;code&gt;second&lt;&#x2F;code&gt;，分別可以取出第一個與第二個元素，利用 Church booleans 我們可以為 pair 定義以下 terms：&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#eff1f5;color:#4f5b66;&quot;&gt;&lt;code&gt;&lt;span&gt;pair = λf. λs. λb. b f s
&lt;&#x2F;span&gt;&lt;span&gt;first = λp. p tru
&lt;&#x2F;span&gt;&lt;span&gt;second = λp. p false
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;我們利用 &lt;code&gt;tru&lt;&#x2F;code&gt; 與 &lt;code&gt;fls&lt;&#x2F;code&gt; 能夠選擇第一個與第二個參數的特性，我們先把兩個元素放進 &lt;code&gt;pair&lt;&#x2F;code&gt; 中，要取出元素時再使用 &lt;code&gt;tru&lt;&#x2F;code&gt; 與 &lt;code&gt;fls&lt;&#x2F;code&gt; 取出想要的元素。例如我們可以將二維坐標 $(x, y)$ 儲存為：&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#eff1f5;color:#4f5b66;&quot;&gt;&lt;code&gt;&lt;span&gt;pos = pair x y
&lt;&#x2F;span&gt;&lt;span&gt;    = (λf. λs. λb. b f s) x y
&lt;&#x2F;span&gt;&lt;span&gt;    → (λb. b x y)
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;現在只要傳入 &lt;code&gt;tru&lt;&#x2F;code&gt; 或 &lt;code&gt;fls&lt;&#x2F;code&gt; 給 &lt;code&gt;pos&lt;&#x2F;code&gt; 就可以取出 &lt;code&gt;x&lt;&#x2F;code&gt; 或 &lt;code&gt;y&lt;&#x2F;code&gt;，如果想要取出 &lt;code&gt;x&lt;&#x2F;code&gt; 座標就可以寫：&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#eff1f5;color:#4f5b66;&quot;&gt;&lt;code&gt;&lt;span&gt;first pos
&lt;&#x2F;span&gt;&lt;span&gt;= (λp. p tru) (λb. b x y)
&lt;&#x2F;span&gt;&lt;span&gt;→ (λb. b x y) tru
&lt;&#x2F;span&gt;&lt;span&gt;→ tru x y
&lt;&#x2F;span&gt;&lt;span&gt;→ x
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;&lt;code&gt;first&lt;&#x2F;code&gt; 就僅僅是將 &lt;code&gt;tru&lt;&#x2F;code&gt; 傳給參數 pair &lt;code&gt;p&lt;&#x2F;code&gt;，然後取得第一個元素而已，&lt;code&gt;second&lt;&#x2F;code&gt; 則是傳 &lt;code&gt;fls&lt;&#x2F;code&gt; 來取得第二個元素。&lt;&#x2F;p&gt;
&lt;h3 id=&quot;3-4-church-numerals&quot;&gt;3.4 Church Numerals&lt;&#x2F;h3&gt;
&lt;p&gt;最後來看看如何在 lambda calculus 中表達自然數。這裡的概念和&lt;a href=&quot;https:&#x2F;&#x2F;zh.wikipedia.org&#x2F;zh-tw&#x2F;%E7%9A%AE%E4%BA%9A%E8%AF%BA%E5%85%AC%E7%90%86&quot;&gt;皮亞諾公設&lt;&#x2F;a&gt;的概念相似，皮亞諾公設中提到兩點：&lt;&#x2F;p&gt;
&lt;ol&gt;
&lt;li&gt;0 是自然數。&lt;&#x2F;li&gt;
&lt;li&gt;每一個確定的自然數 $a$，都有一個確定的後繼數（successor） $a&#x27;$ ，$a&#x27;$ 也是自然數。&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;p&gt;在 lambda calculus 中，&lt;a href=&quot;https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Church_encoding#Church_numerals&quot;&gt;Church numerals&lt;&#x2F;a&gt; 的定義頗有皮亞諾公設的感覺，我們需要給定 &lt;strong&gt;0&lt;&#x2F;strong&gt; 是什麼以及 successor 是什麼意思，所以 Church numerals 的定義如下：&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#eff1f5;color:#4f5b66;&quot;&gt;&lt;code&gt;&lt;span&gt;c0 = λs. λz. z
&lt;&#x2F;span&gt;&lt;span&gt;c1 = λs. λz. s z
&lt;&#x2F;span&gt;&lt;span&gt;c2 = λs. λz. s (s z)
&lt;&#x2F;span&gt;&lt;span&gt;c3 = λs. λz. s (s (s z))
&lt;&#x2F;span&gt;&lt;span&gt;...
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;這裡變數名稱 &lt;code&gt;s&lt;&#x2F;code&gt; 代表 successor 而 &lt;code&gt;z&lt;&#x2F;code&gt; 代表 zero，&lt;code&gt;cn&lt;&#x2F;code&gt; 則是為了避免和一般的數字混淆。&lt;&#x2F;p&gt;
&lt;p&gt;可以看到每個 church numeral 只要給定了 successor 和 0 的定義，那麼它就是 well-defined。0 是 &lt;code&gt;z&lt;&#x2F;code&gt;、1 是 &lt;code&gt;z&lt;&#x2F;code&gt; 的下一個元素、2 則是 &lt;code&gt;z&lt;&#x2F;code&gt; 的下一個再下一個元素，依此類推。&lt;&#x2F;p&gt;
&lt;p&gt;這裡有個重要的觀察，如果換個角度想，&lt;code&gt;cn&lt;&#x2F;code&gt; 的作用其實就是接收一個函式 &lt;code&gt;s&lt;&#x2F;code&gt; 和一個元素 &lt;code&gt;z&lt;&#x2F;code&gt;，對 &lt;code&gt;z&lt;&#x2F;code&gt; 呼叫 &lt;code&gt;n&lt;&#x2F;code&gt; 次 &lt;code&gt;s&lt;&#x2F;code&gt;，也就是 $s^n(z)$。&lt;&#x2F;p&gt;
&lt;p&gt;接著介紹幾個常用於 Church numerals 的函式：&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#eff1f5;color:#4f5b66;&quot;&gt;&lt;code&gt;&lt;span&gt;succ = λn. λs. λz. s (n s z)
&lt;&#x2F;span&gt;&lt;span&gt;plus = λm. λn. λs. λz. m s (n s z)
&lt;&#x2F;span&gt;&lt;span&gt;times = λm. λn. m (plus n) c0
&lt;&#x2F;span&gt;&lt;span&gt;iszero = λn. n (λx. fls) tru
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;以上的定義中 &lt;code&gt;m&lt;&#x2F;code&gt; 與 &lt;code&gt;n&lt;&#x2F;code&gt; 都是 Church numerals。&lt;code&gt;succ&lt;&#x2F;code&gt; 概念上就是再多呼叫一次 &lt;code&gt;s&lt;&#x2F;code&gt;，&lt;code&gt;plus&lt;&#x2F;code&gt; 則是先呼叫 &lt;code&gt;n&lt;&#x2F;code&gt; 次再呼叫 &lt;code&gt;m&lt;&#x2F;code&gt; 次而達成 &lt;code&gt;m + n&lt;&#x2F;code&gt; 的效果，&lt;code&gt;times&lt;&#x2F;code&gt; 就是對 0 加上 &lt;code&gt;m&lt;&#x2F;code&gt; 次 &lt;code&gt;n&lt;&#x2F;code&gt;，&lt;code&gt;iszero&lt;&#x2F;code&gt; 使用一個總是回傳 &lt;code&gt;fls&lt;&#x2F;code&gt; 的函式，如果呼叫一次以上結果就會是 &lt;code&gt;fls&lt;&#x2F;code&gt;，如果 &lt;code&gt;n = c0&lt;&#x2F;code&gt; 則結果會是 &lt;code&gt;tru&lt;&#x2F;code&gt;。&lt;&#x2F;p&gt;
&lt;p&gt;最後介紹比較複雜的 &lt;code&gt;pred&lt;&#x2F;code&gt;（predecessor），取得前一個 Church numeral：&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#eff1f5;color:#4f5b66;&quot;&gt;&lt;code&gt;&lt;span&gt;zz = pair c0 c0
&lt;&#x2F;span&gt;&lt;span&gt;ss = λp. pair (second p) (plus c1 (second p))
&lt;&#x2F;span&gt;&lt;span&gt;pred = λn. first (n ss zz)
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;概念上是維護一個 pair 記錄上一個以及目前的 Church numeral &lt;code&gt;(last, this)&lt;&#x2F;code&gt;，&lt;code&gt;zz&lt;&#x2F;code&gt; 是一開始的狀態，&lt;code&gt;ss&lt;&#x2F;code&gt; 會把 $(c_n, c_m)$ 變成 $(c_m, c_{m+1})$。&lt;code&gt;pred&lt;&#x2F;code&gt; 對 &lt;code&gt;zz&lt;&#x2F;code&gt; 呼叫 &lt;code&gt;n &amp;gt; 0&lt;&#x2F;code&gt; 次 &lt;code&gt;ss&lt;&#x2F;code&gt; 後就會得到 $(c_{n-1}, c_n)$，然後呼叫 &lt;code&gt;first&lt;&#x2F;code&gt; 得到 $c_{n-1}$。&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#eff1f5;color:#4f5b66;&quot;&gt;&lt;code&gt;&lt;span&gt;pred c3
&lt;&#x2F;span&gt;&lt;span&gt;→ first (c3 ss zz)                 
&lt;&#x2F;span&gt;&lt;span&gt;→ first (ss (ss (ss zz)))          
&lt;&#x2F;span&gt;&lt;span&gt;= first (ss (ss (ss (pair c0 c0))))
&lt;&#x2F;span&gt;&lt;span&gt;→ first (ss (ss (pair c0 c1)))     
&lt;&#x2F;span&gt;&lt;span&gt;→ first (ss (pair c1 c2))
&lt;&#x2F;span&gt;&lt;span&gt;→ first (pair c2 c3)
&lt;&#x2F;span&gt;&lt;span&gt;→ c2
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;hr &#x2F;&gt;
&lt;h2 id=&quot;4-lambda-abstractions&quot;&gt;4 Lambda Abstractions&lt;&#x2F;h2&gt;
&lt;p&gt;這裡列出本篇文章提到的所有 lambda abstractions。&lt;&#x2F;p&gt;
&lt;h3 id=&quot;4-1-combinators&quot;&gt;4.1 Combinators&lt;&#x2F;h3&gt;
&lt;pre style=&quot;background-color:#eff1f5;color:#4f5b66;&quot;&gt;&lt;code&gt;&lt;span&gt;id = λx.x
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;4-2-church-booleans&quot;&gt;4.2 Church Booleans&lt;&#x2F;h3&gt;
&lt;pre style=&quot;background-color:#eff1f5;color:#4f5b66;&quot;&gt;&lt;code&gt;&lt;span&gt;tru = λt. λf. t
&lt;&#x2F;span&gt;&lt;span&gt;fls = λt. λf. f
&lt;&#x2F;span&gt;&lt;span&gt;test = λb. λt. λf. b t f
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;4-3-church-numerals&quot;&gt;4.3 Church Numerals&lt;&#x2F;h3&gt;
&lt;pre style=&quot;background-color:#eff1f5;color:#4f5b66;&quot;&gt;&lt;code&gt;&lt;span&gt;c0 = λs. λz. z
&lt;&#x2F;span&gt;&lt;span&gt;c1 = λs. λz. s z
&lt;&#x2F;span&gt;&lt;span&gt;c2 = λs. λz. s (s z)
&lt;&#x2F;span&gt;&lt;span&gt;c3 = λs. λz. s (s (s z))
&lt;&#x2F;span&gt;&lt;span&gt;...
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;succ = λn. λs. λz. s (n s z)
&lt;&#x2F;span&gt;&lt;span&gt;plus = λm. λn. λz. m s (n s z)
&lt;&#x2F;span&gt;&lt;span&gt;times = λm. λn. m (plus n) c0
&lt;&#x2F;span&gt;&lt;span&gt;iszero = λn. n (λx. fls) tru
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;zz = pair c0 c0
&lt;&#x2F;span&gt;&lt;span&gt;ss = λp. pair (second p) (plus c1 (second p))
&lt;&#x2F;span&gt;&lt;span&gt;pred = λn. first (n ss zz)
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;hr &#x2F;&gt;
&lt;h2 id=&quot;reference&quot;&gt;Reference&lt;&#x2F;h2&gt;
&lt;ol&gt;
&lt;li&gt;Types and Programming Languages, Benjamin C. Pierce&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;zh.wikipedia.org&#x2F;zh-tw&#x2F;%CE%9B%E6%BC%94%E7%AE%97&quot;&gt;λ演算 - 維基百科，自由的百科全書&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
</content>
        
    </entry>
    <entry xml:lang="zh-tw">
        <title>大三上修課心得</title>
        <published>2025-01-06T00:00:00+00:00</published>
        <updated>2025-01-06T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              NatsuCamellia
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://natsucamellia.github.io/113-1-course-review/"/>
        <id>https://natsucamellia.github.io/113-1-course-review/</id>
        
        <content type="html" xml:base="https://natsucamellia.github.io/113-1-course-review/">&lt;p&gt;這學期我過得很充實，在課業負擔上拿捏地恰到好處，適當的課程量讓我能夠充分利用時間學習而又不至於被壓地喘不過氣。這學期總共修了 19 學分的課，其中有 9 學分的必修、6 學分的系上選修、3 學分的一般選修以及 1 學分的體育，除此之外我還旁聽了一門 3 學分的系上選修。&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;林忠緯 自動機與形式語言｜必修｜3 學分&lt;&#x2F;li&gt;
&lt;li&gt;洪士灝 計算機結構｜必修｜3 學分&lt;&#x2F;li&gt;
&lt;li&gt;蔡嘉穎 德文一上｜一般選修｜3 學分&lt;&#x2F;li&gt;
&lt;li&gt;王柏堯 計算邏輯簡介｜系上選修｜3 學分&lt;&#x2F;li&gt;
&lt;li&gt;逄愛君 計算機網路｜必修｜3 學分&lt;&#x2F;li&gt;
&lt;li&gt;陳健輝 離散數學｜系上選修｜3 學分 旁聽&lt;&#x2F;li&gt;
&lt;li&gt;李濬屹 平行程式設計｜系上選修｜3 學分&lt;&#x2F;li&gt;
&lt;li&gt;趙曉涵 網球初級｜體育｜1 學分&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;這 19 學分中只有必修的 9 學分和體育 1 學分是初選就選到的，選修的「計算邏輯簡介」是我為了填補週三上午空檔在加選階段選下的課，意外地很有收穫；「平行程式設計」則是因為有朋友想要修，且課程內容讓我覺得很有意思所以透過授權碼選上的，代價是退選同一時段的高等編譯器，也是我很想修的一門課；「德文一上」是為了完成今年的目標而選下的課，在選課系統上搶不贏大一新生，在最後採用人工加簽方式才簽到。&lt;&#x2F;p&gt;
&lt;p&gt;至於旁聽的課程「離散數學」，除了名額少選不上之外老師還不開放加簽，考慮到我已經從大一選到大三，擔心以後可能沒機會修課或旁聽，所以最後我選擇了旁聽這門課。&lt;&#x2F;p&gt;
&lt;p&gt;這學期除了課表上的課程之外，我還會研究程式語言，特別是關於編譯器理論我讀了 &lt;a href=&quot;https:&#x2F;&#x2F;craftinginterpreters.com&quot;&gt;Crafting Interpreters&lt;&#x2F;a&gt; 的直譯器章節。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;ping-fen-liang-chi&quot;&gt;評分量尺&lt;&#x2F;h2&gt;
&lt;p&gt;這裡的三星是正常的意思，不是韓國企業，相當於一般人說的四分。除了極力推薦或極度不推薦，否則不會給一星或五星。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;lin-zhong-wei-zi-dong-ji-yu-xing-shi-yu-yan&quot;&gt;林忠緯 自動機與形式語言&lt;&#x2F;h2&gt;
&lt;blockquote&gt;
&lt;p&gt;週一 10:20 ~ 13:10｜必修｜學分 3&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;綜合：★★★★☆&lt;&#x2F;li&gt;
&lt;li&gt;甜度：★★★★☆&lt;&#x2F;li&gt;
&lt;li&gt;涼度：★★★★☆&lt;&#x2F;li&gt;
&lt;li&gt;紮實：★★★★☆&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;&lt;strong&gt;上課方式&lt;&#x2F;strong&gt;：老師使用自製的投影片上課，內容從《Introduction to the Theory of Computation》擷取，使用全英文授課。上課錄影會在當天下午上傳至 NTU COOL 及 YouTube。&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;評分方式&lt;&#x2F;strong&gt;：總共有三次考試，前兩次各佔總成績 30%，期末考佔 40%，考試前老師會公布考試涵蓋的主題，可以很容易地針對主題準備考試，因此不會很困難。另外有三次不計分的作業分別對應到三次考試範圍，都是課堂例題的延伸，一份作業只要花兩三個小時就能做完。&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;心得&lt;&#x2F;strong&gt;：基本上我依賴課程錄影來學習，一方面時間比較有彈性，另一方面是老師的語速較慢，透過影片來學習可以自由調整速度。老師對課程內容的講解淺顯易懂，在大部分情況下聽過一次就能理解，搭配作業可以有效加深印象。令人讚嘆的是教學團隊的批改速度，作業有時在截止後的兩小時內就批改完成了，其中還有附帶批改回饋；考試的批改也都是在幾天之內完成，要知道作業和考試有大量的手寫題與畫圖題，這麼快的批改速度實在不容易。&lt;&#x2F;p&gt;
&lt;p&gt;關於內容，這堂課介紹了基礎計算理論，包括了有限狀態機、圖靈機、P 與 NP 等專業資訊背景的人所必備的知識。內容在實際的應用上比較不明顯，就我所了解它應用於編譯器實作（scanning 使用 context-free language）以及演算法設計中（計算邏輯簡介課程中的 LTL model checking 演算法使用有限狀態機），這對於我學習程式語言與編譯器理論有很重要的幫助，是我修課前沒想過的意外收穫。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;hong-shi-hao-ji-suan-ji-jie-gou&quot;&gt;洪士灝 計算機結構&lt;&#x2F;h2&gt;
&lt;blockquote&gt;
&lt;p&gt;週二 9:10 ~ 12:10｜必修｜學分 3&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;綜合：★★★☆☆&lt;&#x2F;li&gt;
&lt;li&gt;甜度：★★★★☆&lt;&#x2F;li&gt;
&lt;li&gt;涼度：★★★☆☆&lt;&#x2F;li&gt;
&lt;li&gt;紮實：★★★☆☆&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;&lt;strong&gt;上課方式&lt;&#x2F;strong&gt;：使用教科書《Computer Organization and Design RISC-V》（白算盤）出版方提供的投影片，中間休息時間不固定，下課時間偶爾延後。&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;評分方式&lt;&#x2F;strong&gt;：兩次考試各佔學期總成績 30% 與 40%，題型都是簡答題與計算題，閱讀題組會出現最新的科技報導，有很多專有名詞對於平常沒接觸的同學會比較困難一點，但也能看出老師對同學們的期待比較高。作業與隨堂考佔 30%，作業手寫部分是簡答題與計算題，是關於基本概念的問題，程式部分用 RISC-V Assembly 寫快速排序和用 Verilog 寫簡單的 ALU 與 CPU 邏輯，按照作業規格耐心寫就能得到高分。下課之前的隨堂考用來點名，題目是當天的上課內容且可以參考投影片作答，印象中只考了兩次。&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;心得&lt;&#x2F;strong&gt;：由於我對電腦硬體稍有了解，因此這堂課的內容對我而言算偏簡單，不過還是從中學到了一些重要的概念，特別是 Pipeline 的實作方式。上課的部分老師常常會將話題轉到最新的研究上，不確定是想要讓我們了解最新發展還是純粹是老師喜歡講，補充課外內容我覺得很好，但課內內容偏少，老師上課的節奏也偏慢。會這麼說的原因是我有看過課本，課本與投影片的內容密度有不小的差距，老師上課只講解了投影片的內容，沒有課本中的重要細節，猜測是出版方為了讓課本適用於一學期課程或是顧慮到著作權所做出的取捨。作業的程式部分我覺得很有趣，難度不高卻又能做出真正能夠運行的程式，非常有成就感。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;cai-jia-ying-de-wen-yi-shang&quot;&gt;蔡嘉穎 德文一上&lt;&#x2F;h2&gt;
&lt;blockquote&gt;
&lt;p&gt;週二 13:20 ~ 15:10｜系外選修｜學分 3&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;綜合：★★★★☆&lt;&#x2F;li&gt;
&lt;li&gt;甜度：★★★★☆&lt;&#x2F;li&gt;
&lt;li&gt;涼度：★★★★☆&lt;&#x2F;li&gt;
&lt;li&gt;紮實：★★★★☆&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;&lt;strong&gt;上課方式&lt;&#x2F;strong&gt;：使用的課本為《Netzwerk Neu A1.1》，老師會講解課本以及補充的內容，遇到對話時會讓同學兩兩練習，可以充分練習口說。&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;評分方式&lt;&#x2F;strong&gt;：經過期中調整後，平時成績佔 20%、期中考佔 35%、期末考佔 20%、期末影片佔 25%。期中考是很標準的語言課考試，不外乎是填空、重組、問答，期末考採線上測驗，有填空題和閱讀測驗，兩者的難度我覺得都沒有明顯的放水。期末影片是要用德文拍一支影片，主題有我的日常（1 人，5-8 分鐘）和德國料理製作（1-4 人，10-15 分鐘）等選擇。平時成績沒有明確標示但我想應該是作業和小考，作業只有一次，要念稿讓 AI 辨識成功，小考則有實體與線上測驗，實體考試都是填空題，線上測驗則是採和期末考一樣的形式。&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;心得&lt;&#x2F;strong&gt;：學期初時上課氣氛超嗨，看得出來大一同學都很有熱忱&lt;del&gt;還沒被台大課業教訓過&lt;&#x2F;del&gt;，唸個字母都能夠哄堂大笑，我覺得是一門很有趣的課。老師講話幽默風趣，上課會補充以前在德國的各種體驗像是參加烤肉派對、被邀請參加婚禮和一些文化差異，非常有意思。不過到了期中開始介紹較複雜的文法變化、上課步調開始加速後，我逐漸覺得德文不夠規則而不符合我的價值觀，所以到後半學期我打開考試機器，只求將單字文法好好背下來以拿到好成績。&lt;&#x2F;p&gt;
&lt;p&gt;我在期中考運氣好拿到高分，但是有同學反映期中考表現不好，想要調整配分，最後老師和助教出於勤能補拙的想法，決定將平時成績中的 10% 和期末考中的 15% 抽出來新增一份期末影片作業。雖然這不會讓我的期中考成績吃虧，但令我不滿意的是老師和助教並沒有和所有學生討論就修改評分方式，這和課程大綱上承諾的並不相同。如果我在選課時看到有佔分 25% 的影片作業就不會有這段評價了，因為我不喜歡做報告專題類型的作業，我想應該要落實課程大綱所明定的「由師生雙方議定」才是正確的做法，當然沒有及時發聲也是我的過失。&lt;&#x2F;p&gt;
&lt;p&gt;總體而言這門課老師上課有熱忱，內容豐富，若認真學習一定可以學到紮實的德文。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;wang-bo-yao-ji-suan-luo-ji-jian-jie&quot;&gt;王柏堯 計算邏輯簡介&lt;&#x2F;h2&gt;
&lt;blockquote&gt;
&lt;p&gt;週三 9:10 ~ 12:10｜系內選修｜學分 3&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;綜合：★★★★☆&lt;&#x2F;li&gt;
&lt;li&gt;甜度：★★★★☆&lt;&#x2F;li&gt;
&lt;li&gt;涼度：★★★★☆&lt;&#x2F;li&gt;
&lt;li&gt;紮實：★★★★☆&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;&lt;strong&gt;上課方式&lt;&#x2F;strong&gt;：使用的教科書為《Logic in Computer Science》，老師使用自製投影片與搭配板書上課。&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;評分方式&lt;&#x2F;strong&gt;：作業 50%，課程的四章中每章都會搭配一份手寫證明以及一份程式實作作業，手寫作業就是課堂中教過的例題對應的練習題，約兩題的份量；而程式作業則會根據課程內容使用不同的工具，包含使用 &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;niklasso&#x2F;minisat&quot;&gt;SAT Solver&lt;&#x2F;a&gt; 定義鴿籠問題、使用數學證明工具 &lt;a href=&quot;https:&#x2F;&#x2F;coq.inria.fr&quot;&gt;Coq&lt;&#x2F;a&gt; 證明中國剩餘定理以及使用 &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;Z3Prover&#x2F;z3&quot;&gt;Z3 Prover&lt;&#x2F;a&gt; 證明從一段 &lt;a href=&quot;https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;McCarthy_91_function&quot;&gt;McCarthy 91&lt;&#x2F;a&gt; 程式碼中觀察出的性質的正確性。期中考與期末考各佔 20%，可以查看離線的紙本與電子資源，題型都是簡單的數學證明。最後 10% 是出席成績。&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;心得&lt;&#x2F;strong&gt;：內容有一階邏輯、少量二階邏輯、程式驗證以及 Model Checking，老師上課會仔細地講解投影片的每個細節，聽不懂的地方可以隨時發問，老師都願意重新解釋一次。另外每章的最後老師都會介紹一個關於該主題的數學工具，包括 SAT Solver、Proof Assistant、Model Checker 等工具，我覺得接觸新工具很有趣，尤其是解出基礎卻有點挑戰性的題目時很有成就感，只能說老師拿捏題目的難度很準確。&lt;&#x2F;p&gt;
&lt;p&gt;這門課對於數學證明的邏輯很有幫助，在學習的過程中可以訓練如何嚴謹地一步一步推向結論，以及了解不同的邏輯表達的差異。另外這門課也意外地對我學習程式語言理論很有幫助，上課的內容都和程式語言理論密切相關。對於程式語言有興趣的同學，我會極力推薦這門課。&lt;&#x2F;p&gt;
&lt;p&gt;附圖：數學證明工具 Coq&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;natsucamellia.github.io&#x2F;113-1-course-review&#x2F;.&#x2F;coq.png&quot; alt=&quot;數學證明工具 Coq&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;h2 id=&quot;pang-ai-jun-ji-suan-ji-wang-lu&quot;&gt;逄愛君 計算機網路&lt;&#x2F;h2&gt;
&lt;blockquote&gt;
&lt;p&gt;週三 14:20 ~ 17:20｜必修｜學分 3&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;綜合：★★★☆☆&lt;&#x2F;li&gt;
&lt;li&gt;甜度：★★★★☆&lt;&#x2F;li&gt;
&lt;li&gt;涼度：★★☆☆☆&lt;&#x2F;li&gt;
&lt;li&gt;紮實：★★★☆☆&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;&lt;strong&gt;上課方式&lt;&#x2F;strong&gt;：使用的教科書為《Computer Networking: a Top Down Approach》，上課時老師使用出版方提供的投影片。&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;評分方式&lt;&#x2F;strong&gt;：作業 40%，包括了問答題與程式題，第一次的程式題是手刻 HTTP 伺服器，這份作業雖然時間充足，但依然是個複雜的作業，因此約有 10 人在此次作業後停修；第二次是實作 reliable transfer，這次有給 Python 虛擬碼，用 C 語言耐心按照規格實作即可。期中與期末考各佔 20% 與 30%，題目都是問答題，大多問名詞解釋與優缺點比較，如簡述 DNS 運作原理此類的問題。課堂參與佔 10%。&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;心得&lt;&#x2F;strong&gt;：首先是老師的姓氏唸作「旁」，這可能是每個人第一次看到這個字，更不用說作為姓氏出現。我在大一下修過了 NASA（網路管理與系統管理），因此這堂課的內容大部分都有概念了，所以對我而言是簡單的課。透過這堂課我學到了網路五層中的應用層、傳輸層和網路層的概念，印象最深刻的是 routing 的原理，因為我以前搞不懂為什麼我的資料可以知道怎麼走到 Google 伺服器。而作業的 HTTP 伺服器很有意思，雖然不是課程的重點，但是他作為附錄讓我學習到了 HTTP 的標頭結構，不過這們作業還是過於複雜，估計花了我超過 20 小時，因為要閱讀 HTTP 規範、處理標頭、檔案 I&#x2F;O 等各種實作細節，作為計算機網路課程的作業有點超出範圍了。&lt;&#x2F;p&gt;
&lt;p&gt;老師上課的講解詳細但速度偏慢，雖說如此但老師每個禮拜還是會上完預定的進度，可以說是「預期中」地慢。但是對於不熟悉網路的同學而言，老師的講解是漸進式的且搭配許多生動比喻及實際例子，非常容易理解。值得稱讚的是用心的助教團，上課前後以及中間的下課時間都會來教室和同學聊天、回答作業和其他問題，基本上就是小型的 TA hour，課後還會在 NTU COOL 上回覆同學的問題，這是我看過最親近學生的助教團了。&lt;&#x2F;p&gt;
&lt;p&gt;整體而言這是一堂中規中矩的計算機網路課，需要花點時間寫作業，且推薦用心的助教團。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;chen-jian-hui-li-san-shu-xue&quot;&gt;陳健輝 離散數學&lt;&#x2F;h2&gt;
&lt;blockquote&gt;
&lt;p&gt;週四 10:20 ~ 13:10｜系內選修｜學分 3｜旁聽&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;綜合：★★★☆☆&lt;&#x2F;li&gt;
&lt;li&gt;甜度：未知&lt;&#x2F;li&gt;
&lt;li&gt;涼度：★★★★☆&lt;&#x2F;li&gt;
&lt;li&gt;紮實：★★★☆☆&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;&lt;strong&gt;上課方式&lt;&#x2F;strong&gt;：老師使用自編的講義投影片搭配板書上課。&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;評分方式&lt;&#x2F;strong&gt;：每週小考佔總成績 40%，老師會在第三節課預留 25 分鐘考試，考上週內容的基本題。其中期末考共佔 60%，題型為數學證明。因為我只有旁聽沒有參與考試，所以甜度不清楚。&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;心得&lt;&#x2F;strong&gt;：我覺得這堂課有學到一些基礎的知識，包括排列組合技巧、集合論、圖論演算法等主題，只不過老師上課的速度比較慢，內容較少且連貫性不足，多是零碎的知識，不容易抓到重點。老師上課時偶爾會吟詩作對、思考人生，常常會偏離課程內容，到學期末時還有很多投影片內容沒上到。因此我覺得在紮實度方面略顯不足，不是很推薦這門課。不過以後也修不到這門課了，因為這學期是老師最後一學期任教，可能是因為這個這樣導致教學風格轉變。在最後一堂課時還有和老師及他的家人們拍一張大合照，能夠經歷到老師退休的大場面很難得，運氣真的很好。&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;natsucamellia.github.io&#x2F;113-1-course-review&#x2F;.&#x2F;discrete_math.jpg&quot; alt=&quot;大合照&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;另外這是第一堂讓我邊上課邊吃午餐的課，因為下課後要接著上德文，我想這種第一次也是值得記錄的。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;li-jun-yi-ping-xing-cheng-shi-she-ji&quot;&gt;李濬屹 平行程式設計&lt;&#x2F;h2&gt;
&lt;blockquote&gt;
&lt;p&gt;週五 9:10 ~ 12:10｜系內選修｜學分 3&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;綜合：★★★★☆&lt;&#x2F;li&gt;
&lt;li&gt;甜度：★★★★☆&lt;&#x2F;li&gt;
&lt;li&gt;涼度：★★☆☆☆&lt;&#x2F;li&gt;
&lt;li&gt;紮實：★★★★☆&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;&lt;strong&gt;上課方式&lt;&#x2F;strong&gt;：老師使用自製投影片上課，使用全英文授課。&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;評分方式&lt;&#x2F;strong&gt;：作業佔 50%，每份作業會對應到課程中的一個主題，總共有 5 份作業。每份作業會有公開的程式執行速度排行榜，官方說法是排行會佔小部分的成績；而程式完成後需要寫分析報告，簡述如何實作、分析執行時間等。期中期末考各佔 15%，題型是簡答題，大部分都是概念題，但有少部分關於平行 API 以及手寫程式碼的問題。期末報告佔 20%，2~3 人一組選擇有興趣的主題將其平行化，需要上台發表與繳交書面報告。&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;心得&lt;&#x2F;strong&gt;：這門課的內容包括了常見的平行程式 API 如 OpenMP、MPI、CUDA 和 AMD 的 HIP，老師上課會講解設計平行程式時需要注意的地方，作業則先是透過平行化讓程式在時間內輸出正確結果，接著應用老師上課提到的技巧讓程式跑得更快。作業雖然都要花不少時間做，但是在這過程中我收穫很多，除了熟悉了平行程式 API 外，也學到了 CPU 與 GPU 設計上與應用上的差異，CPU 像是少量的超級賽亞人在做計算，可以運行很複雜的指令；而 GPU 則是數以千計的廉價勞工做計算，雖然只能執行簡單的指令但是可以用數量優勢贏過 CPU。另外也親身體驗了計算機結構的重要知識，如快取、SIMD、prefetching 等技術能夠多大程度影響程式的執行速度。&lt;&#x2F;p&gt;
&lt;p&gt;這堂課主要為大二設計，內容都會從頭講解一次，不過老師有時候會忘記而直接帶過專業術語，例如作業系統的術語 preemptive。期中有兩次的 NVIDIA Lab，需要在課後時間到 NVIDIA 的網站上學他們的 CUDA API。那課堂剩下的時間老師繼續上他的課嗎？不是的，NVIDIA 為了提供我們學習 CUDA 的誘因，所以提供了一些經費讓我們買食物，因此課堂上就是吃披薩喝可樂。每個人都能吃 4~5 片披薩，而且還是芝心披薩，可見 NVIDIA 行銷毫不手軟，&lt;del&gt;以至於在同學的要求下有了第二個 Lab&lt;&#x2F;del&gt;。&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;natsucamellia.github.io&#x2F;113-1-course-review&#x2F;.&#x2F;pizza.jpg&quot; alt=&quot;芝心披薩&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;h2 id=&quot;zhao-xiao-han-wang-qiu-chu-ji&quot;&gt;趙曉涵 網球初級&lt;&#x2F;h2&gt;
&lt;blockquote&gt;
&lt;p&gt;週五 13:20 ~ 15:10｜體育｜學分 1&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;綜合：★★★★☆&lt;&#x2F;li&gt;
&lt;li&gt;甜度：★★★★★&lt;&#x2F;li&gt;
&lt;li&gt;涼度：★★★★★&lt;&#x2F;li&gt;
&lt;li&gt;紮實：★★★☆☆&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;&lt;strong&gt;上課方式&lt;&#x2F;strong&gt;：課前先看 NTU COOL 上老師預錄的動作講解影片，課程中老師會重新講解一次並帶著大家一起做，剩下的時間就分組練習。&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;評分方式&lt;&#x2F;strong&gt;：考試 40%，要考正反拍擊球以及發球，可以補考但成績上限會降低。作業 30% 包括課前影片測驗、心得與建議等，只要有做就有分。剩下 30% 為出席成績。&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;心得&lt;&#x2F;strong&gt;：整體上來說是一門甜涼的體育課，課餘時間只要看看幾分鐘的預習影片即可，沒有什麼壓力。老師考量到大家都是初學者，所以課程內容比較基礎且比較少，因此紮實度普通。這學期比較可惜的時碰到多次的假日、老師公假以及雨天，導致實際在戶外打球的次數變得很少，考試因此只考了正反拍而沒有考發球。我在這堂課學到了簡單的網球動作，不過和先前說的一樣練習的時間不夠，所以到學期末也很難和同學連續對打五顆球以上，學習效果不佳令人感到可惜。&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="zh-tw">
        <title>2024 回顧</title>
        <published>2024-12-31T00:00:00+00:00</published>
        <updated>2024-12-31T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              NatsuCamellia
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://natsucamellia.github.io/2024-recap/"/>
        <id>https://natsucamellia.github.io/2024-recap/</id>
        
        <content type="html" xml:base="https://natsucamellia.github.io/2024-recap/">&lt;p&gt;2024 的年末悄悄到來，現在是值得反思的時間。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;fan-si&quot;&gt;反思&lt;&#x2F;h2&gt;
&lt;p&gt;首先是今年的新年目標，六項當中只完成了兩項，分別是學習新外語和記錄目標，是我認為最簡單的兩個目標，今年基本上沒有認真地達成目標。另外我在文章的寫作上也變得懶惰了，只有一到八月的七篇文章。可能的原因為隱藏了大多數文章，這些文章都是比較貼近我的個人生活的文章，一旦將這些文章隱藏後我就失去了寫文章的動力，覺得寫了沒辦法得到看著文章數量增加的成就感，另外技術性文章讓人懶得動筆，最重要的是就連新年目標都被我隱藏了，所以明年我打算將所有文章公開。&lt;&#x2F;p&gt;
&lt;p&gt;現在來逐條檢視去年的新年目標：&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;考取多益金色證書：沒有達成。首先是準備多益考試需要時間與心力，而且我到現在還是找不到考多益的理由，多益報名費不但昂貴，且學校的進階英文免修有獨立的免費考試可參加，不久後我將參加進階英文免修考試。&lt;&#x2F;li&gt;
&lt;li&gt;在大三上學期選修不同的外語課程：達成，我學了德文。這個目標我其實有一直記在心裡，所以我在大三上學期的選課刻意選了外語，甚至還祭出了我大學生涯中第一次人工加簽。至於為什麼選擇德文，是因為我想要學習歐語，而歐語中較容易學習且和理工比較有關係的是德文，畢竟德國以前是工業與科學大國，我現在會唸歐拉的名字了。&lt;&#x2F;li&gt;
&lt;li&gt;用日文寫自我介紹與一篇文章放在網站：沒有達成。日文在大三開始之後就中斷了，因為大三課程太忙了，詳情見之後發布的大三上回顧。&lt;&#x2F;li&gt;
&lt;li&gt;每天睡前用鋼筆寫下一件感謝的事與學到的事：沒有達成。同樣是太忙錄，而且要在想睡的時候拿出鋼筆寫字實在不人性。&lt;&#x2F;li&gt;
&lt;li&gt;用《原子習慣》的方法，培養一項新習慣：沒有達成。我到現在還是沒有想到要培養什麼習慣。&lt;&#x2F;li&gt;
&lt;li&gt;把以上五項目標，用中英日三語記在隨時看得見的地方：達成。我想這件事並不難，印象中前幾天就完成了。&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;xin-nian-mu-biao&quot;&gt;新年目標&lt;&#x2F;h2&gt;
&lt;p&gt;今年選擇比較有意義的目標，並且不要設下太多目標。&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;每週運動一次：我平常都沒在運動，這也是想做很久的事了。&lt;&#x2F;li&gt;
&lt;li&gt;讀完《認識電影》：弟弟上課用的書，我對電影的暗示很有興趣，打算研究一下。&lt;&#x2F;li&gt;
&lt;li&gt;日檢 N2：日文是我重要的追求，今年已經讀完 N3 了，經過一個學期的荒廢，要把 N3 鞏固並學習 N2。&lt;&#x2F;li&gt;
&lt;li&gt;每個月至少寫一篇文章。&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;為了記得達成目標，我會把目標放在電腦的備忘錄中，這是我最常看的一個地方。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;hui-gu&quot;&gt;回顧&lt;&#x2F;h2&gt;
&lt;p&gt;接著是每個月發生的重點事件橋段，這裡容我先感嘆去年的感嘆：&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;令我感嘆的是，許多事要不是當初有用文字記錄下來，現在的我就無法記得當初發生了哪些事，今後的恐怕也無從回想。&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;很遺憾的是我沒有用文字記錄下來，真的是無從回想。&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;一月第一次坐朋友的車出去玩，當天去打了保齡球和撞球。&lt;&#x2F;li&gt;
&lt;li&gt;二月參加了台北國際書展，買了《蘇菲的世界》這套書，我很喜歡這套書推薦給讀者。&lt;&#x2F;li&gt;
&lt;li&gt;六月得知學期成績全部 A+，可惜還是沒有書卷獎。&lt;&#x2F;li&gt;
&lt;li&gt;七月為了獎學金到麥寮圖書館當志工，工作量少偏無聊。&lt;&#x2F;li&gt;
&lt;li&gt;八月國外的家人到台灣玩，規劃了幾天在台北的遊玩行程。&lt;&#x2F;li&gt;
&lt;li&gt;九月在台灣大哥大辦了學生方案 399 元 21M 吃到飽，挺便宜的。&lt;&#x2F;li&gt;
&lt;li&gt;十一月吃了至今最貴的導生宴，在善導寺旁的御景和風。&lt;&#x2F;li&gt;
&lt;li&gt;十二月父親過世，喪禮辦在期末考週，台北雲林來回奔波勞神傷財。&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
</content>
        
    </entry>
    <entry xml:lang="zh-tw">
        <title>最長公因字串</title>
        <published>2024-08-18T00:00:00+00:00</published>
        <updated>2024-08-18T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              NatsuCamellia
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://natsucamellia.github.io/greatest-common-divisor-of-string/"/>
        <id>https://natsucamellia.github.io/greatest-common-divisor-of-string/</id>
        
        <content type="html" xml:base="https://natsucamellia.github.io/greatest-common-divisor-of-string/">&lt;p&gt;最近在 LeetCode 上面看到一題簡單卻有意思的題目 &lt;a href=&quot;https:&#x2F;&#x2F;leetcode.com&#x2F;problems&#x2F;greatest-common-divisor-of-strings&#x2F;?envType=study-plan-v2&amp;amp;envId=leetcode-75&quot;&gt;Greatest Common Divisor of Strings - LeetCode&lt;&#x2F;a&gt;，除了遍歷所有字首和使用輾轉相除法的解法外，我還看到了一個需要一些思考與沒那麼 trivial 的解法：&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;kotlin&quot; style=&quot;background-color:#eff1f5;color:#4f5b66;&quot; class=&quot;language-kotlin &quot;&gt;&lt;code class=&quot;language-kotlin&quot; data-lang=&quot;kotlin&quot;&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;class &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;Solution&lt;&#x2F;span&gt;&lt;span&gt; {
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;fun &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;gcdOfStrings&lt;&#x2F;span&gt;&lt;span&gt;(str1: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;String&lt;&#x2F;span&gt;&lt;span&gt;, str2: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;String&lt;&#x2F;span&gt;&lt;span&gt;): &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;String&lt;&#x2F;span&gt;&lt;span&gt; {
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;if&lt;&#x2F;span&gt;&lt;span&gt; (str1 + str2 != str2 + str1) {
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;        }
&lt;&#x2F;span&gt;&lt;span&gt;        
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;return&lt;&#x2F;span&gt;&lt;span&gt; str1.substring(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span&gt;, gcd(str1.length, str2.length))
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;fun &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;gcd&lt;&#x2F;span&gt;&lt;span&gt;(a: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;Int&lt;&#x2F;span&gt;&lt;span&gt;, b: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;Int&lt;&#x2F;span&gt;&lt;span&gt;) : &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;Int&lt;&#x2F;span&gt;&lt;span&gt; {
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;if&lt;&#x2F;span&gt;&lt;span&gt; (b == &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span&gt;) {
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;return&lt;&#x2F;span&gt;&lt;span&gt; a
&lt;&#x2F;span&gt;&lt;span&gt;        } &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;else&lt;&#x2F;span&gt;&lt;span&gt; {
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;return&lt;&#x2F;span&gt;&lt;span&gt; gcd(b, a % b)
&lt;&#x2F;span&gt;&lt;span&gt;        }
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;blockquote&gt;
&lt;p&gt;以下推導皆基於 $S_1, S_2$ 為&lt;strong&gt;有限非空字串&lt;&#x2F;strong&gt;的假設。&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;h2 id=&quot;pan-duan-gong-yin-zi-chuan-shi-fou-cun-zai&quot;&gt;判斷公因字串是否存在&lt;&#x2F;h2&gt;
&lt;p&gt;首先我們可以觀察，如果公因字串 $C$ 存在的話，兩個字串都將是由多個 $C$ 串接起來的字串（CCC...），因此 $S_1 + S_2 = S_2 + S_1$；反過來說如果 $S_1 + S_2 \ne S_2 + S_1$ 就代表它們沒有公因字串，所以我們可以直接回傳空字串。&lt;&#x2F;p&gt;
&lt;p&gt;那 $S_1 + S_2 = S_2 + S_1$ 就&lt;strong&gt;一定有&lt;&#x2F;strong&gt;公因字串嗎？如果是這個樣子的話，那我們需要證明以下命題：&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;$S_1 + S_2 = S_2 + S_1$ $\iff$ $S_1, S_2$ 有公因字串 $C$&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;$\impliedby$ 方向已經在上面證明過了，現在證明 $\implies$ 方向。&lt;&#x2F;p&gt;
&lt;h3 id=&quot;s-1-s-2-s-2-s-1-implies-s-1-s-2-you-gong-yin-zi-chuan-c&quot;&gt;$S_1 + S_2 = S_2 + S_1$ $\implies$ $S_1, S_2$ 有公因字串 $C$&lt;&#x2F;h3&gt;
&lt;p&gt;我們使用數學歸納法，以 $S_1 + S_2$ 的字串長度 $L$ 為變數。&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;起始步驟&lt;&#x2F;strong&gt;：當 $L = 2$，則 $S_1$ 與 $S_2$ 的長度皆為 $1$，很明顯 $S_1 = S_2 = C$。&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;推遞步驟&lt;&#x2F;strong&gt;：假設在 $2 \le L &amp;lt; k$ 時皆成立，當 $L = k$ 時，若 $S_1$ 與 $S_2$ 長度相同，可得 $S_1 = S_2 = C$；反之不失一般性假設 $S_1$ 比較長，我們用 &lt;code&gt;()&lt;&#x2F;code&gt; 代表 $S_1$、&lt;code&gt;[]&lt;&#x2F;code&gt; 代表 $S_2$，則 $S_1 + S_2 = S_2 + S_1$ 可以這樣表示：&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;$S_1 + S_2$：&lt;code&gt;(________)[___]&lt;&#x2F;code&gt;&lt;&#x2F;li&gt;
&lt;li&gt;$S_2 + S_1$：&lt;code&gt;[___](________)&lt;&#x2F;code&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;我們把兩個 $S_1$ 重疊的地方用 $x$ 表示，$S_2$ 用 $y$ 表示：&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;$S_1 + S_2$：&lt;code&gt;( y || x )[ y ]&lt;&#x2F;code&gt;&lt;&#x2F;li&gt;
&lt;li&gt;$S_2 + S_1$：&lt;code&gt;[ y ]( x || y )&lt;&#x2F;code&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;我們得到 $S_1 = y + x$ （上式）且 $S_1 = x + y$ （下式），也就是 $y + x = x + y$，又 $x, y$ 皆為非空字串且 $x + y$ 的長度小於 $k$，所以根據假設（在 $2 \le L &amp;lt; k$ 時皆成立）我們知道 $x, y$ 兩字串有公因字串 $z$。&lt;&#x2F;p&gt;
&lt;p&gt;因為 $z$ 是 $x, y$ 的因字串，所以 $z$ 是 $S_1 = x+y$ 的因字串也是 $S_2 = y$ 的因字串，最終得到 $z$ 是 $S_1, S_2$ 的公因字串，完成證明：&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;$S_1 + S_2 = S_2 + S_1$ $\implies$ $S_1, S_2$ 有公因字串 $C$&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;再回頭看一次程式碼：&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;kotlin&quot; style=&quot;background-color:#eff1f5;color:#4f5b66;&quot; class=&quot;language-kotlin &quot;&gt;&lt;code class=&quot;language-kotlin&quot; data-lang=&quot;kotlin&quot;&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;if&lt;&#x2F;span&gt;&lt;span&gt; (str1 + str2 != str2 + str1) {
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;return&lt;&#x2F;span&gt;&lt;span&gt; str1.substring(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span&gt;, gcd(str1.length, str2.length))
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;如果 $S_1 + S_2 = S_2 + S_1$ 我們就可以肯定地說&lt;strong&gt;公因字串存在&lt;&#x2F;strong&gt;。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;xun-zhao-zui-chang-gong-yin-zi-chuan&quot;&gt;尋找最長公因字串&lt;&#x2F;h2&gt;
&lt;p&gt;公因字串存在且 $S_1, S_2$ 長度有限，因此也存在一個最長公因字串。&lt;&#x2F;p&gt;
&lt;p&gt;令 $S_1 = nC, S_2 = mC$，代表 $S_1, S_2$ 各由 $n, m$ 個任意公因字串 $C$ 串接而成。我們想一下就會發現最長公因字串就是由 $\gcd(n, m)$ 個 $C$ 串接而成，因為如果把 $C$ 想成數字 $1$，我們就會發現它根本就是&lt;strong&gt;最大公因數&lt;&#x2F;strong&gt;問題。&lt;&#x2F;p&gt;
&lt;p&gt;所以 &lt;code&gt;str1.substring(0, gcd(str1.length, str2.length))&lt;&#x2F;code&gt; 就是最長公因字串。&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="zh-tw">
        <title>大二下修課心得</title>
        <published>2024-08-11T00:00:00+00:00</published>
        <updated>2024-08-11T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              NatsuCamellia
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://natsucamellia.github.io/112-2-course-review/"/>
        <id>https://natsucamellia.github.io/112-2-course-review/</id>
        
        <content type="html" xml:base="https://natsucamellia.github.io/112-2-course-review/">&lt;p&gt;這學期共修了 21 學分，因為還有剩的探索學分，所以嘗試了比較不同的領域，包括民法概要乙和建築導論。生活體感比起之前都還要輕鬆，原本以為要花很多時間來處理這 21 學分，到最後卻找到甜蜜點，用較少的時間得到較好的學習效果。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;ping-fen-liang-chi&quot;&gt;評分量尺&lt;&#x2F;h2&gt;
&lt;p&gt;這裡的三星是正常的意思，相當於一般人說的四分，不是韓國企業。除了極力推薦或極度不推薦，否則不會給一星或五星。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;xu-jun-heng-you-yong-chu-ji&quot;&gt;許君恆 游泳初級&lt;&#x2F;h2&gt;
&lt;blockquote&gt;
&lt;p&gt;週一 10:20 ~ 12:10｜體育｜學分 1&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;綜合：★★★☆☆&lt;&#x2F;li&gt;
&lt;li&gt;甜度：★★★★☆&lt;&#x2F;li&gt;
&lt;li&gt;涼度：★★★☆☆&lt;&#x2F;li&gt;
&lt;li&gt;紮實：★★★☆☆&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;&lt;strong&gt;上課方式&lt;&#x2F;strong&gt;：10:30 換完裝在泳池旁集合，老師點完名之後在岸上講解當天的課程內容，接著讓同學暖身、沖水再下水。下水後按照老師在岸上的指令練習，約於 11:40 結束，這時候同學可以選擇自行練習和老師指導到 12:00，或是直接上岸離開。&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;評分方式&lt;&#x2F;strong&gt;：出席狀況（20%）、課堂參與（20%）、四方打水考試 25M（20%）、自由式 50M（20%）、蛙式 50M（20%）。出席方面事假病假會扣分、不可以曠課三次、請假次數不可以超過 1&#x2F;3 課堂數。每次考試各有 20 分，只要正確游完都可以拿到基本分 12 分，動作標準一點（不用到專業）就可以拿到 18~20 分。&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;心得&lt;&#x2F;strong&gt;：我本身屬於較少運動且肺活量極差，1600 公尺要跑 12 分鐘的人，再加上我完全不會游泳，剛開始的四方打水 25 公尺簡直要我命。考試當天不上課，考完後就可以先離開，那天我前三個到後三個走，考到一半腳還抽筋一次，可以用落後來形容。後來意識到這樣下去 50 公尺肯定會嗆死，於是每個禮拜我都會播一兩天到游泳池練習，加強自己的換氣技巧，而我的心得是自由式左右手各划一次後就換氣，因為肺活量真的太低了，一口氣沒有辦法划兩輪。經過練習後，學期末成功游完自由式和蛙式 50 公尺了！&lt;&#x2F;p&gt;
&lt;p&gt;美中不足的是，老師比較少下水實際示範，大部分都是在岸上比劃動作，對於不會游泳的人而言較為抽象。&lt;&#x2F;p&gt;
&lt;p&gt;我強烈建議還不會游泳的人都應該要在大學學游泳，個人認為是很重要的技能，而且學會之後會覺得對自己身體的掌握度上升不少，非常有成就感。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;shi-ji-sheng-zuo-ye-xi-tong&quot;&gt;施吉昇 作業系統&lt;&#x2F;h2&gt;
&lt;blockquote&gt;
&lt;p&gt;週二 9:10 ~ 12:10｜必修｜學分 3&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;綜合：★★★★☆&lt;&#x2F;li&gt;
&lt;li&gt;甜度：★★★☆☆&lt;&#x2F;li&gt;
&lt;li&gt;涼度：★★★☆☆&lt;&#x2F;li&gt;
&lt;li&gt;紮實：★★★★☆&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;&lt;strong&gt;上課方式&lt;&#x2F;strong&gt;：老師使用自製投影片上課，內容對應課本 《Operating System Concepts》（恐龍書）。上課錄影會在一兩天後放到 NTU COOL。&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;評分方式&lt;&#x2F;strong&gt;：第一週發布第一份作業 Machine Problem 0（4%），內容是建置整學期作業用的環境 xv6。之後還有四份作業 MP1~MP4，每份作業占 10%，助教會把檔案與範例測資的測試腳本放在 GitHub，同學下載完成後再傳到 NTU COOL。期中考和期末考各占 28%，內容有名詞定義、選擇題、填充題和手算演算法等，基本上都是課本內容的簡單延伸，難度其實是在於範圍的廣度。&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;心得&lt;&#x2F;strong&gt;：我個人對這門課的內容算有興趣，我會搭配著課本看一次，一個學期下來覺得學了不少。我很喜歡作業中的測試腳本，自動測試全部跑過的感覺非常爽快。考試的部分題目不會很多，題敘大部分都簡短易懂，有好好準備都可以拿高分。上課的內容因為都有錄影，因此完全不出席只看錄影也是好選擇。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;chen-jun-ming-mi-ma-xue-dao-lun&quot;&gt;陳君明 密碼學導論&lt;&#x2F;h2&gt;
&lt;blockquote&gt;
&lt;p&gt;週二 15:30 ~ 18:20｜系外選修｜學分 3&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;綜合：★★★★☆&lt;&#x2F;li&gt;
&lt;li&gt;甜度：★★★★☆&lt;&#x2F;li&gt;
&lt;li&gt;涼度：★★★★☆&lt;&#x2F;li&gt;
&lt;li&gt;紮實：★★★★☆&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;&lt;strong&gt;上課方式&lt;&#x2F;strong&gt;：上課內容參考 Christof Paar 和 Jan Pelzl 寫的《Understanding Cryptography》 這本書，上課前先看老師預錄的教學影片，課堂中老師會回答同學在 Slido 上的問題，接著簡單講下週內課程內容的重點，最後預留半小時來隨堂考本週的課程內容。&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;評分方式&lt;&#x2F;strong&gt;：隨堂考取六次高分共占 24%，大多有考古題可以練習，題型都和考古題差不多。作業會在期中考後發布，內容大多是用電腦算加解密，很有趣，從 21 題中選 12 題寫，提早教加 5% 分數，最多得 160 分占 16%。期中期末考各 30%，有選擇題、填充題和手寫題，也是有考古題可以準備，花點時間就能拿到高分。&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;心得&lt;&#x2F;strong&gt;：這堂課的內容涵蓋了密碼學的許多基礎加密標準，包括 DES、AES、RSA 等資訊領域常聽到的加密方法，更棒的是在作業與考試中都有手算的環節，能夠親身體會這些加密方法的計算過程。上課的時候老師會分享許多密碼學的八卦，都還滿有趣的。另外這堂課前中期會用到不少抽象代數，建議要有對代數或是線性代數的基本了解。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;li-su-hua-min-fa-gai-yao-yi&quot;&gt;李素華 民法概要乙&lt;&#x2F;h2&gt;
&lt;blockquote&gt;
&lt;p&gt;週三 9:10 ~ 12:10｜系外選修｜學分 3&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;綜合：★★★★☆&lt;&#x2F;li&gt;
&lt;li&gt;甜度：★★★★☆&lt;&#x2F;li&gt;
&lt;li&gt;涼度：★★★★★&lt;&#x2F;li&gt;
&lt;li&gt;紮實：★★★★☆&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;&lt;strong&gt;上課方式&lt;&#x2F;strong&gt;：9:20 上課，中間下課時間調整為各 10 分鐘。課本使用陳聰富老師的《民法概要》，可以買課本或是抄筆記，老師會從書中挑選較貼近生活的部分講，如買賣、租賃等。&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;評分方式&lt;&#x2F;strong&gt;：期中期末考各 40%，剩下的 20% 用來調分。考試內容為老師上課上過的地方與範例情境，要自己記錄老師上了哪些內容。題型有 30 分選擇和大約 80 分的申論，最高 100 分。申論部分考量到同學非法律專業，只要觀念對就好而不強求用字精確，全班平均大約落在 85 分，我認為給分算是大方。&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;心得&lt;&#x2F;strong&gt;：這門課可以學到很多民法的知識，尤其是老師會叮嚀我們以後從事法律行為時必須要注意的陷阱，避免勞神傷財，我認為這堂課很適合作為通識課修。此外這門課沒有作業，只需要認真聽老師生動的上課內容就能考試，所以涼度給到五星。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;xu-si-qin-quan-qiu-tong-shi-jiang-zuo-jue-ce-zhe-de-wei-ji-chu-li-ji-zhi&quot;&gt;徐思勤 全球通識講座——決策者的危機處理機制&lt;&#x2F;h2&gt;
&lt;blockquote&gt;
&lt;p&gt;週四 10:20 ~ 12:10｜通識 A5｜學分 2&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;綜合：★★☆☆☆&lt;&#x2F;li&gt;
&lt;li&gt;甜度：★★★★☆&lt;&#x2F;li&gt;
&lt;li&gt;涼度：★★★☆☆&lt;&#x2F;li&gt;
&lt;li&gt;紮實：★★☆☆☆&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;&lt;strong&gt;上課方式&lt;&#x2F;strong&gt;：每週會邀請在政府部門任職過的不同人物來演講，包含前行政院長毛治國、前行政院副院長杜紫軍等人，講述任內遇到的問題以及如何解決。上課前要簽到，回家後再下週上課前繳交一份 600 至 1200 字的心得報告。每四週會有一次綜合討論，當天前三週的講者會到教室，提出問題後讓台下同學分組討論。&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;評分方式&lt;&#x2F;strong&gt;：心得報告占 70%，有寫的話應該都有 80 分以上，但聽說寫愈多字愈多分。綜合討論 20%，細節怎麼算的不知道。最後出席占 10%，一樣不知道怎麼算。&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;心得&lt;&#x2F;strong&gt;：來演講的政治人物都給我和組員們一種宣揚政績的感覺，因為他們提出的案例都只有好的、成功的，卻沒有失敗的一面，而我認為從失敗學習才是更珍貴的。另外有部分的講者演講內容較為空洞抽象，台下同學其實聽得一知半解，心得報告只能一起搞抽象，常常寫到後面我也不知道自己寫了什麼。這堂課並不是講者不專業，而是講者可能不夠擅長豐富的表達，而課後的心得報告我也是絞盡腦汁才能完成，整體而言這堂課太水不推薦。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;hong-yi-ping-ji-lu&quot;&gt;洪一平 機率&lt;&#x2F;h2&gt;
&lt;blockquote&gt;
&lt;p&gt;週四 14:20 ~ 17:20｜必修｜學分 3&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;綜合：★★☆☆☆&lt;&#x2F;li&gt;
&lt;li&gt;甜度：★★★★☆&lt;&#x2F;li&gt;
&lt;li&gt;涼度：★★★★☆&lt;&#x2F;li&gt;
&lt;li&gt;紮實：★★☆☆☆&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;&lt;strong&gt;上課方式&lt;&#x2F;strong&gt;：課本使用 《Probability and Statistical Inference》，老師使用自製投影片上課，會把兩節下課時間合成半小時的下課時間。&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;評分方式&lt;&#x2F;strong&gt;：三次考試分別占 10%、20%、40%，考試內容無法預測，但基本上看著雙面 A4 的公式小抄加上一些思考就做得出來了。作業 25% 從課本單號題出，剩下 5% 是課堂參與。期末還可以做 NFT 當成加分作業。&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;心得&lt;&#x2F;strong&gt;：前幾堂上課會被老師嚇到，機率講到一半會開始討論天地仁不仁，也就是老天輝不會看你可憐而施捨給你，或是開始討論區塊鏈、元宇宙、NFT 等無關內容，甚至還用一節課的時間邀請 NFT 得獎者教我們做 NFT，上課很大一部份的時間都被浪費。然後老師會習慣性遲到十分鐘，下課也會超過三十分鐘，導致我們的進度只有隔壁班的一半。&lt;&#x2F;p&gt;
&lt;p&gt;我做的 NFT ，因為不熟悉所以有點失敗，毛毛只有出現在左上的部分：&lt;a href=&quot;https:&#x2F;&#x2F;akaswap.com&#x2F;akaobj&#x2F;25397?view=normal&quot;&gt;Packets from the Stars | akaSwap&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;h2 id=&quot;jiang-pei-xuan-ri-wen-er-xia&quot;&gt;江佩璇 日文二下&lt;&#x2F;h2&gt;
&lt;blockquote&gt;
&lt;p&gt;週五 10:20 ~ 13:10｜系外選修｜學分 3&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;綜合：★★★☆☆&lt;&#x2F;li&gt;
&lt;li&gt;甜度：★★★★☆&lt;&#x2F;li&gt;
&lt;li&gt;涼度：★★★★☆&lt;&#x2F;li&gt;
&lt;li&gt;紮實：★★★☆☆&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;同上學期的日文二上。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;lu-qin-wen-jian-zhu-dao-lun&quot;&gt;呂欽文 建築導論&lt;&#x2F;h2&gt;
&lt;blockquote&gt;
&lt;p&gt;週五 14:20 ~ 17:20｜通識 A3*｜學分 3&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;綜合：★★★★★&lt;&#x2F;li&gt;
&lt;li&gt;甜度：★★★★☆&lt;&#x2F;li&gt;
&lt;li&gt;涼度：★★★★☆&lt;&#x2F;li&gt;
&lt;li&gt;紮實：★★★★☆&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;&lt;strong&gt;上課方式&lt;&#x2F;strong&gt;：老師使用自製的投影片上課，有時候會發一張隨堂回應卷下來，要寫上對於老師提出之問題的想法。課後要上傳上課筆記，字數不限。期中會有一週到林本源園邸參訪，一樣要交一份心得。中後期會有四次的議題 PK，會分組進行議題辯論，例如大巨蛋的位置好不好、形式與機能哪個重要等。&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;評分方式&lt;&#x2F;strong&gt;：上課筆記與心得 30%、隨堂回應卷 5%、議題 PK 參與度 5%。期中期末考分別占 15%、25%，有選擇題、填充題和簡答題，難度大部分都很簡單，少數考你上課的細節，有些則是沒有標準答案的開放想法題。作業有期初的建築體驗報告 10%，描述一個令你印象深刻的建築，以及期末的北藝中心建築評論 10%，用課堂學到的知識來分析北藝中心是不是好建築。&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;心得&lt;&#x2F;strong&gt;：這堂課老師會帶你從古典建築開始，認識不同時代的西方建築風格直到現代主義，其中還會穿插一些哲學性思考的問題，例如思考什麼是美？然後寫在隨堂回應卷上交給老師。也有時候會播音樂當成建築學的補充教材，那些都是老師自己剪片再加上一首古典音樂，雖然剪的不是很專業，但是能感覺到老師的用心。另外老師也會親自看過所有約 300 人、其中許多超過四頁 A4 的作業，並逐一寫下幾句評語。老師還會在課堂中說他看到我們用心寫的作業和文字非常感動。&lt;&#x2F;p&gt;
&lt;p&gt;總結來說，這是一堂關於建築的思考課，讓我擁有看建築的另外一個角度，而且老師上課真的很用心且非常有熱情。&lt;&#x2F;p&gt;
&lt;p&gt;我在修課前找不到關於這堂課的評價，現在也不希望它出現了，因為我看到有些人沒在上課時，我都會替老師感到難過。我希望這堂課能夠成為寶藏，不要被甜涼獵人發現。&lt;&#x2F;p&gt;
&lt;p&gt;議題 PK 想法（校園是否應該要有相同的建築風格）與回應卷（美的經驗）：
&lt;img src=&quot;https:&#x2F;&#x2F;natsucamellia.github.io&#x2F;112-2-course-review&#x2F;feedback.jpg&quot; alt=&quot;議題 PK 想法與回應卷&quot; title=&quot;議題 PK 想法與回應卷&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="zh-tw">
        <title>Star Telescope——繁星望遠鏡開發心路歷程</title>
        <published>2024-03-30T00:00:00+00:00</published>
        <updated>2024-03-30T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              NatsuCamellia
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://natsucamellia.github.io/star-telescope-review/"/>
        <id>https://natsucamellia.github.io/star-telescope-review/</id>
        
        <content type="html" xml:base="https://natsucamellia.github.io/star-telescope-review/">&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;NatsuCamellia&#x2F;Star&quot;&gt;Star Telescope 繁星望遠鏡 Github 頁面&lt;&#x2F;a&gt;：大學的繁星入學需要參照往年資料才能做出最佳的志願填選，但是無論是紙本手翻或是網頁點選都花費較多的時間，因此繁星望遠鏡是一個縮短加速這個過程的程式，能夠用較少的時間來得到更完整的資訊。&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;h2 id=&quot;yuan-qi&quot;&gt;緣起&lt;&#x2F;h2&gt;
&lt;p&gt;繁星上榜後的高三下學期，我因為想找點樂子而開始發想一些有意義的事。在那個時候和我一起填繁星的同學們，有不少人因為要比對多間學校而將紫色本子（一種可以看歷年繁星門檻的工具書）上貼滿標籤紙，以方便在向班導諮詢時能夠翻到想要的校系。雖然說當時就已經有 University TW 這個網站可以查詢一些簡單的紀錄，但效率上還是比翻閱紙本還慢不少，於是我便想要寫一個程式來代替紙本與網頁查詢。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;can-kao-shi-jian-xian&quot;&gt;參考時間線&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;di-yi-nian&quot;&gt;第一年&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;2022&#x2F;4&#x2F;3 v1.0 上線，使用了安裝檔&lt;&#x2F;li&gt;
&lt;li&gt;2022&#x2F;4&#x2F;8 v1.0.1 調整視窗大小，改成免安裝檔&lt;&#x2F;li&gt;
&lt;li&gt;2022&#x2F;4&#x2F;11 v1.1.0 新增了最愛清單功能&lt;&#x2F;li&gt;
&lt;li&gt;2022&#x2F;4&#x2F;14 v1.1.1 為 macOS 提供了 DMG&lt;&#x2F;li&gt;
&lt;li&gt;2022&#x2F;4&#x2F;28 v1.2.0 新增多重檢視，可以一次看到多個校系的錄取需求&lt;&#x2F;li&gt;
&lt;li&gt;2022&#x2F;7&#x2F;25 v1.2.1 新增五標篩選以及 105 至 107 年的數據&lt;&#x2F;li&gt;
&lt;li&gt;2023&#x2F;1&#x2F;5 v1.2.2 更新 112 年門檻，這時突然找不到舊的檔案&lt;&#x2F;li&gt;
&lt;li&gt;2023&#x2F;2&#x2F;22 v1.2.3 重構版本，但因為錯誤嚴重後來下版了&lt;&#x2F;li&gt;
&lt;li&gt;2023&#x2F;2&#x2F;27 v1.2.3.1 hotfix&lt;&#x2F;li&gt;
&lt;li&gt;2023&#x2F;2&#x2F;28 v1.2.4 修正一些錯誤&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;di-er-nian&quot;&gt;第二年&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;2023&#x2F;4&#x2F;2 v1.2.5 更新 112 年結果，但因為亂碼而下版&lt;&#x2F;li&gt;
&lt;li&gt;2023&#x2F;7&#x2F;10 v1.2.5.1 使用 UTF-8 以及使用 Noto Sans 字體，移除隨附 JRE&lt;&#x2F;li&gt;
&lt;li&gt;2023&#x2F;7&#x2F;10 v1.2.5.2 修正第一階段和第二階段相同的問題&lt;&#x2F;li&gt;
&lt;li&gt;2023&#x2F;7&#x2F;17 v1.3.0-beta1 重構，記取上次教訓而使用 beta&lt;&#x2F;li&gt;
&lt;li&gt;2023&#x2F;7&#x2F;17 v1.3.0-beta2 hotfix 亂碼&lt;&#x2F;li&gt;
&lt;li&gt;2023&#x2F;10&#x2F;22 v1.3.1 將資料部分模組化並獨立為 StarAPI&lt;&#x2F;li&gt;
&lt;li&gt;2023&#x2F;11&#x2F;6 v1.4.0 更新 113 年門檻，即將停止維護&lt;&#x2F;li&gt;
&lt;li&gt;2024&#x2F;3&#x2F;29 v1.4.1 更新 113 年結果&lt;&#x2F;li&gt;
&lt;li&gt;2024&#x2F;3&#x2F;29 封存&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;cong-ling-dao-you&quot;&gt;從零到有&lt;&#x2F;h2&gt;
&lt;p&gt;當時我熟悉的程式語言只有 Java，加上我只有 Windows 電腦，因此便選擇了 Java 做為開發語言在 Windows 平台上開發，可以看出選擇 Java 的原因顯然不是看中 Java 的跨平台性。我選擇 JavaFX 框架，參考一個簡單的 Gitbook 教學，沒有什麼軟體工程概念的我邊看教學邊做，使用 Scene Builder 依樣畫葫蘆做出了 GUI。&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;這個 Gitbook 教學的文字令我印象深刻，他讀起來的感覺非常詭異，它是繁體中文但是讀起來卻缺少中文的語感並且夾雜了中國用語。我想到的最貼切形容就是透過機器翻譯，從英文先翻譯成簡體中文再翻譯成繁體中文。現在我已經找不到這個教學了。&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;當時的 GUI 還只是一些假文字，不是真正的資料。我用 Python 來生成資料，先用 Beautiful Soup 4 抓下大考中心公布的資料，但這些資料都是 PDF 格式，非常不容易處理，第八類以及需要術科考試的科系的表格甚至和一般科系不同。為了簡單，我只處理一般科系，其他科系都被我捨棄了。接著需要解析這些 PDF，我用 PDF Plumber 套件抓出 PDF 中的表格，再把它們全部轉為 CSV 格式供程式讀取。&lt;&#x2F;p&gt;
&lt;p&gt;最後，再花一些時間讓程式讀取 CSV 並顯示之後，一個可以用的應用程式終於完成了。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;v1-0-fa-bu&quot;&gt;v1.0 發布&lt;&#x2F;h2&gt;
&lt;p&gt;可以用的應用程式是完成了，但還有一個問題，那就是要如何將這個應用程式送到使用者手中？&lt;&#x2F;p&gt;
&lt;p&gt;Java 和其他語言不同，Java 的程式需要運行在虛擬機 JVM 上，要求運行 Java 程式的電腦都要安裝 Java。這對於預裝有 Java 的 Linux 與 macOS 也許不成問題，但是大多數非資訊背景的電腦使用者都是使用 Windows，而 Windows 沒有預裝 Java。&lt;&#x2F;p&gt;
&lt;p&gt;要求使用者安裝 Java 是一件很困難的事，使用者不見得知道如何安裝，也可能因為要手動安裝而乾脆不用我的程式了。因此我參考 Minecraft 近年來的做法，將 JRE（包含了 JVM）和應用程式捆綁在一起讓使用者下載，這是最簡單的解決方法，也能避免 Java 版本的問題，缺點則是產生較大的檔案。&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;如果你是 Minecraft 老玩家，想必你一定對 Java 8 的下載頁面不陌生。當時的 Minecraft 使用 Java 8，玩家一定要下載 Java 才能遊玩 Minecraft，甚至於 Java 的說明頁面中有&lt;a href=&quot;https:&#x2F;&#x2F;www.java.com&#x2F;zh-TW&#x2F;download&#x2F;help&#x2F;minecraft.html&quot;&gt;我要到哪裡可取得 Minecraft？&lt;&#x2F;a&gt;這個頁面。後來 Minecraft 使用了更高版本的 Java，並和遊戲本體捆綁下載，這才不需要玩家手動下載 Java。&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;把 JRE 和應用程式捆綁在一起後，需要一個腳本來讓電腦使用該 JRE，使用腳本開啟程式對於一般使用者也是陌生領域。於是我研究了各種方法，將程式包裝成 exe 檔，終於讓零知識的使用者可以使用。&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;當時我還為它弄了一個安裝軟體，就是可以讓你選擇安裝位置的那種安裝軟體，不過因為安裝軟體的格式 exe 與 msi 容易被瀏覽器當作病毒擋下來，所以在下個版本就沒有這麼做了。&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;於是，在 2022&#x2F;4&#x2F;3 這天，我在 Github 創建 &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;NatsuCamellia&#x2F;Star&quot;&gt;Repository&lt;&#x2F;a&gt;，上傳第一個提交，公開發佈了 1.0 版本。&lt;&#x2F;p&gt;
&lt;p&gt;1.0 版本實際畫面：
&lt;img src=&quot;&#x2F;assets&#x2F;img&#x2F;20240330&#x2F;v1.0.png&quot; alt=&quot;1.0 版本實際畫面&quot; title=&quot;1.0 版本實際畫面&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;h2 id=&quot;v1-1-zui-ai-qing-dan&quot;&gt;v1.1 最愛清單&lt;&#x2F;h2&gt;
&lt;p&gt;我在 1.1 版本時新增了最愛清單的功能，這個功能顯而易見的是一開始最想要的功能，因為想要讓使用者快速找到自己想要的科系。為了實作這個功能，需要同步總覽與最愛清單的選擇科系，這也是產生最多 Bug 的地方。&lt;&#x2F;p&gt;
&lt;p&gt;1.1 版本實際畫面：
&lt;img src=&quot;https:&#x2F;&#x2F;natsucamellia.github.io&#x2F;star-telescope-review&#x2F;v1.1.png&quot; alt=&quot;1.1 版本實際畫面&quot; title=&quot;1.1 版本實際畫面&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;之後我有了 MacBook 電腦，並在 1.1.1 版本中為 macOS 發布了 DMG 安裝檔，從此之後開發工作轉移至 MacBook 上進行。&lt;&#x2F;p&gt;
&lt;p&gt;在版本 1.1.2 之前，在五標門檻的那一欄中，自然與社會的標準是對調的狀態，幸好及早發現，才能在 1.1.1 發布的四天後發布 1.1.2 修正問題。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;v1-2-fan-xing-wang-yuan-jing&quot;&gt;v1.2 繁星望遠鏡&lt;&#x2F;h2&gt;
&lt;p&gt;1.2 版本將程式名稱從「繁星推薦」改為「繁星望遠鏡」，希望使用者能夠藉由這個望遠鏡看見他們嚮往的那些繁星。&lt;&#x2F;p&gt;
&lt;p&gt;在這個版本中也新增了多重檢視，當時沒有想到一個好的功能名，因為它能夠同時看到多個科系的歷史紀錄，所以才叫多重檢視。這是這個程式的核心功能之一，是能夠取代紙本查詢的關鍵性功能，可以一口氣看四年內的五標門檻、學業成績百分比以及招收人數。&lt;&#x2F;p&gt;
&lt;p&gt;1.2.1 版又推出了我沒想到能夠完成的篩選，使用者可以根據自己的成績來篩選掉不符合的科系，直接跳過沒辦法填的科系。如果還不知道成績的話，也可以觀察五標對可以填的科系有什麼影響，例如英文均標會被大多數頂大科系拒之門外。&lt;&#x2F;p&gt;
&lt;p&gt;大學的寒假放得比較早，於是我趁這段時間時間來更新 112 年的門檻標準，發布於 1.2.2 版本。但當時我找不到以前的爬蟲與解析程式，於是手動重新寫了一個，並和大考中心防爬蟲的網站鬥智鬥勇。後來寫完了準備要發布時，我在很正常的地方找到了最初的那個爬蟲程式，——。&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;希望這樣的標點符號用法能夠傳達我的心情。&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;1.2.1 版本實際畫面，可以看見多重檢視畫面以及篩選工具。圖中不符合使用者體驗的部分是右方表格的科系放在最愛清單中，需要切換為最愛清單的標籤才可以對上科系。
&lt;img src=&quot;https:&#x2F;&#x2F;natsucamellia.github.io&#x2F;star-telescope-review&#x2F;v1.2.1.png&quot; alt=&quot;1.2.1 版本實際畫面&quot; title=&quot;1.2.1 版本實際畫面&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;下一屆的學弟妹考完學測後，我在二二八連假這段期間進行了程式碼的重構，並在學弟妹的反饋中修正了不少的錯誤，陸續發佈 1.2.3 及 1.2.4。&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;1.2.3 版本進行重構、使用 Maven 以及更換 Java 版本，實際發布後存在大量問題，後來就下版了，最後發布 1.2.3.1 修正這些問題。&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;到了七月，我在 1.2.5 版中更新了 112 年的篩選結果，同時因為龜毛的心態，把隨附的 JRE 移除而將檔案縮小至原本的 30%。那時做出這個決定是因為發現發布的過程愈來愈不容易，特別是在大學發布的版本，由於我沒辦法隨手取得 Windows 電腦而不容易同步發布 Windows 版本的程式。於是我毅然決然統一發布可執行 JAR 檔，提供非常簡單的教學讓使用者自行下載 Java。&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;1.2.5 版本修改了字體，不過發布後產生亂碼問題，便發布 1.2.5.1 修正問題。隨後又發現第一階段與第二階段的結果顯示成相同的資料，緊急修正並發布 1.2.5.2。&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;h2 id=&quot;v1-3-xu-lie-hua-geng-xin&quot;&gt;v1.3 序列化更新&lt;&#x2F;h2&gt;
&lt;p&gt;112 年暑假，我偶然發現了 Json 能夠讓物件序列化成同一格式，並且能夠容易地反序列化。1.3 版本中我將所有 CSV 科系資料轉換成 Json，再用 Google 開源的 Gson 讀取，同時也把最愛清單的科系全部以 Json 儲存。&lt;&#x2F;p&gt;
&lt;p&gt;有鑒於取得資料的程式碼逐漸與 UI 耦合，於是在 1.3.1 版本中我將取得資料的部分獨立為 StarAPI。這大多是為了個人的樂趣而做的，把許多細節抽象化之後，我得到了不少的成就感。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;v1-4-zui-zhong-ban-ben&quot;&gt;v1.4 最終版本&lt;&#x2F;h2&gt;
&lt;p&gt;1.4 版本推出於 112 年 11 月，當時知道大考中心公布簡章後，馬上就著手下載資料並更新程式，由於有 1.3 的模組化，這過程變得容易不少。不過這時的我已經接受了不少大學課程的訓練，清楚了解到這個專案維護難度偏高，於是當時在 README 中標註將於更新 113 篩選結果後封存。&lt;&#x2F;p&gt;
&lt;p&gt;繁星放榜之後，1.4.1 版本於 112&#x2F;3&#x2F;29 發布，在更新 113 年的繁星放榜結果並修正一些錯誤之後，正式在 Github 上把這個專案封存。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;xin-de&quot;&gt;心得&lt;&#x2F;h2&gt;
&lt;p&gt;回顧這段開發過程，我認為我的高中班導是讓種子發芽的關鍵養分。當初我做出 1.0 版程式後，馬上拿給班導試用，班導認為這是很有意思的程式，並提出了不少功能要求，讓我能夠讓這個程式更加豐富。此外，班導也提出改名、添加啟動動畫甚至是販售軟體的想法，不過到最後我也就只有把程式改名為「繁星望遠鏡」而已，販售軟體一部份是因為可能涉及到法律問題所以我就沒有做了。&lt;&#x2F;p&gt;
&lt;p&gt;開發過程中可以看到一個沒有受過專業訓練的新手會做出什麼事，包括了版本號隨便訂、沒有自動測試以及各種不明所以的 Commit Message。還有一個很不好的習慣就是倉促地發布版本，應該要經過仔細測試後再發布，我發現問題時常常都是在發布的三分鐘後，不得已只能再上傳新版本。&lt;&#x2F;p&gt;
&lt;p&gt;不明所以的 Commit Message：&lt;img src=&quot;https:&#x2F;&#x2F;natsucamellia.github.io&#x2F;star-telescope-review&#x2F;commit.png&quot; alt=&quot;不明所以的 Commit Message&quot; title=&quot;不明所以的 Commit Message&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;如果重來一次我不會選擇 JavaFX，但如果還是 JavaFX 的話，我會想要研究 JavaFX 如何自動測試以及自動部署，簡化這些手動操作的流程；另外我會想要試看看 SQLite，相較於 Json 還多了更多篩選及查詢的功能，可能會是不錯的 Data Source。&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="zh-tw">
        <title>Minecraft 煙火機制</title>
        <published>2024-02-26T00:00:00+00:00</published>
        <updated>2024-02-26T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              NatsuCamellia
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://natsucamellia.github.io/mechanics-of-minecraft-fireworks/"/>
        <id>https://natsucamellia.github.io/mechanics-of-minecraft-fireworks/</id>
        
        <content type="html" xml:base="https://natsucamellia.github.io/mechanics-of-minecraft-fireworks/">&lt;p&gt;本篇透過研究 Minecraft 的程式碼，來解析煙火從合成、NBT 標籤、施放一直到爆炸並產生粒子的機制，當下版本為 Java 1.21。&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;h2 id=&quot;yi-huo-yao-qiu-firework-star&quot;&gt;一、火藥球 Firework Star&lt;&#x2F;h2&gt;
&lt;p&gt;煙火必須要有火藥球才能綻放出絢麗的爆炸特效，火藥球的合成材料包括了火藥、染料、形狀材料以及附加效果材料。&lt;&#x2F;p&gt;
&lt;h3 id=&quot;1-huo-yao-bi-yao&quot;&gt;1. 火藥（必要）&lt;&#x2F;h3&gt;
&lt;p&gt;火藥球的合成需要恰好一個火藥。&lt;&#x2F;p&gt;
&lt;h3 id=&quot;2-ran-liao-bi-yao&quot;&gt;2. 染料（必要）&lt;&#x2F;h3&gt;
&lt;p&gt;火藥球的合成需要至少一個染料，不包含骨粉、青金石等替代材料。在火藥球中添加染料，會將染料本身的顏色加入初始顏色清單中，這份清單決定了煙火爆炸時粒子的初始顏色。此外，將合成好的火藥球與染料合成，會將顏色加入最終顏色清單中，決定煙火爆炸粒子的最終顏色。關於顏色如何分佈與變化，在之後的爆炸粒子中會有更深入的說明。&lt;&#x2F;p&gt;
&lt;h3 id=&quot;3-xing-zhuang-cai-liao&quot;&gt;3. 形狀材料&lt;&#x2F;h3&gt;
&lt;p&gt;遊戲中煙火爆炸會產生不同的形狀，一顆火藥球只能擁有一個爆炸形狀，以下是不同材料所對應的爆炸形狀：&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;以下動畫來自 &lt;a href=&quot;https:&#x2F;&#x2F;zh.minecraft.wiki&quot;&gt;Minecraft Wiki&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;材料&lt;&#x2F;th&gt;&lt;th&gt;形狀&lt;&#x2F;th&gt;&lt;th&gt;動畫&lt;&#x2F;th&gt;&lt;&#x2F;tr&gt;&lt;&#x2F;thead&gt;&lt;tbody&gt;
&lt;tr&gt;&lt;td&gt;無&lt;&#x2F;td&gt;&lt;td&gt;小型球狀&lt;&#x2F;td&gt;&lt;td&gt;&lt;a href=&quot;https:&#x2F;&#x2F;zh.minecraft.wiki&#x2F;w&#x2F;File:Firework_Star_(Small_Sphere).gif&quot;&gt;&lt;img src=&quot;https:&#x2F;&#x2F;zh.minecraft.wiki&#x2F;images&#x2F;thumb&#x2F;Firework_Star_%28Small_Sphere%29.gif&#x2F;200px-Firework_Star_%28Small_Sphere%29.gif?f2de6&quot; alt=&quot;Firework Star (Small Sphere).gif&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;火焰彈&lt;&#x2F;td&gt;&lt;td&gt;大型球狀&lt;&#x2F;td&gt;&lt;td&gt;&lt;a href=&quot;https:&#x2F;&#x2F;zh.minecraft.wiki&#x2F;w&#x2F;File:Firework_Star_(Large_Sphere).gif&quot;&gt;&lt;img src=&quot;https:&#x2F;&#x2F;zh.minecraft.wiki&#x2F;images&#x2F;thumb&#x2F;Firework_Star_%28Large_Sphere%29.gif&#x2F;200px-Firework_Star_%28Large_Sphere%29.gif?72744&quot; alt=&quot;Firework Star (Large Sphere).gif&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;金粒&lt;&#x2F;td&gt;&lt;td&gt;星形&lt;&#x2F;td&gt;&lt;td&gt;&lt;a href=&quot;https:&#x2F;&#x2F;zh.minecraft.wiki&#x2F;w&#x2F;File:Firework_Star_(Star_Shape).gif&quot;&gt;&lt;img src=&quot;https:&#x2F;&#x2F;zh.minecraft.wiki&#x2F;images&#x2F;thumb&#x2F;Firework_Star_%28Star_Shape%29.gif&#x2F;200px-Firework_Star_%28Star_Shape%29.gif?1777f&quot; alt=&quot;Firework Star (Star Shape).gif&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;生物頭顱&lt;&#x2F;td&gt;&lt;td&gt;苦力怕形&lt;&#x2F;td&gt;&lt;td&gt;&lt;a href=&quot;https:&#x2F;&#x2F;zh.minecraft.wiki&#x2F;w&#x2F;File:Firework_Star_(Creeper_Shape).gif&quot;&gt;&lt;img src=&quot;https:&#x2F;&#x2F;zh.minecraft.wiki&#x2F;images&#x2F;thumb&#x2F;Firework_Star_%28Creeper_Shape%29.gif&#x2F;200px-Firework_Star_%28Creeper_Shape%29.gif?e7af6&quot; alt=&quot;Firework Star (Creeper Shape).gif&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;羽毛&lt;&#x2F;td&gt;&lt;td&gt;爆裂&lt;&#x2F;td&gt;&lt;td&gt;&lt;a href=&quot;https:&#x2F;&#x2F;zh.minecraft.wiki&#x2F;w&#x2F;File:Firework_Star_(Burst).gif&quot;&gt;&lt;img src=&quot;https:&#x2F;&#x2F;zh.minecraft.wiki&#x2F;images&#x2F;thumb&#x2F;Firework_Star_%28Burst%29.gif&#x2F;200px-Firework_Star_%28Burst%29.gif?d9b30&quot; alt=&quot;Firework Star (Burst).gif&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;&#x2F;tbody&gt;&lt;&#x2F;table&gt;
&lt;h3 id=&quot;4-fu-jia-xiao-guo-cai-liao&quot;&gt;4. 附加效果材料&lt;&#x2F;h3&gt;
&lt;p&gt;遊戲中附加效果有閃爍與蹤跡兩種，可同時存在：&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;以下動畫來自 &lt;a href=&quot;https:&#x2F;&#x2F;zh.minecraft.wiki&quot;&gt;Minecraft Wiki&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;材料&lt;&#x2F;th&gt;&lt;th&gt;效果&lt;&#x2F;th&gt;&lt;th&gt;動畫&lt;&#x2F;th&gt;&lt;&#x2F;tr&gt;&lt;&#x2F;thead&gt;&lt;tbody&gt;
&lt;tr&gt;&lt;td&gt;螢石粉&lt;&#x2F;td&gt;&lt;td&gt;閃爍&lt;&#x2F;td&gt;&lt;td&gt;&lt;a href=&quot;https:&#x2F;&#x2F;zh.minecraft.wiki&#x2F;w&#x2F;File:Firework_Star_(Twinkle_effect).gif&quot;&gt;&lt;img src=&quot;https:&#x2F;&#x2F;zh.minecraft.wiki&#x2F;images&#x2F;thumb&#x2F;Firework_Star_%28Twinkle_effect%29.gif&#x2F;200px-Firework_Star_%28Twinkle_effect%29.gif?89cf5&quot; alt=&quot;Firework Star (Twinkle effect).gif&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;鑽石&lt;&#x2F;td&gt;&lt;td&gt;蹤跡&lt;&#x2F;td&gt;&lt;td&gt;&lt;a href=&quot;https:&#x2F;&#x2F;zh.minecraft.wiki&#x2F;w&#x2F;File:Firework_Star_(Trail_effect).gif&quot;&gt;&lt;img src=&quot;https:&#x2F;&#x2F;zh.minecraft.wiki&#x2F;images&#x2F;thumb&#x2F;Firework_Star_%28Trail_effect%29.gif&#x2F;200px-Firework_Star_%28Trail_effect%29.gif?edaa8&quot; alt=&quot;Firework Star (Trail effect).gif&quot; &#x2F;&gt;&lt;&#x2F;a&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;&#x2F;tbody&gt;&lt;&#x2F;table&gt;
&lt;hr &#x2F;&gt;
&lt;h2 id=&quot;er-yan-huo&quot;&gt;二、煙火&lt;&#x2F;h2&gt;
&lt;p&gt;煙火的合成材料包括火藥、紙以及火藥球。&lt;&#x2F;p&gt;
&lt;h3 id=&quot;1-huo-yao-bi-yao-1&quot;&gt;1. 火藥（必要）&lt;&#x2F;h3&gt;
&lt;p&gt;煙火中的火藥材料多寡決定了煙火的飛行時間，亦即從發射到爆炸的這段時間長度，可以加入一至三個火藥來為煙火提供不同的飛行時間。煙火的飛行時間公式為： $10 \times (火藥數量 + 1) + rand(6) + rand(7)$ 遊戲刻，其中 $rand(n)$ 為 $0$ 至 $n - 1$ 的隨機數字。平均飛行時間為 $5.5 + (10 \times 火藥數量 + 1)$ 遊戲刻，實際飛行時間的機率分佈會以平均飛行時間為中心，向左右遞減。&lt;&#x2F;p&gt;
&lt;h3 id=&quot;2-zhi-bi-yao&quot;&gt;2. 紙（必要）&lt;&#x2F;h3&gt;
&lt;p&gt;煙火的合成需要恰好一張紙。&lt;&#x2F;p&gt;
&lt;h3 id=&quot;3-huo-yao-qiu&quot;&gt;3. 火藥球&lt;&#x2F;h3&gt;
&lt;p&gt;在煙火中加入火藥球可以新增其效果（顏色、形狀與附加效果）至 NBT 標籤中，於爆炸時逐一釋放。&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;h2 id=&quot;san-nbt-biao-qian&quot;&gt;三、NBT 標籤&lt;&#x2F;h2&gt;
&lt;p&gt;煙火是如何將火藥球的資訊保存，一路傳遞到煙火爆炸？煙火透過 NBT 標籤儲存火藥球的資訊，NBT 標籤內有多種標籤，其中煙火從物品到實體都會持續保有名為 &lt;code&gt;Explosions&lt;&#x2F;code&gt; 的 NBT 標籤。&lt;&#x2F;p&gt;
&lt;p&gt;&lt;code&gt;Explosions&lt;&#x2F;code&gt; 是一個列表，其中有多個火藥球 NBT 標籤。當製作煙火時，會把所有作為合成材料的火藥球之 NBT 標籤放進煙火的 &lt;code&gt;Explosions&lt;&#x2F;code&gt; 標籤。這個標籤看起來的樣子是：煙火有一個 NBT 標籤叫做 &lt;code&gt;Explosions&lt;&#x2F;code&gt;，裡面有很多火藥球 NBT 標籤，每個火藥球 NBT 標籤都有爆炸形狀、閃爍、軌跡等資訊。&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;h2 id=&quot;si-fa-she-yan-huo&quot;&gt;四、發射煙火&lt;&#x2F;h2&gt;
&lt;p&gt;生成煙火實體（發射煙火）有三種方法，第一種是直接發射，即手持煙火物品對方塊使用，發射方向朝上；第二種是用弩發射，煙火可以替代箭矢作為弩的發射物被填充並射出，發射方向為準心瞄準的方向；第三種則是透過發射器發射，方向為發射器口朝向的方向，只有以發射器發射時不記錄發射者。此外，生成煙火實體時，實體會讀取召喚時使用之物品，進而讀取煙火的 NBT 標籤並儲存。&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;h2 id=&quot;wu-yan-huo-fei-xing-yu-bao-zha&quot;&gt;五、煙火飛行與爆炸&lt;&#x2F;h2&gt;
&lt;p&gt;煙火實體在被生成時，會依照煙火物品合成所用的火藥數量，套進公式後初始化最大飛行時間。在之後的飛行時間內，每兩個遊戲刻會在煙火實體處發射煙火粒子，方向朝下，速度是煙火實體 Y 軸速度的一半。當達到最大飛行時間後，煙火實體便會爆炸，造成傷害並生成煙火爆炸子。&lt;&#x2F;p&gt;
&lt;p&gt;煙火的傷害計算公式為 $damage = 5 + 2 \times \text{火藥球數量}$，爆炸時會對半徑五格內的生物造成傷害，傷害與距離的關係為 $damage \times \sqrt{\frac{5 - distance}{5}}$，當 $damage = 5$ 時如下圖所示，橫軸為距離，縱軸為傷害：
&lt;img src=&quot;https:&#x2F;&#x2F;natsucamellia.github.io&#x2F;mechanics-of-minecraft-fireworks&#x2F;firework-distance-damage.png&quot; alt=&quot;煙火距離與傷害關係圖&quot; title=&quot;煙火距離與傷害關係圖&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;h2 id=&quot;liu-yan-huo-bao-zha-zi&quot;&gt;六、煙火爆炸子&lt;&#x2F;h2&gt;
&lt;p&gt;終於來到煙火的重頭戲，當煙火實體爆炸時會生成煙火爆炸子，煙火爆炸子和煙火實體一樣持有關於火藥球的 NBT 標籤，煙火爆炸子的任務是產生爆炸音效以及將火藥球逐個釋放。&lt;&#x2F;p&gt;
&lt;p&gt;煙火爆炸子生成時，會產生煙火爆炸的音效，若火藥球有三個以上或是含有大型球狀的火藥球，則會產生較沈重的音效，反之會產生較清亮的音效。此外，若玩家與煙火爆炸子的距離為 16 格以上，此音效還會產生延遲，玩家看到爆炸後過一段時間才能聽到煙火的爆炸聲。&lt;&#x2F;p&gt;
&lt;p&gt;每過兩個遊戲刻，煙火爆炸子會依序從 NBT 標籤中選擇一個火藥球，根據火藥球的資訊，在煙火爆炸子處產生指定形狀的大量爆炸粒子，也就是我們平常看到的煙火特效。在生成爆炸粒子時，會將軌跡、閃爍、透明度與顏色等資訊傳遞給爆炸粒子，其中初始顏色和最終顏色是分別從火藥球 NBT 標籤內的「初始顏色清單」與「最終顏色清單」隨機選擇，爆炸粒子行進時會由初始顏色逐漸轉變為最終顏色。&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="zh-tw">
        <title>Text Formatting Examples</title>
        <published>2024-02-22T00:00:00+00:00</published>
        <updated>2024-08-15T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              NatsuCamellia
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://natsucamellia.github.io/text-formatting/"/>
        <id>https://natsucamellia.github.io/text-formatting/</id>
        
        <content type="html" xml:base="https://natsucamellia.github.io/text-formatting/">&lt;h1 id=&quot;markdown-support&quot;&gt;Markdown Support&lt;&#x2F;h1&gt;
&lt;p&gt;As always, Jekyll offers support for GitHub Flavored Markdown, which allows you to format your posts using the &lt;a href=&quot;https:&#x2F;&#x2F;guides.github.com&#x2F;features&#x2F;mastering-markdown&#x2F;&quot;&gt;Markdown syntax&lt;&#x2F;a&gt;. Examples of these text formatting features can be seen below. You can find this post in the &lt;code&gt;_posts&lt;&#x2F;code&gt; directory.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;basic-formatting&quot;&gt;Basic Formatting&lt;&#x2F;h2&gt;
&lt;p&gt;With Markdown, it is possible to emphasize words by making them &lt;em&gt;italicized&lt;&#x2F;em&gt;, using &lt;em&gt;astericks&lt;&#x2F;em&gt; or &lt;em&gt;underscores&lt;&#x2F;em&gt;, or making them &lt;strong&gt;bold&lt;&#x2F;strong&gt;, using &lt;strong&gt;double astericks&lt;&#x2F;strong&gt; or &lt;strong&gt;double underscores&lt;&#x2F;strong&gt;. Of course, you can combine those two formats, with both &lt;em&gt;&lt;strong&gt;bold and italicized&lt;&#x2F;strong&gt;&lt;&#x2F;em&gt; text, using any combination of the above syntax. You can also add a strikethrough to text using a &lt;del&gt;double tilde&lt;&#x2F;del&gt;.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;paragraphs&quot;&gt;Paragraphs&lt;&#x2F;h2&gt;
&lt;p&gt;This is what a paragraph looks like. For the purpose of demonstration, the rest of this paragraph and the next paragraph after will mean absolutely nothing. Proin eget nibh a massa vestibulum pretium. Suspendisse eu nisl a ante aliquet bibendum quis a nunc. Praesent varius interdum vehicula. Aenean risus libero, placerat at vestibulum eget, ultricies eu enim. Praesent nulla tortor, malesuada adipiscing adipiscing sollicitudin, adipiscing eget est. Praesent nulla tortor, malesuada adipiscing adipiscing sollicitudin, adipiscing eget est.&lt;&#x2F;p&gt;
&lt;p&gt;Proin eget nibh a massa vestibulum pretium. Suspendisse eu nisl a ante aliquet bibendum quis a nunc. Mauris lobortis nulla et felis ullamcorper bibendum. Phasellus et hendrerit mauris. Proin eget nibh a massa vestibulum pretium. Suspendisse eu nisl a ante aliquet bibendum quis a nunc. Praesent varius interdum vehicula. Aenean risus libero, placerat at vestibulum eget, ultricies eu enim. Praesent nulla tortor, malesuada adipiscing adipiscing sollicitudin, adipiscing eget est.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;headings&quot;&gt;Headings&lt;&#x2F;h2&gt;
&lt;p&gt;Sometimes it is useful to have different levels of headings to structure your documents. Start lines with &lt;code&gt;#&lt;&#x2F;code&gt; to create headings. Multiple &lt;code&gt;##&lt;&#x2F;code&gt; in a row denote smaller heading size. The following demonstrate the full range of heading sizes:&lt;&#x2F;p&gt;
&lt;h1 id=&quot;heading-one-h1&quot;&gt;Heading One (h1)&lt;&#x2F;h1&gt;
&lt;h2 id=&quot;heading-two-h2&quot;&gt;Heading Two (h2)&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;heading-three-h3&quot;&gt;Heading Three (h3)&lt;&#x2F;h3&gt;
&lt;h4 id=&quot;heading-four-h4&quot;&gt;Heading Four (h4)&lt;&#x2F;h4&gt;
&lt;h5 id=&quot;heading-five-h5&quot;&gt;Heading Five (h5)&lt;&#x2F;h5&gt;
&lt;h6 id=&quot;heading-six-h6&quot;&gt;Heading Six (h6)&lt;&#x2F;h6&gt;
&lt;h2 id=&quot;links&quot;&gt;Links&lt;&#x2F;h2&gt;
&lt;p&gt;You can create an inline link by wrapping link text in square brackets &lt;code&gt;[ ]&lt;&#x2F;code&gt;, and then wrapping the URL in parentheses &lt;code&gt;( )&lt;&#x2F;code&gt;. For example, it is very easy to &lt;a href=&quot;http:&#x2F;&#x2F;google.com&quot;&gt;link to Google!&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;blockquotes&quot;&gt;Blockquotes&lt;&#x2F;h2&gt;
&lt;p&gt;Blockquotes are useful for denoting quotes, or highlighting a large block of text. Single line blockquote:&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;This quote will change your life.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;Multi line blockquote with a cite reference:&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;People think focus means saying yes to the thing you&#x27;ve got to focus on. But that&#x27;s not what it means at all. It means saying no to the hundred other good ideas that there are. You have to pick carefully. I&#x27;m actually as proud of the things we haven&#x27;t done as the things I have done. Innovation is saying no to 1,000 things.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;h2 id=&quot;code-and-syntax-highlighting&quot;&gt;Code and Syntax Highlighting&lt;&#x2F;h2&gt;
&lt;p&gt;Code blocks are part of the Markdown spec, but syntax highlighting isn&#x27;t. However, many renderers - like GitHub or most Jekyll themes - support syntax highlighting. Which languages are supported and how those language names should be written will vary from renderer to renderer. You can find the full list of supported programming languages &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;jneen&#x2F;rouge&#x2F;wiki&#x2F;List-of-supported-languages-and-lexers&quot;&gt;here&lt;&#x2F;a&gt;. Also, it is possible to do &lt;code&gt;inline code blocks&lt;&#x2F;code&gt;, by wrapping the text in &lt;code&gt;`&lt;&#x2F;code&gt; quotations.&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#eff1f5;color:#4f5b66;&quot;&gt;&lt;code&gt;&lt;span&gt;No language indicated, so no syntax highlighting.
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;pre data-lang=&quot;ruby&quot; style=&quot;background-color:#eff1f5;color:#4f5b66;&quot; class=&quot;language-ruby &quot;&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;def &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;print_hi&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;name&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;puts &lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;Hi, &lt;&#x2F;span&gt;&lt;span&gt;#{&lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;name&lt;&#x2F;span&gt;&lt;span&gt;}&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;end
&lt;&#x2F;span&gt;&lt;span&gt;print_hi(&amp;#39;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;Tom&lt;&#x2F;span&gt;&lt;span&gt;&amp;#39;)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a7adba;&quot;&gt;#=&amp;gt; prints &amp;#39;Hi, Tom&amp;#39; to STDOUT.
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Another option is to embed your code through &lt;a href=&quot;https:&#x2F;&#x2F;en.support.wordpress.com&#x2F;gist&#x2F;&quot;&gt;Gist&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;images&quot;&gt;Images&lt;&#x2F;h2&gt;
&lt;p&gt;To add an image, use &lt;code&gt;![alt text](&amp;lt;Image url&amp;gt; &quot;Image meta title&quot;)&lt;&#x2F;code&gt;:&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;natsucamellia.github.io&#x2F;text-formatting&#x2F;mountains.jpg&quot; alt=&quot;Mountain picture&quot; title=&quot;Mountain&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;h2 id=&quot;unordered-and-numbered-lists&quot;&gt;Unordered and Numbered Lists&lt;&#x2F;h2&gt;
&lt;p&gt;You can make an unordered and nested list by preceding one or more lines of text with &lt;code&gt;-&lt;&#x2F;code&gt;, &lt;code&gt;*&lt;&#x2F;code&gt;, or &lt;code&gt;+&lt;&#x2F;code&gt;, and indenting sublists. The following lists show the full range of possible list formats.&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;List item one
&lt;ul&gt;
&lt;li&gt;List item one
&lt;ul&gt;
&lt;li&gt;List item one&lt;&#x2F;li&gt;
&lt;li&gt;List item two&lt;&#x2F;li&gt;
&lt;li&gt;List item three&lt;&#x2F;li&gt;
&lt;li&gt;List item four&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;List item two&lt;&#x2F;li&gt;
&lt;li&gt;List item three&lt;&#x2F;li&gt;
&lt;li&gt;List item four&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;List item two&lt;&#x2F;li&gt;
&lt;li&gt;List item three&lt;&#x2F;li&gt;
&lt;li&gt;List item four&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Numbered lists are made by using numbers instead of bullet points.&lt;&#x2F;p&gt;
&lt;ol&gt;
&lt;li&gt;List item one
&lt;ol&gt;
&lt;li&gt;List item one
&lt;ol&gt;
&lt;li&gt;List item one&lt;&#x2F;li&gt;
&lt;li&gt;List item two&lt;&#x2F;li&gt;
&lt;li&gt;List item three&lt;&#x2F;li&gt;
&lt;li&gt;List item four&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;List item two&lt;&#x2F;li&gt;
&lt;li&gt;List item three&lt;&#x2F;li&gt;
&lt;li&gt;List item four&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;List item two&lt;&#x2F;li&gt;
&lt;li&gt;List item three&lt;&#x2F;li&gt;
&lt;li&gt;List item four&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;h2 id=&quot;mathjax-example&quot;&gt;MathJax Example&lt;&#x2F;h2&gt;
&lt;p&gt;The &lt;a href=&quot;https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Schr%C3%B6dinger_equation&quot;&gt;Schrödinger equation&lt;&#x2F;a&gt; is a partial differential equation that describes how the quantum state of a quantum system changes with time:&lt;&#x2F;p&gt;
&lt;p&gt;$$
i\hbar\frac{\partial}{\partial t} \Psi(\mathbf{r},t) = \left [ \frac{-\hbar^2}{2\mu}\nabla^2 + V(\mathbf{r},t)\right ] \Psi(\mathbf{r},t)
$$&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Joseph-Louis_Millennial&quot;&gt;Joseph-Louis Millennial&lt;&#x2F;a&gt; was an Italian mathematician and astronomer who was responsible for the formulation of Lagrangian mechanics, which is a reformulation of Newtonian mechanics.&lt;&#x2F;p&gt;
&lt;p&gt;$$ \frac{\mathrm{d}}{\mathrm{d}t} \left ( \frac {\partial  L}{\partial \dot{q}_j} \right ) =  \frac {\partial L}{\partial q_j} $$&lt;&#x2F;p&gt;
&lt;h2 id=&quot;tables&quot;&gt;Tables&lt;&#x2F;h2&gt;
&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;Title 1&lt;&#x2F;th&gt;&lt;th style=&quot;text-align: center&quot;&gt;Title 2&lt;&#x2F;th&gt;&lt;th style=&quot;text-align: left&quot;&gt;Title 3&lt;&#x2F;th&gt;&lt;th style=&quot;text-align: right&quot;&gt;Title 4&lt;&#x2F;th&gt;&lt;&#x2F;tr&gt;&lt;&#x2F;thead&gt;&lt;tbody&gt;
&lt;tr&gt;&lt;td&gt;lorem&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: center&quot;&gt;lorem ipsum&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: left&quot;&gt;lorem ipsum dolor&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: right&quot;&gt;lorem ipsum dolor sit&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;lorem ipsum dolor sit&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: center&quot;&gt;lorem ipsum dolor sit&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: left&quot;&gt;lorem ipsum dolor sit&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: right&quot;&gt;lorem ipsum dolor sit&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;lorem ipsum dolor sit&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: center&quot;&gt;lorem ipsum dolor sit&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: left&quot;&gt;lorem ipsum dolor sit&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: right&quot;&gt;lorem ipsum dolor sit&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;lorem ipsum dolor sit&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: center&quot;&gt;lorem ipsum dolor sit&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: left&quot;&gt;lorem ipsum dolor sit&lt;&#x2F;td&gt;&lt;td style=&quot;text-align: right&quot;&gt;lorem ipsum dolor sit&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;&#x2F;tbody&gt;&lt;&#x2F;table&gt;
&lt;h2 id=&quot;inline-html-elements&quot;&gt;Inline HTML elements&lt;&#x2F;h2&gt;
&lt;p&gt;HTML defines a long list of available inline tags, which you can mix with Markdown if you like. A complete list of which can be found on the &lt;a href=&quot;https:&#x2F;&#x2F;developer.mozilla.org&#x2F;en-US&#x2F;docs&#x2F;Web&#x2F;HTML&#x2F;Element&quot;&gt;Mozilla Developer Network&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;horizontal-rule&quot;&gt;Horizontal Rule&lt;&#x2F;h2&gt;
&lt;p&gt;Can be created by having three or more hyphens &lt;code&gt;---&lt;&#x2F;code&gt;, asterisks &lt;code&gt;***&lt;&#x2F;code&gt;, or underscores &lt;code&gt;___&lt;&#x2F;code&gt;:&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;h2 id=&quot;useful-resources&quot;&gt;Useful Resources&lt;&#x2F;h2&gt;
&lt;p&gt;More information on Markdown can be found at the following links:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;adam-p&#x2F;markdown-here&#x2F;wiki&#x2F;Markdown-Here-Cheatsheet#code&quot;&gt;Markdown Here Cheatsheet&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;http:&#x2F;&#x2F;www.unexpected-vortices.com&#x2F;sw&#x2F;rippledoc&#x2F;quick-markdown-example.html&quot;&gt;Quick Markdown Example&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;daringfireball.net&#x2F;projects&#x2F;markdown&#x2F;basics&quot;&gt;Markdown Basics&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.github.com&#x2F;gfm&#x2F;&quot;&gt;GitHub Flavoured Markdown Spec&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;help.github.com&#x2F;articles&#x2F;basic-writing-and-formatting-syntax&#x2F;#lists&quot;&gt;Basic writing and formatting syntax&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
</content>
        
    </entry>
    <entry xml:lang="zh-tw">
        <title>在 Arm64 Mac 上編譯 Aseprite</title>
        <published>2024-01-24T00:00:00+00:00</published>
        <updated>2024-01-24T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              NatsuCamellia
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://natsucamellia.github.io/compiling-aseprite-on-arm64-mac/"/>
        <id>https://natsucamellia.github.io/compiling-aseprite-on-arm64-mac/</id>
        
        <content type="html" xml:base="https://natsucamellia.github.io/compiling-aseprite-on-arm64-mac/">&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.aseprite.org&quot;&gt;Aseprite&lt;&#x2F;a&gt; 是一款專門為像素畫設計的繪圖軟體，功能簡單強大，在像素畫領域中非常有名，深受許多創作者喜愛。這款軟體在 Aseprite 官方網站以 19.99 美金販售，也可在 Steam 上以較便宜價格約 300 元新台幣購買。&lt;&#x2F;p&gt;
&lt;p&gt;然而，Aseprite 是一款開源軟體，Aseprite 在 &lt;a href=&quot;https:&#x2F;&#x2F;www.aseprite.org&#x2F;faq&#x2F;#if-aseprite-source-code-is-available-how-is-that-you-are-selling-it&quot;&gt;FAQ&lt;&#x2F;a&gt; 中提到：&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;Aseprite started being open source since its very beginning in 2001, and we were happy with that until &lt;a href=&quot;http:&#x2F;&#x2F;dev.aseprite.org&#x2F;post&#x2F;149797781837&#x2F;new-source-code-license&quot;&gt;August 2016&lt;&#x2F;a&gt;. &lt;strong&gt;Now you can still download its source code, compile it, and use it for your personal purposes.&lt;&#x2F;strong&gt; You can &lt;a href=&quot;https:&#x2F;&#x2F;www.aseprite.org&#x2F;faq&#x2F;#can-i-sell-graphics-created-with-aseprite&quot;&gt;make commercial art&#x2F;assets with it too&lt;&#x2F;a&gt;. The only restriction in &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;aseprite&#x2F;aseprite&#x2F;blob&#x2F;master&#x2F;EULA.txt&quot;&gt;Aseprite EULA&lt;&#x2F;a&gt; is that &lt;a href=&quot;https:&#x2F;&#x2F;www.aseprite.org&#x2F;faq&#x2F;#can-i-redistribute-aseprite&quot;&gt;you cannot redistribute Aseprite&lt;&#x2F;a&gt; to third parties.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;內容大意是使用者可以自行使用原始碼編譯程式，且使用 Aseprite 創作的畫作可以用作商業用途，唯一限制是不能分享編譯後的軟體。在 &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;aseprite&#x2F;aseprite&quot;&gt;Aseprite GitHub&lt;&#x2F;a&gt; 中有清楚詳細的編譯教學，雖然對於一般人而言還是需要不少努力才能完成編譯，不過對於資訊背景的人可說是保母級教學了。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;bian-yi-bu-zou&quot;&gt;編譯步驟&lt;&#x2F;h2&gt;
&lt;blockquote&gt;
&lt;p&gt;以下資訊皆為撰文日期（2024 年 1 月 24 日）所得&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;安裝編譯時需要的共通套件&lt;&#x2F;li&gt;
&lt;li&gt;安裝 Mac 所需的套件&lt;&#x2F;li&gt;
&lt;li&gt;編譯&lt;&#x2F;li&gt;
&lt;li&gt;做成可以放在啟動台的應用程式方便使用&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;h2 id=&quot;an-zhuang-gong-tong-tao-jian&quot;&gt;安裝共通套件&lt;&#x2F;h2&gt;
&lt;p&gt;需要的共通套件有：&lt;&#x2F;p&gt;
&lt;ol&gt;
&lt;li&gt;CMake &lt;code&gt;3.16+&lt;&#x2F;code&gt;&lt;&#x2F;li&gt;
&lt;li&gt;Ninja&lt;&#x2F;li&gt;
&lt;li&gt;Skia &lt;code&gt;aseprite-m102&lt;&#x2F;code&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;h3 id=&quot;cmake&quot;&gt;CMake&lt;&#x2F;h3&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;cmake.org&quot;&gt;CMake&lt;&#x2F;a&gt; 是用來建置 C++ 程式的工具。&lt;&#x2F;p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;cmake --version&lt;&#x2F;code&gt; 檢查電腦中是否已經安裝版本 3.16 以上的 CMake。&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;brew install cmake&lt;&#x2F;code&gt; 從 Homebrew 安裝 CMake。&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;h3 id=&quot;ninja&quot;&gt;Ninja&lt;&#x2F;h3&gt;
&lt;p&gt;Ninja 是由 Google 員工 Evan Martin 開發的小型建置系統。 Ninja 注重速度，被設計為盡可能快地運行。&lt;&#x2F;p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;ninja --version&lt;&#x2F;code&gt; 檢查電腦中是否已經安裝 Ninja。&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;brew install ninja&lt;&#x2F;code&gt; 從 Homebrew 安裝 Ninja。&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;h3 id=&quot;skia&quot;&gt;Skia&lt;&#x2F;h3&gt;
&lt;p&gt;Skia 是 Aseprite 的其中一個套件，依賴關係為 Aseprite &amp;gt; Laf &amp;gt; Skia。本次安裝所需的 Skia 版本為 &lt;code&gt;aseprite-m102&lt;&#x2F;code&gt;。&lt;&#x2F;p&gt;
&lt;ol&gt;
&lt;li&gt;從 &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;aseprite&#x2F;skia&#x2F;releases&quot;&gt;Releases · aseprite&#x2F;skia&lt;&#x2F;a&gt; 下載已經建置好的套件（&lt;code&gt;Skia-macOS-Release-arm64.zip&lt;&#x2F;code&gt;）。&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;mkdir -p $HOME&#x2F;deps&#x2F;skia&lt;&#x2F;code&gt; 創建資料夾。&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;unzip Skia-macOS-Release-arm64.zip -d $HOME&#x2F;deps&#x2F;skia&lt;&#x2F;code&gt; 解壓縮。&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;h2 id=&quot;an-zhuang-mac-suo-xu-tao-jian&quot;&gt;安裝 Mac 所需套件&lt;&#x2F;h2&gt;
&lt;p&gt;需要的 Mac 套件有：&lt;&#x2F;p&gt;
&lt;ol&gt;
&lt;li&gt;Xcode&lt;&#x2F;li&gt;
&lt;li&gt;MacOS SDK&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;p&gt;從 App Store 下載 Xcode 並開啟，按照指示安裝 MacOS SDK 即可。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;bian-yi&quot;&gt;編譯&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;xia-zai-yuan-shi-ma&quot;&gt;下載原始碼&lt;&#x2F;h3&gt;
&lt;p&gt;找到一個合適的資料夾後下載原始碼。&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;sh&quot; style=&quot;background-color:#eff1f5;color:#4f5b66;&quot; class=&quot;language-sh &quot;&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;git&lt;&#x2F;span&gt;&lt;span&gt; clone&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt; --recursive&lt;&#x2F;span&gt;&lt;span&gt; https:&#x2F;&#x2F;github.com&#x2F;aseprite&#x2F;aseprite.git
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;--recursive&lt;&#x2F;code&gt; 會一併下載在其他 repo 的 dependency。&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;h3 id=&quot;chuang-jian-jian-zhi-zi-liao-jia&quot;&gt;創建建置資料夾&lt;&#x2F;h3&gt;
&lt;p&gt;創建建置資料夾的目的是：如果想要重新建置程式的話，只需要清空建置資料夾即可。&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;sh&quot; style=&quot;background-color:#eff1f5;color:#4f5b66;&quot; class=&quot;language-sh &quot;&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;cd&lt;&#x2F;span&gt;&lt;span&gt; aseprite
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;mkdir&lt;&#x2F;span&gt;&lt;span&gt; build
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h3 id=&quot;kai-shi-jian-zhi&quot;&gt;開始建置&lt;&#x2F;h3&gt;
&lt;p&gt;進入建置資料夾：&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;sh&quot; style=&quot;background-color:#eff1f5;color:#4f5b66;&quot; class=&quot;language-sh &quot;&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;cd&lt;&#x2F;span&gt;&lt;span&gt; build
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;使用 CMake 建置：&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;sh&quot; style=&quot;background-color:#eff1f5;color:#4f5b66;&quot; class=&quot;language-sh &quot;&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;cmake &lt;&#x2F;span&gt;&lt;span&gt;\
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;  -DCMAKE_BUILD_TYPE&lt;&#x2F;span&gt;&lt;span&gt;=RelWithDebInfo \
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;  -DCMAKE_OSX_ARCHITECTURES&lt;&#x2F;span&gt;&lt;span&gt;=arm64 \
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;  -DCMAKE_OSX_DEPLOYMENT_TARGET&lt;&#x2F;span&gt;&lt;span&gt;=11.0 \
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;  -DCMAKE_OSX_SYSROOT&lt;&#x2F;span&gt;&lt;span&gt;=&#x2F;Applications&#x2F;Xcode.app&#x2F;Contents&#x2F;Developer&#x2F;Platforms&#x2F;MacOSX.platform&#x2F;Developer&#x2F;SDKs&#x2F;MacOSX.sdk \
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;  -DLAF_BACKEND&lt;&#x2F;span&gt;&lt;span&gt;=skia \
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;  -DSKIA_DIR&lt;&#x2F;span&gt;&lt;span&gt;=$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;HOME&lt;&#x2F;span&gt;&lt;span&gt;&#x2F;deps&#x2F;skia \
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;  -DSKIA_LIBRARY_DIR&lt;&#x2F;span&gt;&lt;span&gt;=$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;HOME&lt;&#x2F;span&gt;&lt;span&gt;&#x2F;deps&#x2F;skia&#x2F;out&#x2F;Release-arm64 \
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;  -DSKIA_LIBRARY&lt;&#x2F;span&gt;&lt;span&gt;=$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;HOME&lt;&#x2F;span&gt;&lt;span&gt;&#x2F;deps&#x2F;skia&#x2F;out&#x2F;Release-arm64&#x2F;libskia.a \
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;  -DPNG_ARM_NEON&lt;&#x2F;span&gt;&lt;span&gt;:STRING=on \
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;  -G&lt;&#x2F;span&gt;&lt;span&gt; Ninja \
&lt;&#x2F;span&gt;&lt;span&gt;  ..
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;其中有一些參數要注意：&lt;&#x2F;p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;DCMAKE_OSX_SYSROOT&lt;&#x2F;code&gt;：MacOS SDK 的路徑。&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;DSKIA_*&lt;&#x2F;code&gt;：Skia 的解壓縮路徑如果有變更，參數也要修改。&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;..&lt;&#x2F;code&gt;：不是省略，是父目錄的意思，因為程式碼都在父目錄。&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;p&gt;使用 Ninja 建置：&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;sh&quot; style=&quot;background-color:#eff1f5;color:#4f5b66;&quot; class=&quot;language-sh &quot;&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;ninja&lt;&#x2F;span&gt;&lt;span&gt; aseprite
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h2 id=&quot;zuo-cheng-ying-yong-cheng-shi&quot;&gt;做成應用程式&lt;&#x2F;h2&gt;
&lt;p&gt;建置完後，打開 &lt;code&gt;aseprite&#x2F;build&#x2F;bin&#x2F;aseprite&lt;&#x2F;code&gt; 就可以使用 Aseprite 了。為了讓我們編譯的 Aseprite 更有應用程式的感覺，我們可以將這些檔案打包成一個 &lt;code&gt;.app&lt;&#x2F;code&gt; 檔，和啟動台裡面的程式一樣美觀又方便。&lt;&#x2F;p&gt;
&lt;ol&gt;
&lt;li&gt;建立資料夾 &lt;code&gt;Aseprite.app&lt;&#x2F;code&gt;，若跳出視窗，選擇將副檔名加入結尾。&lt;&#x2F;li&gt;
&lt;li&gt;把 &lt;code&gt;aseprite&#x2F;build&#x2F;bin&lt;&#x2F;code&gt; 內的所有檔案加入 &lt;code&gt;Aseprite.app&lt;&#x2F;code&gt;。&lt;&#x2F;li&gt;
&lt;li&gt;右鍵 &lt;code&gt;Aseprite.app&lt;&#x2F;code&gt; 取得資訊。&lt;&#x2F;li&gt;
&lt;li&gt;把 &lt;code&gt;aseprite&#x2F;data&#x2F;icons&#x2F;ase.ico&lt;&#x2F;code&gt; 這個圖示拉到 &lt;code&gt;Aseprite.app&lt;&#x2F;code&gt; 資訊框左上角的圖示欄位，以更換圖示。&lt;&#x2F;li&gt;
&lt;li&gt;最後把 &lt;code&gt;Aseprite.app&lt;&#x2F;code&gt; 放進應用程式資料夾，即可從啟動台中開啟。&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
</content>
        
    </entry>
    <entry xml:lang="zh-tw">
        <title>Android Jetpack Compose</title>
        <published>2024-01-20T00:00:00+00:00</published>
        <updated>2024-01-20T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              NatsuCamellia
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://natsucamellia.github.io/android-jetpack-compose/"/>
        <id>https://natsucamellia.github.io/android-jetpack-compose/</id>
        
        <content type="html" xml:base="https://natsucamellia.github.io/android-jetpack-compose/">&lt;p&gt;Android Jetpack 是 Google 開發用來製作 Android 應用程式的現代函式庫，核心思想是：&lt;&#x2F;p&gt;
&lt;ol&gt;
&lt;li&gt;降低程式碼數量以提升工作效率&lt;&#x2F;li&gt;
&lt;li&gt;減少錯誤異常&lt;&#x2F;li&gt;
&lt;li&gt;專注於設計應用程式&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;p&gt;此外，在 Android Jetpack 的&lt;a href=&quot;https:&#x2F;&#x2F;developer.android.com&#x2F;jetpack?hl=zh-tw&quot;&gt;官方網站&lt;&#x2F;a&gt;也有詳細且豐富的教學與範例，網站的設計美觀且簡約，有興趣可以參考。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;compose&quot;&gt;Compose&lt;&#x2F;h2&gt;
&lt;p&gt;Compose 公布於 2019 年，正式發布於 2021 年 7 月，是 Jetpack 中用於 Android UI 設計的函式庫。Compose 捨棄早期使用的 XML，改使用較現代的聲明式 UI（Declarative UI）。&lt;&#x2F;p&gt;
&lt;p&gt;以下簡單比較 XML 與 Compose 製作 &lt;code&gt;Hello World!&lt;&#x2F;code&gt; 文字方塊的程式碼。&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;xml&quot; style=&quot;background-color:#eff1f5;color:#4f5b66;&quot; class=&quot;language-xml &quot;&gt;&lt;code class=&quot;language-xml&quot; data-lang=&quot;xml&quot;&gt;&lt;span style=&quot;color:#a7adba;&quot;&gt;&amp;lt;!-- Android UI in XML --&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;TextView
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;android:text&lt;&#x2F;span&gt;&lt;span&gt;=&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;Hello World!&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;TextView&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;pre data-lang=&quot;kotlin&quot; style=&quot;background-color:#eff1f5;color:#4f5b66;&quot; class=&quot;language-kotlin &quot;&gt;&lt;code class=&quot;language-kotlin&quot; data-lang=&quot;kotlin&quot;&gt;&lt;span style=&quot;color:#a7adba;&quot;&gt;&#x2F;&#x2F; Android UI in Compose
&lt;&#x2F;span&gt;&lt;span&gt;Text(
&lt;&#x2F;span&gt;&lt;span&gt;    text = &amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;Hello World!&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;)
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;相較於使用 XML，聲明式 UI 更加簡潔、不易出錯，並且能降低程式碼數量，使開發者更能專注於程式本身的功能性，而非花費大量時間除錯。因此聲明式 UI 被視為是應用程式開發的未來。&lt;&#x2F;p&gt;
&lt;p&gt;在 Compose 之前，由 Meta 於 2015 年發布的 React Native 以及由 Google 於 2017 年發布的 Flutter，兩者皆採用了聲明式 UI 且皆為用來開發跨平台應用程式的套件，因此聲明式 UI 不是非常創新的作法。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;kotlin&quot;&gt;Kotlin&lt;&#x2F;h2&gt;
&lt;p&gt;Compose 必須搭配 Kotlin 語言使用。Kotlin 是由 JetBrains 於 2016 年正式發布的 JVM 語言，原先是希望 Kotlin 能增加自家 IDE IntelliJ IDEA 的銷售量。而 Google 在隔年的開發者大會 Google I&#x2F;O 上宣布，Kotlin 成為 Android 的官方開發語言，並且 Google 會為 Kotlin 提供最佳的支援。&lt;&#x2F;p&gt;
&lt;p&gt;在這之前，Android 的開發語言是 Java，而如今 Kotlin 取代 Java 成為官方語言，並不代表開發者只能從兩門程式語言中選擇一門使用，而是得益於兩者皆為 JVM 語言而可以同時搭配使用。熟悉 Java 的開發者可以逐漸將程式碼替換為 Kotlin，不必一次替換所有程式碼。&lt;&#x2F;p&gt;
&lt;p&gt;Google 選擇 Kotlin 是因為 Kotlin 簡潔的語法（相較於 Java 簡潔許多），更重要的是 Kotlin 的 Null Safety 解決了長期困擾 Java 開發者的 &lt;code&gt;NullPoinerException&lt;&#x2F;code&gt;。&lt;&#x2F;p&gt;
&lt;p&gt;接觸了 Kotlin 之後，我認同 Kotlin 是簡潔又好用的語言。而我近期在 YouTube 上找到了關於 Kotlin 這個語言的顏值展示：&lt;&#x2F;p&gt;
&lt;iframe width=&quot;100%&quot; height=&quot;400&quot; src=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;embed&#x2F;iTy13tsi054?si=f45TORRifX6IOC7z&quot; title=&quot;YouTube video player&quot; frameborder=&quot;0&quot; allow=&quot;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share&quot; allowfullscreen&gt;&lt;&#x2F;iframe&gt;
&lt;h2 id=&quot;xue-xi&quot;&gt;學習&lt;&#x2F;h2&gt;
&lt;p&gt;若想要學習使用 Jetpack Compose 開發 Android 應用程式，可以參考 Android Developers 的&lt;a href=&quot;https:&#x2F;&#x2F;developer.android.com&#x2F;?hl=zh-tw&quot;&gt;官方網站&lt;&#x2F;a&gt;。不過網站的編排方式我個人認為很混亂，時常找不到想要的資訊，因此我將學習資源列在下方：&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;developer.android.com&#x2F;courses&#x2F;android-basics-compose&#x2F;unit-1?hl=zh-tw&quot;&gt;單元 1：您的第一個 Android 應用程式&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;developer.android.com&#x2F;courses&#x2F;android-basics-compose&#x2F;unit-2?hl=zh-tw&quot;&gt;單元 2：建構應用程式使用者介面&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;developer.android.com&#x2F;courses&#x2F;android-basics-compose&#x2F;unit-3?hl=zh-tw&quot;&gt;單元 3：顯示清單並使用質感設計&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;developer.android.com&#x2F;courses&#x2F;android-basics-compose&#x2F;unit-4?hl=zh-tw&quot;&gt;單元 4：導覽和應用程式架構&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;developer.android.com&#x2F;courses&#x2F;android-basics-compose&#x2F;unit-5?hl=zh-tw&quot;&gt;單元 5：連線至網際網路&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;developer.android.com&#x2F;courses&#x2F;android-basics-compose&#x2F;unit-6?hl=zh-tw&quot;&gt;單元 6：資料持續性&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;developer.android.com&#x2F;courses&#x2F;android-basics-compose&#x2F;unit-7?hl=zh-tw&quot;&gt;單元 7：WorkManager&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;developer.android.com&#x2F;courses&#x2F;android-basics-compose&#x2F;unit-8?hl=zh-tw&quot;&gt;單元 8：Compose 搭配 View&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;一開始講解 Kotlin 的部分很簡單；中期開始編排版面配置與樣式時很有成就感，因為聲明式 UI 讓我可以用簡潔的程式碼做出好看的 UI，加上內建的 Material Design 讓我不用擔心字體、顏色等外觀設計；到了後期就會出現一些用不到的功能，此時學習的興致就會比較低落。&lt;&#x2F;p&gt;
&lt;p&gt;我覺得這一系列的教學編排地很好，不但資訊量適中，在每個單元結束前都會有個小專案來讓學習者動手實作。實作時需按照教學的要求做出應用程式，就像是為一個真實的使用者開發一樣，實際做出來之後會非常有成就感。&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="zh-tw">
        <title>二十歲生日</title>
        <published>2024-01-19T00:00:00+00:00</published>
        <updated>2024-01-19T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              NatsuCamellia
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://natsucamellia.github.io/20-year-old-birthday/"/>
        <id>https://natsucamellia.github.io/20-year-old-birthday/</id>
        
        <content type="html" xml:base="https://natsucamellia.github.io/20-year-old-birthday/">&lt;p&gt;昨天是我的二十歲生日，母親提議用披薩來為我慶生，於是下午我和母親一起到鎮上的達美樂挑選。選披薩對我而言從來不是一件容易的事，套餐有分買大送大、一大一小附加炸物與點心，以及三個大披薩；口味更有千百種，有海鮮、夏威夷以及大四喜等。所幸披薩店不是會有很多顧客的店，我和母親得以在一旁的座位仔細挑選五分鐘。&lt;&#x2F;p&gt;
&lt;p&gt;在等待披薩製作的過程中，母親在一旁為我拍下了好多張照片。從小到大母親的鏡頭總是對焦在我和弟弟身上，無時無刻都想為我們拍照。特別是在我上了大學、離開家以後，和家人相見不如以往頻繁，這也難怪母親這一天拍了特別多張、特別用心。母親為我拍照時，由於我拙於拍照時擺出如模特般的姿勢，於是索性什麼姿勢也不擺了，簡單地將雙手輕放在桌上，臉上露出自然的微笑。這不是虛偽的笑容，而是出自內心認為還有人能主動為自己拍照，是天大的幸福。&lt;&#x2F;p&gt;
&lt;p&gt;回到家後，母親將披薩與她在早上買的巧克力蛋糕與草莓擺上餐桌，這是非常有個人特色的組合，因為巧克力蛋糕是我最喜歡的蛋糕，而我的生日所在的冬季是草莓的季節。看著這張母親在祖母過世後所買的餐桌，大小正好能供四人使用，堅實的木桌上疊著拋光過的白色石板，桌上的花瓶增添了典雅的氛圍。回想起來，我們已經好久沒有拍全家福了，上一次是我還在唸國小時所拍的，這期間都沒有拍全家福有點可惜。母親將手機放上餐桌前的三腳架，父親、母親、我和弟弟圍在餐桌後拍下了好多張珍貴的全家福，將這幸福的瞬間記錄為永遠。&lt;&#x2F;p&gt;
&lt;p&gt;生日不能少了生日願望。小時候總是不懂，為何大人的願望永遠都是身體健康與平安快樂，明明還有更有意思的願望。如今長大了我也依舊不懂，為什麼我現在許下的願望是希望家人身體健康、每天都要開心。是因為只有小時候才會許下所謂有意思的願望嗎？還是說長大後開始重視身體健康了？也可能是我開始珍視家人了吧？但是無論如何，對我而言這就是最重要、最有意思的二十歲生日願望。&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="zh-tw">
        <title>2023 回顧</title>
        <published>2023-12-31T00:00:00+00:00</published>
        <updated>2023-12-31T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              NatsuCamellia
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://natsucamellia.github.io/2023-recap/"/>
        <id>https://natsucamellia.github.io/2023-recap/</id>
        
        <content type="html" xml:base="https://natsucamellia.github.io/2023-recap/">&lt;p&gt;又到了迎接新年的日子了，各地舉辦的跨年煙火秀是今夜的重頭戲。在這之前我不曾參加過任何跨年煙火秀，只有去年勉強能算是參加過。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;qu-nian-de-yan-huo-xiu&quot;&gt;去年的煙火秀&lt;&#x2F;h2&gt;
&lt;p&gt;去年的跨年夜，我和同學到學校附近的一個觀賞點，期待能夠看到台北 101 的煙火秀。街道上立著不少三腳架，準備用攝影機記錄下那晚的煙火秀。然而，當晚下著毛毛細雨，極低的能見度使我們連 101 本體都看不見。煙火秀期間，我們只能看著圍繞在 101 四周的雲霧閃爍，如同霓虹燈的光線穿透雨滴滿佈的玻璃窗，閃閃動人卻看不清輪廓。煙火秀結束後，攝影師掛著失望的神情，街上圍觀的人群們也帶著幾分遺憾歸去。那年煙火的繽紛被灰雨沖淡，那時我便決定，一定要親眼看到今年的煙火。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;xin-nian-mu-biao&quot;&gt;新年目標&lt;&#x2F;h2&gt;
&lt;p&gt;說到新年，便不能不提到新年目標。回顧我為今年訂下的目標，六項中達成了兩項。第一項是通過日檢 N5，雖然我沒有實際應考，但是我相信我有能力高分通過 N5；另一項是不要被課業支配時間，這學期我在空閒時做了想做的事，包括學 Android 與卡林巴琴，而不只是讀書，這就算是達成了目標。&lt;&#x2F;p&gt;
&lt;p&gt;明年的新年目標，我決定是以下這些：&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;考取多益金色證書&lt;&#x2F;li&gt;
&lt;li&gt;在大三上學期選修不同的外語課程&lt;&#x2F;li&gt;
&lt;li&gt;用日文寫自我介紹與一篇文章放在網站&lt;&#x2F;li&gt;
&lt;li&gt;每天睡前用鋼筆寫下一件感謝的事與學到的事&lt;&#x2F;li&gt;
&lt;li&gt;用《原子習慣》的方法，培養一項新習慣&lt;&#x2F;li&gt;
&lt;li&gt;把以上五項目標，用中英日三語記在隨時看得見的地方&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;這些目標原則上努力就做得到、清楚明確並且沒有讓我懶得做的事。其中第二項與第六項基本上能夠輕鬆達成；第一項因為有時間壓力所以能夠提供足夠動力；其餘則是輕鬆簡單的小目標。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;hui-gu&quot;&gt;回顧&lt;&#x2F;h2&gt;
&lt;p&gt;回想今年發生了哪些事時，發現高三是最豐富有趣的一年，學測、繁星以及上大學，在人生的交叉路口有太多新奇的事值得記錄。但是今年不再有那樣多印象深刻的事，大抵是因為已經習慣大學生活了。&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;一月英雄聯盟由拳頭接手直營，MacOS 也可以玩台服了。&lt;&#x2F;li&gt;
&lt;li&gt;三月教育部宣布，學校不再需要戴口罩，終於不必隨身攜帶口罩。&lt;&#x2F;li&gt;
&lt;li&gt;四月時，當時的我被大一下的課程壓得喘不過氣，發現自己有「努力上癮」的狀況，得以著手改善。&lt;&#x2F;li&gt;
&lt;li&gt;六月放暑假後，到叔叔家住了幾天，期間叔叔帶我去好多地方玩，包括唱 KTV 以及逛好市多。&lt;&#x2F;li&gt;
&lt;li&gt;七月完成了五十天程式計畫，暑假開始當時開始了一百天程式計畫，但是到了第五十天就已經失去動力，僅完成了半馬。&lt;&#x2F;li&gt;
&lt;li&gt;八月中考到了汽車駕照；八月底開學前買了外接螢幕來保護我的眼睛，使用後眼睛感覺舒服不少，並且也不必再來回切換視窗。&lt;&#x2F;li&gt;
&lt;li&gt;九月在學校圖書館新開放的輕閱讀區讀了很多書，最重要的事卡片和筆記以及超速學習，前者改變我的 Obsidian 檔案結構，後者讓我在學 Android 時順利不少。&lt;&#x2F;li&gt;
&lt;li&gt;十月姑姑過世，回家的那幾天意外地與家人進行了心靈對話。&lt;&#x2F;li&gt;
&lt;li&gt;十一月和朋友去了木柵動物園和政治大學，當時說動物園是個可以偶爾去一次的地方，直接一點就是很無聊。&lt;&#x2F;li&gt;
&lt;li&gt;十二月丟了錢包，但很快地就被送回系所辦公室；寒假時也逛了很多書店，包括在聖誕夜熄燈的信義誠品。&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;令我感嘆的是，許多事要不是當初有用文字記錄下來，現在的我就無法記得當初發生了哪些事，今後的恐怕也無從回想。&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="zh-tw">
        <title>大二上修課心得</title>
        <published>2023-12-29T00:00:00+00:00</published>
        <updated>2023-12-29T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              NatsuCamellia
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://natsucamellia.github.io/112-1-course-review/"/>
        <id>https://natsucamellia.github.io/112-1-course-review/</id>
        
        <content type="html" xml:base="https://natsucamellia.github.io/112-1-course-review/">&lt;p&gt;這個學期轉眼間就結束了，這段期間我總共修了 19 學分的課程，外加旁聽一堂 3 學分的課。這學期有個比較大的改變是，選課時我有意識地將上課時間避開週一，如此一來我就能夠體驗週休三日的生活。雖然客觀來說，週休三日能夠讓課業壓力稍微降低，但是這學期我依然備感壓力，也許因為線性代數，總讓我必須付出大量時間複習。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;nong-cun-sheng-huo-tai-yu-hui-hua&quot;&gt;農村生活臺語會話&lt;&#x2F;h2&gt;
&lt;blockquote&gt;
&lt;p&gt;週二 9:10 ~ 11:10｜通識 A8｜學分 2&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;這是一堂適合「會說」臺語的學生來修的課，課程目標是提供學生練習說臺語、使用臺語的機會，同時了解臺語有哪些學習資源。課堂的前幾週，老師簡單介紹羅馬拼音、聲調等發音規則；接著有不少活動，包括自我介紹、介紹學校可食作物以及用臺語玩桌遊。另外有大約三次的課程邀請了校外人士，分享與農村有關的主題。期中期末有簡單的小報告，期中的個人報告主題是「農村生活體驗」或是「農村職業分享」；期末的團體報告主題則是用臺語介紹桌遊，可以自行設計或是使用現成桌遊。&lt;&#x2F;p&gt;
&lt;p&gt;經過一學期的課程之後，我感覺臺語口說有變得稍微流暢一點，在做報告的過程中也學會了一些常見但是我不會說的字。老師上課很認真，準備了很多活動，但是我覺得成效不佳。根據上課的觀察，不少同學在打筆電、滑手機或是讀自己的書，只有被老師點到了才會說幾句台語。此外有少數團康活動是全班一起進行的，同時間只能有一個人發言，其他沒有發言的同學等同被浪費時間。&lt;&#x2F;p&gt;
&lt;p&gt;也許是因為這門課的經驗不足，抑或是口說課天生的缺陷，導致對於學生而言，學習上的「時間效率」不佳。不過老師每堂課都不斷地嘗試與改變，我相信這堂課會變得更好。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;xian-xing-dai-shu&quot;&gt;線性代數&lt;&#x2F;h2&gt;
&lt;blockquote&gt;
&lt;p&gt;週二 13:10 ~ 16:20｜必修｜學分 3&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;這是資工系必修課，這門課的風格和一般的線性代數課程不同，老師不從矩陣開始，而是藉由抽象代數與集合的概念，證明並推廣每個定理。課程一開始講解群體場，定義線性獨立與線性組合，之後推廣出各式各樣的定理。&lt;&#x2F;p&gt;
&lt;p&gt;上這堂課可以體驗到何謂「持續加速」，發車時的慢速，讓人以為這將是輕鬆的數學列車，每個觀念講解結束後，老師都會慢下來回答同學產生的疑問。隨著時間行進，同學們的背仍緊貼椅背，列車還在加速，原來我們搭上了高鐵。這時老師不再主動慢下來，只能依賴少數同學要求老師降低車速，重新解釋一次剛剛經過的概念，這才讓全班得到喘息的空間。到了後段，老師發現距離目的地還很遠，時間似乎不夠了。於是油門催到底，拉破時速表，此時不再減速，任何要求一概以「不懂也只能繼續」回應，終於在最後一堂課衝過 Friedberg 第六章。&lt;&#x2F;p&gt;
&lt;p&gt;老師的上課風格是著名的「隨機客」風格，沒有同學知道課程大綱，就連老師也不知道會教什麼，就連考試也都不知道會考什麼。就這樣邊上課，觀察進度後，滾動調整考試範圍、學期末要教到哪裡。&lt;&#x2F;p&gt;
&lt;p&gt;沒有作業，只有三次期考決定學期成績。評分標準幾乎全黑箱，學生只能知道自己的考試成績，其餘佔分比例、分數落點等一概不公開。學期開始時，老師說：「相信我」表示自己會依照公正的標準給分。期考內容全部都是證明，約有一半是課堂中證明過的，另外一半則是要用課堂所學，推廣證明新的陳述。&lt;&#x2F;p&gt;
&lt;p&gt;一學期下來，每週課後都要花費約四個小時複習，考前一週更要花費超過十二個小時。但是我不僅僅學到線性代數的知識，也學到了很多證明的技巧，是非常扎實的一門數學課。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;zi-liao-ke-xue-gai-lun&quot;&gt;資料科學概論&lt;&#x2F;h2&gt;
&lt;blockquote&gt;
&lt;p&gt;週三 9:50 ~ 12:10｜系外選修｜學分 3&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;這門課是生物機電學系開設的選修課，內容包括簡短的 Python、資料視覺化、影像處理、機器學習、深度學習。老師會將上課時間延後至 9:50 開始，上課時老師帶著同學邊做邊學，下課後都有一份作業，難度每週上升，最難的部分是影像處理。期末報告是自己或是兩人一組訓練圖片分類的模型，依照模型準確率、書面報告以及上台報告三個部分給分。評分標準是作業 88% 以及期末報告 12%。&lt;&#x2F;p&gt;
&lt;p&gt;這堂課我翹掉了幾週，因為前面的部分比較容易，自己看投影片就懂了，加上老師也表示考量到教室空間，能自己完成的話不用出席也沒關係。到學期中開始進行期末報告的組隊時，我為了找組員而到教室上課，後來發現可以自己做所以沒有找組員。但是在那堂課，我發現對於課程的內容，我開始有聽課的需求了，於是這之後的每堂課我都有出席。&lt;&#x2F;p&gt;
&lt;p&gt;學期結束後，我在使用 Python 上變得熟悉了，並且也能夠使用常見的函式庫，做到影像處理、機器學習與深度學習，非常有成就感。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;ying-wen-duan-luo-xie-zuo&quot;&gt;英文段落寫作&lt;&#x2F;h2&gt;
&lt;blockquote&gt;
&lt;p&gt;週三 15:30 ~ 17:20｜基本能力課程｜學分 2&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;外語教學中心開設的課程，內容圍繞在單一段落寫作，在一個段落內包括主題、論點、支持理由以及總結，並教學寫出各類文體。&lt;&#x2F;p&gt;
&lt;p&gt;兩次個人作業與兩次小組作業共佔 40%、上課表現佔 30% 以及期末考佔 30%。每次作業都會經過擬草稿、寫作中心輔導員給建議，最後繳交最終段落。期末考和學測作文差不多，但當天使用自己的筆電作答，不可使用字典以外的網路資源。&lt;&#x2F;p&gt;
&lt;p&gt;上課時老師會帶我們看範文，並進行課堂問答，分析文章的結構。但是上了這麼多光說不練，不如讓我們更多的寫作練習機會。此外，老師每次進行問答的時候都會死守作者那一方，常常出現很明顯沒有對錯之分的問題，但老師總是跟我們說作者是對的；或是作者可能根本沒有那個意思，但老師總是穿鑿附會。&lt;&#x2F;p&gt;
&lt;p&gt;這學期下來，我還是學到了不少的寫作知識，包括如何寫出不空泛也不會太具體的主題句，也學到如何編排佐證來強化論點。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;xi-tong-cheng-shi-she-ji&quot;&gt;系統程式設計&lt;&#x2F;h2&gt;
&lt;blockquote&gt;
&lt;p&gt;週四 9:10 ~ 12:10｜必修｜學分 3&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;這門課著重於 Unix 系統提供的 API，介紹如何透過這些 API 用 C 語言實現系統底層邏輯，包括檔案讀寫、Process 溝通、多執行緒等。&lt;&#x2F;p&gt;
&lt;p&gt;作業佔分 40%，總共有四份手寫與四份程式，手寫的部分主要是複習上課學過的概念，題數不多也很簡單；程式部分需要根據題目的需求寫出程式，重點都是如何使用 API、節省 CPU 資源以及程式間溝通等，不太需要處理錯誤。考試佔分 60%，分為期中考與期末考，幾乎都是觀念題，著重在於找出程式裡可能出現問題的部分，以及想出遇到系統問題怎麼辦，例如在 Linux 中因為開太多程式不能登入的問題。&lt;&#x2F;p&gt;
&lt;p&gt;寫程式作業是最好玩的時候，難度不高但做出來的程式很有成就感。通常程式碼只會有大約兩百行，這是因為需要像堆積木一樣，組合各種 API 來達成需求；而不是像解題一樣，程式碼數量是來自於問題的複雜度。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;yan-suan-fa-she-ji-yu-fen-xi&quot;&gt;演算法設計與分析&lt;&#x2F;h2&gt;
&lt;blockquote&gt;
&lt;p&gt;週四 14:20 ~ 17:20｜必修｜學分 3&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;這門課與線性代數由同一位老師授課，評分標準也相同，都是三次考試加黑箱。學期開始時一樣先打下基礎，從數學的角度分析 Big O 開始，接著講解問題的時間上下界，剩下的時間都在介紹歷史上著名的問題與演算法，並說明了 P 與 NP。&lt;&#x2F;p&gt;
&lt;p&gt;考試時和線性代數也很像，主要證明上課學到的演算法的正確性以及複雜度，也有些題目要求想出新的演算法來解決新的問題，並分析正確性與複雜度。考試中最累心的是證明正確性，大部分演算法的正確性都很明顯，但若要使用數學的語言來證明的話，便是困難的問題了。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;ri-wen-er-shang&quot;&gt;日文二上&lt;&#x2F;h2&gt;
&lt;blockquote&gt;
&lt;p&gt;週五 10:20 ~ 13:10｜系外選修｜學分 3&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;這堂課是標準的日文課，每上完一課的下一週會有單字小考，這些小考佔成績的 40%，剩餘的部分是期中考與期末考。每一課的每個文法，老師都會先用自編文法講義講解，講義上有不少有趣的小補充，比起看著課本依樣畫葫蘆更容易理解。接著會帶我們唸課本的句子並各自練習課本的小習題，之後老師會按照座位依序，指定一位同學唸出自己的答案。&lt;&#x2F;p&gt;
&lt;p&gt;這學期的課程我更注重於口說的重音與腔調，每次跟著老師唸句子時，我都會注意每個單字的音調起伏，以及句子中的停頓。期中期末考時，最難的部分是聽力測驗，老師在播放音檔前沒有仔細說明題型，題目卷上也沒有充足的說明。我們只能聽著極快的語速、猜測題型、理解內容後並作答，唯一的補償是音檔會播放兩次。此外，聽力難度我認為以指數型成長。日文一的聽力測驗基本上聽到單字就能選答案了，這學期期中考要聽對話選出符合情境的答案，期末考甚至沒有選項，要完成填空題，並根據時態與文章類型選擇變化與文體。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;qian-zhan-zi-xun-ke-ji-shang&quot;&gt;前瞻資訊科技上&lt;&#x2F;h2&gt;
&lt;blockquote&gt;
&lt;p&gt;週五 14:20 ~ 17:20｜系內選修｜學分 3｜旁聽&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;這堂課由多位老師共同授課，每位老師會針對自己的研究領域，簡單地說明兩個禮拜，讓同學對該領域有初步的理解。另外每兩週也會有一份作業，大部分是動手寫程式的作業。一般來說我只會去聽每位老師的第一週，只有對該領域比較有興趣時才會去聽第二週。&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="zh-tw">
        <title>信義誠品</title>
        <published>2023-12-23T00:00:00+00:00</published>
        <updated>2023-12-23T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              NatsuCamellia
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://natsucamellia.github.io/eslite-xinyi/"/>
        <id>https://natsucamellia.github.io/eslite-xinyi/</id>
        
        <content type="html" xml:base="https://natsucamellia.github.io/eslite-xinyi/">&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;natsucamellia.github.io&#x2F;eslite-xinyi&#x2F;eslite_xinyi.jpg&quot; alt=&quot;信義誠品&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;信義誠品即將在今年的聖誕夜熄燈，在媒體的連續報導下，吸引許多讀者與觀光客聚集於這間二十四小時不打烊的書店中。其實在我第一次得知信義誠品要熄燈的消息時，我便打算安排一個下午造訪，但礙於學期中的課業壓力與惰性，遲遲沒有下定決心找到一個合適的午後。而就在今天，寒假的第一天，也是信義誠品的倒數第二個營業日，終於來到了這家觀望已久的書店大門前。&lt;&#x2F;p&gt;
&lt;p&gt;穿過寬敞的大門，映入眼簾的盡是時尚服飾與精緻紀念品。眾多的專櫃、透亮的落地玻璃與微高的挑高，塑造了百貨公司的氛圍。注意著腳邊的孩童們，我在人群中穿梭，高掛的「Goodbye」布條輕擺，這是屬於信義誠品的祭典。&lt;&#x2F;p&gt;
&lt;p&gt;排隊搭乘前往二樓的手扶梯，人潮佔滿了左右四排手扶梯，沒有台北車站的匆促，只有歡快的交談聲不絕於耳。大人翻閱心理、財經等種類的暢銷大眾書籍，小孩把玩陳列桌上的玩偶。我邊走邊和朋友分享各自找到的有趣書籍，猜各種書打完 79 折後的優惠價要多少錢，我們將《勒布朗傳》哄抬價格，比定價還要貴上三百元。&lt;&#x2F;p&gt;
&lt;p&gt;三樓的書區是在我看過的所有書店之中最大的，藝術、語言、文學與科技應有盡有，外文書也玲琅滿目。走累了便選一本書並找一個角落席地而坐，一起欣賞書中充滿格調的室內設計。&lt;&#x2F;p&gt;
&lt;p&gt;「人山人海，」我說，「真想看看這裡平常關店的時候是什麼樣子。」&lt;&#x2F;p&gt;
&lt;p&gt;「你能待到明天晚上十二點的話就看得到了。」朋友說。&lt;&#x2F;p&gt;
&lt;p&gt;二十四小時永不歇業的書店，有誰能看到照明熄滅後、月光斜照的靜謐？恐怕就連店員也不曾親眼見過吧！&lt;&#x2F;p&gt;
&lt;p&gt;之後又逛了更高樓層，流程性看過四、五樓的生活商品，走過六樓的展演廳與餐廳後，我們就離開了。走出信義誠品，重返台北細雨輕飄的街頭，雲霧圍繞在遠方台北 101 的腰間。右方不遠處架著小型舞台，我手指舞台向朋友示意，我們湊到舞台前方。台上表演者演奏著音樂，唱著流行歌曲；台下五顏六色的雨傘頂著雨，頂著流行音樂的七彩音符，與舞台聚成一個自在自適的小小世界。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;hou-ji&quot;&gt;後記&lt;&#x2F;h2&gt;
&lt;p&gt;這篇文章是一個新嘗試，我最近覺得文章是該文字質樸沒錯，但是沒有經過精雕細琢的話，對我來說就不能算是一篇足夠有價值、能夠充分記錄細節的文章。我在這篇文章中相較於以往花了更多時間選擇適當的詞彙，以傳達更精準的想法；使用描述環境的形容詞以及讓文章更加生動而有畫面的修辭，讓讀者可以體會到書店內人擠人且怕撞到小朋友的情境；也嘗試加入了一些文學上的引用，借用蓉子的〈傘〉為書店外的音樂活動增添雨中獨有的浪漫。但是對於以往發布的文章，我不會也不想去修改，因為文字的呈現方式也能夠側面描寫當時的我。&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="zh-tw">
        <title>遺失錢包</title>
        <published>2023-12-16T00:00:00+00:00</published>
        <updated>2023-12-16T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              NatsuCamellia
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://natsucamellia.github.io/wallet-loss/"/>
        <id>https://natsucamellia.github.io/wallet-loss/</id>
        
        <content type="html" xml:base="https://natsucamellia.github.io/wallet-loss/">&lt;h2 id=&quot;yi-shi-qian-bao&quot;&gt;遺失錢包&lt;&#x2F;h2&gt;
&lt;p&gt;星期五下午「前瞻資訊科技」上課前數分鐘突然接到一通電話，一般來說我是不會接陌生電話的，但那電話號碼開頭令我感到熟悉。接起電話後才知道是系辦打來的電話，說我的錢包被人拿到系辦去了，摸了口袋突然覺得心涼，於是立刻衝到系辦領取，回來的時候課程已經開始了。&lt;&#x2F;p&gt;
&lt;p&gt;上課到一半 Messenger 遲來的通知（總是會晚幾個小時）說有陌生訊息，有兩個人一男一女同時傳訊息說撿到我的錢包，因為這個通知實在是太晚了，所以他們幫我送到系辦。我回訊息表示謝意，並問那個女生為什麼知道要送到哪裡，她說是 Google 我的名字找到高中榜單，得知現在讀哪個科系。這實在聰明，但其實 Google 一個陌生人也挺誇張的，我自己搜尋都找不到我了。&lt;&#x2F;p&gt;
&lt;p&gt;後來我們有加好友，隔天看到她的 FB 說她把錢包物歸原主像是飛天小女警，未免太可愛了吧！&lt;&#x2F;p&gt;
&lt;h2 id=&quot;zhun-bei-qi-mo-kao&quot;&gt;準備期末考&lt;&#x2F;h2&gt;
&lt;p&gt;下週第十六週是學校的期末考，原先預想期末考多個科目擠在一起準備時會很累人，不過大約在第十三週週末時開始規劃讀書計畫，現在把該做的事都做得差不多了，只剩下最終複習，可以好好面對期末考。&lt;&#x2F;p&gt;
&lt;p&gt;題外話是這讀書計畫還讓我每天有多餘的時間可以玩 MLTD，最近才把這個遊戲下載回來，目前正以全曲 full combo 以及六週年角色全突破為目標，每天玩一到兩個小時都游刃有餘。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;google-step-shi-xi&quot;&gt;Google STEP 實習&lt;&#x2F;h2&gt;
&lt;p&gt;最近看到 Google STEP 實習計畫開始招生了，我想要投看看，已經做好失敗的準備了，希望這次經驗會對未來有幫助。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;shua-leetcode&quot;&gt;刷 LeetCode&lt;&#x2F;h2&gt;
&lt;p&gt;學校已經上完資料結構和演算法的系列課程了，LeetCode 我想也可以開始刷了，可以當作複習也可以先預備好，突然要用到就能派上用場。&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="zh-tw">
        <title>Week 6 週記</title>
        <published>2023-10-15T00:00:00+00:00</published>
        <updated>2023-10-15T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              NatsuCamellia
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://natsucamellia.github.io/week-6/"/>
        <id>https://natsucamellia.github.io/week-6/</id>
        
        <content type="html" xml:base="https://natsucamellia.github.io/week-6/">&lt;h2 id=&quot;ri-ju-chu-lian&quot;&gt;日劇《初戀》&lt;&#x2F;h2&gt;
&lt;p&gt;利用國慶連假看完了日劇《初戀》，看的時候真的是眼淚不斷，特別喜歡這樣的「空氣感」，利用細節來表達劇情，也很喜歡時間線交錯的編排方式，看到後面會有「原來是這樣啊」的感覺。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;ada-di-yi-ci-qi-kao&quot;&gt;ADA 第一次期考&lt;&#x2F;h2&gt;
&lt;p&gt;這次的考試很注重反應能力，大部分的題目都不是複習上課內容就可以回答的，考試成績不樂觀。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;line-can-fang&quot;&gt;LINE 參訪&lt;&#x2F;h2&gt;
&lt;p&gt;週五去了 LINE Taiwan 的內湖辦公室參訪，總體上算可惜，剛好他們辦公室在辦活動，不能上樓參觀。整個流程就是幾個員工或實習生分享工作運用的技術，但我們大多是大一大二的學生，基本上都聽不太懂，規劃不太滿意。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;starapi&quot;&gt;StarAPI&lt;&#x2F;h2&gt;
&lt;p&gt;週六花了下午和晚上的時間，把繁星望遠鏡中有關資料的模組獨立出來，分成資料下載與產生資料的 StarDataFetcher，主要用 Python 寫，以及讀取 Json 轉換成各種 Java model 的 StarAPI。把 StarAPI 獨立的原因是希望未來有機會可以拿到 Android 上面用，Kotlin 是可以和 Java 共存的，之後試試看。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;ji-qi-xue-xi-coursera&quot;&gt;機器學習 Coursera&lt;&#x2F;h2&gt;
&lt;p&gt;週日終於完成了 Coursera 的機器學習基石，心得是這段學習過程中有點貪快了，學得不是很扎實。目前打算學愛丁堡大學的音樂理論，這次要慢慢地按照 Coursera 訂好的學習計畫學習，預計需要六個禮拜。&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="zh-tw">
        <title>Week 5 週記</title>
        <published>2023-10-08T00:00:00+00:00</published>
        <updated>2023-10-08T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              NatsuCamellia
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://natsucamellia.github.io/week-5/"/>
        <id>https://natsucamellia.github.io/week-5/</id>
        
        <content type="html" xml:base="https://natsucamellia.github.io/week-5/">&lt;h2 id=&quot;xian-dai-di-yi-ci-qi-kao&quot;&gt;線代第一次期考&lt;&#x2F;h2&gt;
&lt;p&gt;花了好多時間把線代好好複習一次了，但還是沒能解出許多老師給的練習題，後來才發現那些題目屬於比較困難的那一類。週二考試當天的題目相較而言比較簡單，因為考量到考試時間有限，加上範圍比練習習大的緣故。考試計分為十二題取前十高，每題十分，估計成績約在八十分左右。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;xi-tong-cheng-shi-she-ji-programming-homework-1&quot;&gt;系統程式設計 Programming Homework 1&lt;&#x2F;h2&gt;
&lt;p&gt;這次的作業要做一個 bulletin board，主要練習的部分是多個客戶端連線到一個伺服器的 I&#x2F;O Multiplexing 實作，以及多個伺服器同時修改 bulletin board 的 File Locking 實作。實作起來難度不大，反而是作業說明不夠詳細（現實應用的程式無可避免的），或是卡在其他的輸入輸出小細節（bug）。目前通過所有提供的測資了，不過還發現一些測資中沒有測的實作規範，接下來一個禮拜再花一點時間慢慢做完。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;coursera-ji-qi-xue-xi-ji-shi&quot;&gt;Coursera 機器學習基石&lt;&#x2F;h2&gt;
&lt;p&gt;這是一堂 Coursera 上的課程，也是前幾週被我放在每日活動表中的一個學習活動。這堂課上週被我連同其他課程一併棄置了，不過 Coursera 系統寄了一封通知信讓我繼續學習了，這週把 Week 4, 5 和 Homework 1 做完了。在做 Homework 1 的程式題時很有成就感，這堂課沒有教我們怎麼寫程式來機器學習，不過剛好這學期有修資料科學概論，又剛好在這禮拜練習了 numpy，使得我在實作 PLA（Percetpron Learning Algorithm）的時候得心應手，提供我繼續學完的動力。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;qia-lin-ba-qin&quot;&gt;卡林巴琴&lt;&#x2F;h2&gt;
&lt;p&gt;上週五訂這台卡林巴琴，這個週五晚上才到，我禮拜六早上才去領，在連假訂網購真的會因為物流堵塞而晚到。一拆開彈了幾下發出了超難聽的聲音，而且琴鍵表面有點髒，當下心有點涼，但畢竟才三百塊錢，本來就不抱太高的期待。後來彈音階才發現這台琴音準嚴重失準，很多鍵都差了半音到全音，甚至還有差到兩度的鍵。調音並用酒精擦拭琴鍵後，終於發出了我心目中的空靈聲音，頓時覺得 CP 值陡升。&lt;&#x2F;p&gt;
&lt;p&gt;到目前已經彈了三四個小時了，彈了不少久石讓的音樂，和卡林巴琴非常適配。過程中也喚起了一些小時候直笛吹的曲目，像是魔法公主、いつも何度でも等，非常懷念國小熟練直笛的那段時光。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;qi-ta-suo-shi&quot;&gt;其他瑣事&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;週日晚上學校和宿舍的學餐都沒營業，加上大雨的種種因素下，勉為其難地吃了麥當勞。&lt;&#x2F;li&gt;
&lt;li&gt;國慶連假室友都回家了，我得以在宿舍盡情彈卡林巴琴。&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
</content>
        
    </entry>
    <entry xml:lang="zh-tw">
        <title>2023 中秋連假</title>
        <published>2023-10-01T00:00:00+00:00</published>
        <updated>2023-10-01T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              NatsuCamellia
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://natsucamellia.github.io/mid-autumn-holiday/"/>
        <id>https://natsucamellia.github.io/mid-autumn-holiday/</id>
        
        <content type="html" xml:base="https://natsucamellia.github.io/mid-autumn-holiday/">&lt;h2 id=&quot;qian-zhan-gong-zuo-fang&quot;&gt;前瞻工作坊&lt;&#x2F;h2&gt;
&lt;p&gt;週二晚上系上舉辦了第一次的前瞻工作坊，主題是畢業學長姐的心得分享，講者是一位系上的教授以及一位在美國 Google 工作的學姊。在這場活動中聽到了一些實用的建議，例如說太難的課可以選擇旁聽、GPA 如何彈性調整、不用刻意要求自己迎合同儕等等，對於我現在的規劃非常有幫助。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;ai-xian-da-hui&quot;&gt;愛現大會&lt;&#x2F;h2&gt;
&lt;p&gt;週三晚上系上舉辦了年度愛現大會，去年的紀錄可以看這篇文章：&lt;a href=&quot;&#x2F;showing-show&quot;&gt;愛現大會&lt;&#x2F;a&gt;。今年的表演有拼拼圖、丟塑膠袋、西洋劍、體操，以及從不缺席的跳舞、唱歌，都還算精彩，希望大學四年都能記得看愛現大會。&lt;&#x2F;p&gt;
&lt;p&gt;再次回顧去年的愛現大會那篇文章後，注意到了去年想要學音樂，結果到最後還是放棄了，不只是因為練習很難，而且大部分的樂器攜帶不便且容易吵到周遭的人。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;lian-jia-hui-jia&quot;&gt;連假回家&lt;&#x2F;h2&gt;
&lt;p&gt;本週末是中秋連假，週四教師節、週五中秋節，隔週一沒有課，這個連假對我而言是五天連假，回家放長假真的很放鬆，不過週二馬上就要考線性代數了，這是假期中的壓力來源。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;jekyll-wang-ye-she-ji&quot;&gt;Jekyll 網頁設計&lt;&#x2F;h2&gt;
&lt;p&gt;終於開始了規劃已久的 Jekyll 研究，花了幾天的時間做了一個模板，Github 連結：&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;NatsuCamellia&#x2F;Bell&quot;&gt;NatsuCamellia&#x2F;Bell&lt;&#x2F;a&gt;。發現其實挺簡單的，最難的應該是想法，通常是卡在不知道要做什麼風格。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;qia-lin-ba-qin&quot;&gt;卡林巴琴&lt;&#x2F;h2&gt;
&lt;p&gt;連假這幾天我和卡林巴琴相遇了，原本是想要研究如何用電腦製作音樂盒音樂，但是卻沒有得到想要的資訊。在這過程中，突然想到的卡林巴琴的外觀，卻忘記它的名字，但借助 ChatGPT 很快就找到卡林巴琴了。在 YouTube 上聽了多曲卡林巴琴的音樂，就是它了，這是我心裡的直覺反應，我便立刻在蝦皮上訂了一台三百塊的卡林巴琴，嘗試一段時間後再決定要不要買更貴的。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;yan-jing-xing&quot;&gt;眼鏡行&lt;&#x2F;h2&gt;
&lt;p&gt;我還去了眼鏡行，讓驗光師檢查了我的眼睛以及舊眼鏡後，我兩眼的前後度數分別為 125 度以及 150 度，四年來只多了 25 度，但是卻覺得視力大幅退化。詢問驗光師後才知道，現在我的眼睛大概只能矯正到 1.0，上次我的眼睛比較年輕甚至可以矯正到 1.2。既然我配眼鏡也只有增加 25 度，看起來沒有太大的不同，當下就決定不配了。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;qi-ta-suo-shi&quot;&gt;其他瑣事&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;每日活動規劃中的學習都取消了&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
</content>
        
    </entry>
    <entry xml:lang="zh-tw">
        <title>每日活動規劃、卡片盒筆記</title>
        <published>2023-09-24T00:00:00+00:00</published>
        <updated>2023-09-24T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              NatsuCamellia
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://natsucamellia.github.io/daily-schedule-and-zettelkasten/"/>
        <id>https://natsucamellia.github.io/daily-schedule-and-zettelkasten/</id>
        
        <content type="html" xml:base="https://natsucamellia.github.io/daily-schedule-and-zettelkasten/">&lt;h2 id=&quot;mei-ri-huo-dong-gui-hua&quot;&gt;每日活動規劃&lt;&#x2F;h2&gt;
&lt;p&gt;因為最近想學的東西變多了，於是上週日我規劃了一個每日活動表，內有每天要學習的主題以及要探索的興趣。學習主題包括了日文、離散數學、機器學習等，而興趣則有像素畫等。&lt;&#x2F;p&gt;
&lt;p&gt;經過一個禮拜的今天，大致上都有按照規劃中的完成，但是我學到了一件事：&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;如果你不想澆滅你的熱情，請不要進行規劃。&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;會這樣說是因為當我規劃完之後，每天就會有作業感，到了晚上卻還要按表操課，沒辦法隨心所意地想做什麼就做什麼。此外，我會複習當天的課程，如果像是線性代數這種需要複習比較久的內容，加上了預先規劃好的活動後，當天可能沒辦法複習完畢，就導致複習進度持續推遲，影響到其他課程的複習。&lt;&#x2F;p&gt;
&lt;p&gt;為了改進，我決定刪除我比較沒興趣的學習主題，以避免產生厭惡感；另外，我原本規劃每天可以有兩個學習主題，現在限制為一個；最後，每天只能從學習主題與興趣之中擇一，透過減少重複次數以增加期待。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;qia-pian-he-bi-ji&quot;&gt;卡片盒筆記&lt;&#x2F;h2&gt;
&lt;p&gt;這週細讀了卡片盒筆記這本書，目前還沒讀完。書中的內容十分有意思，同樣也是打算先執行一週之後再回顧並改進。&lt;&#x2F;p&gt;
&lt;p&gt;目前正在整理 Obsidian 裡面的筆記，有好多筆記都需要歸檔。在歸檔的過程中，察覺到一些卡片盒筆記實作的小細節是作者沒有完整說明的，要參考別人的做法才能繼續做下去。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;qi-ta-suo-shi&quot;&gt;其他瑣事&lt;&#x2F;h2&gt;
&lt;p&gt;這是我新想到的環節，似乎很有意思。&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;網站的主題又双叒叕被我改回去了，很接近剛換上 Lagrange Theme 的時期。&lt;&#x2F;li&gt;
&lt;li&gt;在圖書館偶遇櫻田千尋的滿月咖啡店，欣賞時我覺得很感動，附上&lt;a href=&quot;https:&#x2F;&#x2F;www.pixiv.net&#x2F;users&#x2F;1431915&quot;&gt;作者的 Pixiv&lt;&#x2F;a&gt;。&lt;&#x2F;li&gt;
&lt;li&gt;參加了外文系的英文小聚，在眾人面前說英文果然很緊張。&lt;&#x2F;li&gt;
&lt;li&gt;多語社用英文玩桌遊，講英文愈來愈有自信了。&lt;&#x2F;li&gt;
&lt;li&gt;晚上冥想聽音樂，身心都很放鬆。&lt;&#x2F;li&gt;
&lt;li&gt;上週的西洋棋目前下到 15 步，局勢五五開。&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
</content>
        
    </entry>
    <entry xml:lang="zh-tw">
        <title>週休三日而品味生活</title>
        <published>2023-09-17T00:00:00+00:00</published>
        <updated>2023-09-17T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              NatsuCamellia
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://natsucamellia.github.io/three-day-weekend/"/>
        <id>https://natsucamellia.github.io/three-day-weekend/</id>
        
        <content type="html" xml:base="https://natsucamellia.github.io/three-day-weekend/">&lt;h2 id=&quot;xuan-ke&quot;&gt;選課&lt;&#x2F;h2&gt;
&lt;p&gt;先來說說選課吧，這學期選到的課有這些，總計是 19 學分：&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;農村生活臺語會話（2）：練習說台語，沒有考試。&lt;&#x2F;li&gt;
&lt;li&gt;線性代數（3）：很數學，需要熟悉證明，100% 考試分。&lt;&#x2F;li&gt;
&lt;li&gt;資料科學概論（3）：輕鬆（對資工學生）的 Python 資料科學應用課程。&lt;&#x2F;li&gt;
&lt;li&gt;英文專題寫作（3，退選）：全英文授課，練習寫研究專題，用不到就退了。&lt;&#x2F;li&gt;
&lt;li&gt;英文段落寫作（2）：段落的結構，如何寫出好段落。&lt;&#x2F;li&gt;
&lt;li&gt;系統程式設計（3）：用 Unix 提供的服務寫一些系統程式。&lt;&#x2F;li&gt;
&lt;li&gt;演算法設計與分析（3）：很數學，需要熟悉證明，100% 考試分。&lt;&#x2F;li&gt;
&lt;li&gt;日文二上（3）：就是日文。&lt;&#x2F;li&gt;
&lt;li&gt;前瞻資訊科技一（3，旁聽）：每個教授花兩週簡介自己的研究領域，寫作業沒什麼幫助就退了，轉成旁聽。&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;natsucamellia.github.io&#x2F;three-day-weekend&#x2F;schedule.jpg&quot; alt=&quot;手抄課表&quot; title=&quot;手抄課表&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;h2 id=&quot;sheng-huo&quot;&gt;生活&lt;&#x2F;h2&gt;
&lt;p&gt;首先是週休三日，從上面的課表可以看到我禮拜一沒有課，這是刻意排的，想要體驗看看週休三日。週休三日加上少少的學分，讓我相較於爆肝的大一生活擁有了更多空閒時間。有關這些時間，我目前規劃週休三日其中一天要到臺北的各個角落逛逛，以及多學一些技能或知識，例如像素畫、設計模式、離散數學等等，盡量包含到課外的主題。&lt;&#x2F;p&gt;
&lt;p&gt;接著是圖書館，這學期圖書館的一樓經過長久的整修終於重新開放了，我最喜歡的是放了很多組桌椅以及布織沙發的輕閱讀區。輕閱讀區周圍有整牆的書，從牆的一端延伸到另一端，這些書都是在各大書店都能看到的新書，且全都有書套保護。這些書只能在該區閱讀，是缺點也是優點，通常我去那邊都會有書可以看，不會被借走。很多同學都會在輕閱讀區唸書（寫作業打報告之類），大約只有一成會從書架上拿書來看，我也是其中一員。不論是坐在沙發上或是坐在一般椅子上倚著桌子看書，都是一大享受。&lt;&#x2F;p&gt;
&lt;p&gt;最後是社團，這學期我打算加入兩個社團，分別是多國語言會話社以及西洋棋社。&lt;&#x2F;p&gt;
&lt;p&gt;多國語言會話社簡稱多語社，在第一次的迎新中，每個人會拿到一張問題集，要自己任意找人來互相問問題集中的其中一個問題。在這過程中我遇到各種不同的人，來自印尼的動漫宅宅、德國的六國語言人才、言行舉止有氣質的女同學，像是從模擬市民遊戲走出來的同學、以及高職一年級的女生。我選中的對象英語口說能力都不錯，達到母語人士流暢對話的程度，反觀我組織一個句子都稍嫌困難，我可以保證我沒有捧高他人或是裝弱，這些都是客觀的陳述。來了這次迎新後我對於語言學習的定義有所改變了。&lt;&#x2F;p&gt;
&lt;p&gt;西洋棋社開在週六下午，第一次的社課連續輸了兩把，第一把是輸給高手，第二把輸給比我強一點的新手，還挺挫折的。此外也認識了一位學長，西洋棋下得不錯，更重要的是他臉上總掛著微笑，後來還有互加 FB 和 Chess.com，目前我們正在下一天一手的通訊棋，肯定又要輸了吧！&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="zh-tw">
        <title>Minecraft Vanilla+ 十個推薦模組</title>
        <published>2023-08-02T00:00:00+00:00</published>
        <updated>2023-08-02T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              NatsuCamellia
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://natsucamellia.github.io/minecraft-vanilla-10-mods/"/>
        <id>https://natsucamellia.github.io/minecraft-vanilla-10-mods/</id>
        
        <content type="html" xml:base="https://natsucamellia.github.io/minecraft-vanilla-10-mods/">&lt;p&gt;筆者認為模組新增了一些方塊，又或是更改了 Minecraft 原有的機制，會導致遊戲的體驗不夠純粹。筆者希望能夠享受 Minecraft 最原汁原味的體驗，因此搜羅了一些實用的 Vanilla+ 模組，標準是不破壞遊戲平衡以及不新增任何物品。以下模組皆可使用 Fabric 1.20.1 載入。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;1-appleskin&quot;&gt;1 AppleSkin&lt;&#x2F;h2&gt;
&lt;p&gt;Minecraft 的飽食度（Saturation）原本是被隱藏的，使用 AppleSkin 可以將其顯示。此外還可以看到每種食物所提供的飢餓值與飽食度，將食物拿在手上也能預測將會回復多少血量。&lt;&#x2F;p&gt;
&lt;p&gt;以下圖片來自於 AppleSkin 的 CurseForge 頁面。&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;camo.githubusercontent.com&#x2F;a74d56cac12573e9a3527021d0d8d0489daf90c344708d3725fbcdc43d40b032&#x2F;68747470733a2f2f692e696d6775722e636f6d2f614866315178512e676966&quot; alt=&quot;&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;h2 id=&quot;2-ambientsounds&quot;&gt;2 AmbientSounds&lt;&#x2F;h2&gt;
&lt;p&gt;AmbientSounds 讓你可以聽到蟬鳴鳥叫，為 Minecraft 增添了一分閒適。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;3-carry-on&quot;&gt;3 Carry On&lt;&#x2F;h2&gt;
&lt;p&gt;搬家時要搬箱子太麻煩了嗎？動物總是對你手中的食物無動於衷？Carry On 可以讓你搬起箱子、熔爐、漏斗、生怪磚等方塊，而保持其內容物，甚至能夠將動物抱起！只要空出雙手按下 Shift 右鍵，即可抱起方塊生物！&lt;&#x2F;p&gt;
&lt;h2 id=&quot;4-entity-culling&quot;&gt;4 Entity Culling&lt;&#x2F;h2&gt;
&lt;p&gt;Minecraft 會停止渲染在你身後的物體，但是為什麼 Minecraft 還是要渲染那些因地形使你看不見的生物呢？Entity Culling 幫你停止渲染他們，讓你的 FPS 大幅提升！&lt;&#x2F;p&gt;
&lt;h2 id=&quot;5-jade&quot;&gt;5 Jade&lt;&#x2F;h2&gt;
&lt;p&gt;Jade 是一個抬頭顯示的模組，可以讓我們看到準心所指的是什麼方塊，以及該方塊的更多資訊如破壞工具、內容物、作物生長進度等，是非常實用的模組！&lt;&#x2F;p&gt;
&lt;p&gt;以下圖片來自於 Jade 的 CurseForge 頁面。&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;media.forgecdn.net&#x2F;attachments&#x2F;546&#x2F;809&#x2F;6.gif&quot; alt=&quot;&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;h2 id=&quot;6-mouse-tweaks&quot;&gt;6 Mouse Tweaks&lt;&#x2F;h2&gt;
&lt;p&gt;這是一個很經典的模組，筆者從剛玩 Minecraft 時就存在了，導致筆者分不清哪些功能是原版的還是這個模組提供的。Mouse Tweaks 讓滑鼠在操作物品欄時有更多的功能，像是把所有同種類的物品放到箱子、在工作台上每個格子只放一個物品等等，還有更多功能可以自行研究探索。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;7-terralith&quot;&gt;7 Terralith&lt;&#x2F;h2&gt;
&lt;p&gt;你是否也喜歡壯觀的地形，但卻又深受過多的模組物品困擾呢？Forge 有 BOP，Fabric 有 BYG，這兩個模組都新增太多花花草草了，總是讓筆者在整理箱子時感到心累。幸好有 Terralith 這個雙平台的模組，Terralith 不新增新方塊，僅使用 Minecraft 原版的方塊來搭建新的生態系，裡面的生態系一個比一個還要美麗，筆者認為美觀上贏過上面兩個模組！&lt;&#x2F;p&gt;
&lt;p&gt;以下圖片來自於 Terralith 的 CurseForge 頁面。&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;i.imgur.com&#x2F;l6SmhyG.png&quot; alt=&quot;&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;i.imgur.com&#x2F;JXwqw7u.png&quot; alt=&quot;&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;i.imgur.com&#x2F;cPec4mY.png&quot; alt=&quot;&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;h2 id=&quot;8-sound-physics-remastered&quot;&gt;8 Sound Physics Remastered&lt;&#x2F;h2&gt;
&lt;p&gt;Sound Physics Remastered 強化了聲音的細節表現，像是走在方塊上的聲音、在洞穴中的回音等，讓你在遊玩時更能身歷其境。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;9-sodium&quot;&gt;9 Sodium&lt;&#x2F;h2&gt;
&lt;p&gt;Sodium 優化 Minecraft 的渲染引擎，將 FPS 推升至原本的兩倍以上，已經是 Fabric 的必裝模組了。目前最新版本已不在 CurseForge 上提供，需要到 Modrinth 下載。&lt;&#x2F;p&gt;
&lt;p&gt;以下圖片來自於 Sodium 的 CurseForge 頁面。&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;i.imgur.com&#x2F;TzLurlG.png&quot; alt=&quot;&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;h2 id=&quot;10-iris-shaders-iris&quot;&gt;10 Iris Shaders ( Iris )&lt;&#x2F;h2&gt;
&lt;p&gt;既然 Sodium 已經為我們提升了 FPS，那就來裝個光影吧！Iris 是光影載入器，基本上相容於 Optifine 的光影包都能使用。需要安裝 Sodium 才能使用。&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="zh-tw">
        <title>大一下修課心得</title>
        <published>2023-06-26T00:00:00+00:00</published>
        <updated>2023-06-26T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              NatsuCamellia
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://natsucamellia.github.io/111-2-course-review/"/>
        <id>https://natsucamellia.github.io/111-2-course-review/</id>
        
        <content type="html" xml:base="https://natsucamellia.github.io/111-2-course-review/">&lt;h2 id=&quot;wei-ji-fen-3-4-cai-guo-rong&quot;&gt;微積分 3 4 （蔡國榮）&lt;&#x2F;h2&gt;
&lt;p&gt;兩堂都是半學期，合起來剛好一學期。&lt;&#x2F;p&gt;
&lt;p&gt;微積分 3 主題是多變數微積分。課程體感上沒什麼壓力，還算滿簡單的，最後的期中考似乎太簡單，聽說有 40% A+，國榮說微積分太甜...&lt;&#x2F;p&gt;
&lt;p&gt;微積分 4 是向量積分與級數。計算量龐大，小考的時候根本算不完，但是成績沒有很差，因為助教給分很大方，有寫都有分。哪怕我積分上下界從頭就寫錯，最後算出來的答案也不正確，印象那題有六分左右，助教也只扣一分。作業也是因為計算量太大，一份作業都要做一個下午，做到心力交瘁。期末考聽國榮說很難，不過我實際寫起來覺得還好，只是老問題計算量太大，需要花不少時間。&lt;&#x2F;p&gt;
&lt;p&gt;其實整年學下來很多定理我都忘了，只會基本的微分與積分，但我已經是&lt;a href=&quot;https:&#x2F;&#x2F;www.facebook.com&#x2F;profile.php?id=100090291350231&quot;&gt;蔡國榮粉絲後援會&lt;&#x2F;a&gt;的一員，沒選到國榮的課的話就是一輩子的缺憾。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;ri-wen-yi-xia-sun-ai-wei&quot;&gt;日文一下（孫愛維）&lt;&#x2F;h2&gt;
&lt;p&gt;上學期因為沒什麼特別的所以沒有寫。
這堂課上起來就是太慢了，每次上課都好想睡，因為老師必須顧及到腳步比較慢的同學。班級中程度落差算大，有對日文很熟悉的，也有完全看不懂五十音的。
如果是初學者的話又想慢慢學，這堂課會是不錯的選擇。
不過如果熟悉日文的話（不用很厲害，有語感就可以），可能還是要找別的班級，雖然我也不知道別的班級速度如何就是了。&lt;&#x2F;p&gt;
&lt;p&gt;每次上課都會有小考，不外乎就是單字、文法，都是簡單的題目，有看就可以 90 分以上。期中期末考比較看實力，初學者認真讀我保守估計都可以 70 以上，熟悉的可以 90 以上，A+ 應該是輕鬆入袋。&lt;&#x2F;p&gt;
&lt;p&gt;然後下學期完全不行，期初沒有先說好遊戲規則，到了期中才宣布說有期末口說報告，要求錄製一段自己說日文的影片，是影片不是錄音而已。我實際拍起來長度大約一分鐘，錄製花了十分鐘，剪輯被 iMovie 弄到很躁花了一小時多。&lt;&#x2F;p&gt;
&lt;p&gt;下學期末還有做一個不計分的 N5 測驗，我在聽力拿了 2&#x2F;3 ，閱讀拿了八九成，算是一個檢驗自己學習成效的小測驗，還不錯。整年下來學了不少，這堂課雖然慢，但它推著我學日文，不然我可能完全沒有進度。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;pu-wu-xia-lu-rong-xiang&quot;&gt;普物下（呂榮祥）&lt;&#x2F;h2&gt;
&lt;p&gt;上學期同樣因為沒什麼特別的所以沒有寫。
老師盡量帶到課本內的每個章節，把所有內容都帶過，上課內容中規中矩，有很多我看不懂的物理，聽說可能是 108 課綱刪太多的緣故。&lt;&#x2F;p&gt;
&lt;p&gt;作業的部分出得很簡單，基本上就是課堂內容的基本題，公式帶入就解出來了，不用迂迴的思路或是精熟的技巧。&lt;&#x2F;p&gt;
&lt;p&gt;考試大部分都是作業與課堂上的練習題，大約佔八成，剩下沒看過的題目難度也和作業差不多。可以使用計算機。&lt;&#x2F;p&gt;
&lt;p&gt;整年下來我學到了不少，雖然我把公式定理全部忘掉了，但是核心的概念都有學到，如熱力熵、量子穿隧等等。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;wang-lu-guan-li-yu-xi-tong-guan-li&quot;&gt;網路管理與系統管理&lt;&#x2F;h2&gt;
&lt;p&gt;每週上課教授會花兩小時授課，課堂上會有小測驗，但是這個小測驗通常都因為時間不足變成作業。另外一小時會有助教來帶領我們做 Lab ，內容是關於當天上課內容的實作，例如講到 DNS 我們就二話不說架一台 DNS Server 。一樣也會因為時間不足變成作業。&lt;&#x2F;p&gt;
&lt;p&gt;真正的作業就是 Lab 的困難版，要自己去網路上查資源，以做出符合作業需求的系統與網路。這是最耗費時間的過程，一份作業通常要花 20~30 小時，但是一份作業也通常只有兩個禮拜的時間，所以每個禮拜的時間就會大量花費在這堂課上，一想到作業沒做完壓力就很大。&lt;&#x2F;p&gt;
&lt;p&gt;考試是採上機考的方式，可以帶所有你要用的東西，網路全開，唯一的限制就是只能和組員討論。很刺激很好玩，但是考前壓力山大。&lt;&#x2F;p&gt;
&lt;p&gt;現在看來這堂課是好課，經過一學期之後，Linux 常用的功能都會了，網路的大致運作原理也了解了，還可以架設一些好玩的東西如 NFS、Wordpress 等，&lt;del&gt;還可以用工作站稽查別人&lt;&#x2F;del&gt;。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;zi-liao-jie-gou-yu-yan-suan-fa&quot;&gt;資料結構與演算法&lt;&#x2F;h2&gt;
&lt;p&gt;修課的人很多，學期初有 400 人，不過停修結束後好像就不到 300 人了。&lt;&#x2F;p&gt;
&lt;p&gt;上半學期教了資料結構，很多我以前看書學過的，沒有什麼新意。下半學期則是老師把預錄好的影片放在網站上讓我們自己看，上課的時候則做一些小活動，如團隊寫程式、大地遊戲等，還不錯。&lt;&#x2F;p&gt;
&lt;p&gt;作業超級難，和 NASA 一樣要花很多時間。內容有手寫題以及程式題，程式題是要花最多時間的一部份，做不出來導致了許多難以入眠的夜晚...。考試全部手寫，需要設計資料結構與演算法，然後要手刻 Pseudocode ，難度普通。&lt;&#x2F;p&gt;
&lt;p&gt;這學期學到了不少重要的資料結構，演算法也學了一些。
整體而言是很扎實的課程，外系生建議要很有動機也很有時間再修，不然會很難受。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;tou-zi-xue-dao-lun-zhuang-wen-yi&quot;&gt;投資學導論（莊文議）&lt;&#x2F;h2&gt;
&lt;p&gt;&lt;del&gt;這堂課是財金系開在電機系的選修課，然後資工系去修...&lt;&#x2F;del&gt;&lt;&#x2F;p&gt;
&lt;p&gt;老師使用投影片上課，投影片好像是書商提供的，我覺得寫的很不好，標題字體大小沒有控制好，隨邊翻一頁我會不知道我在哪裡。課堂教了很多投資的概念與分析，不過最重要的是投資要有什麼心態，以及老師偶爾會說一些人生道理，聽著也是收穫不少。&lt;&#x2F;p&gt;
&lt;p&gt;沒有作業，不過有練習題可以自己做。考試八成題目會從練習題裡面出，剩下就是老師自己出。期末要找一位有在投資的長輩進行訪問，並且做成四頁 PDF 的報告。&lt;&#x2F;p&gt;
&lt;p&gt;心得是我只有學到精髓，其他的細節不太記得，算是甜涼選修，不過要空出時間弄期末報告就是了。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;zhuo-qiu-chu-ji-wang-yi-ze&quot;&gt;桌球初級（王翊澤）&lt;&#x2F;h2&gt;
&lt;p&gt;這堂課我是用優先加簽上的，因為上學期擔任體適能的小老師，所以有這個優待，我覺得不用白不用所以就選了。&lt;&#x2F;p&gt;
&lt;p&gt;上課時練習，考試的話老師會說在幾個禮拜之內要考過什麼。特別的是，老師會要求考試的搭檔不能是同系或是一起考過其他考試的同學。考試內容有對牆擊球 50 下、正手擊球 30 下、反手擊球 30 下以及雙打跑位 20 下。因為我是第一次打桌球，找到的隊友也是初學，所以每次的考試都是剛好在最後一週才考完。&lt;&#x2F;p&gt;
&lt;p&gt;上完這學期後我不會想再修中級了，沒想過體育課壓力也會這麼大，加上我覺得桌球不是我特別有興趣的運動。&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="zh-tw">
        <title>關於時間規劃這檔事</title>
        <published>2023-04-30T00:00:00+00:00</published>
        <updated>2023-04-30T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              NatsuCamellia
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://natsucamellia.github.io/about-time-management/"/>
        <id>https://natsucamellia.github.io/about-time-management/</id>
        
        <content type="html" xml:base="https://natsucamellia.github.io/about-time-management/">&lt;h2 id=&quot;xian-xia-lai-jiu-huang&quot;&gt;閒下來就慌！&lt;&#x2F;h2&gt;
&lt;p&gt;上了大學之後，由於換了新的環境，可以無痛建立新的生活作息。我的作息便是睡覺、吃飯、唸書，畢竟上學期真的太忙了，沒有多餘時間可以從事娛樂。&lt;&#x2F;p&gt;
&lt;p&gt;最近考完期中考，某一天的早上我沒有課，正準備找個作業來做時，發現我竟然沒有作業可以做！我東想西想，我這大學生活這麼忙，怎麼可能會有&lt;strong&gt;沒作業做&lt;&#x2F;strong&gt;的一天？我檢查過每個科目，確定沒有作業，只好找其他閒事來做了。當時星穹鐵道剛開服，就稍微玩了一下，後來甚至又打開原神。雖然可以玩遊戲了，但是玩的過程中總覺得慌，想著我怎麼在做沒有意義的事，不是應該要多學點新的東西嗎？&lt;&#x2F;p&gt;
&lt;p&gt;後來我查到了一個名詞叫做「努力上癮」，就是說一個人平常習慣努力了，一閒下來就覺得自己止步不前，充滿罪惡感。我發現我好像就是處於這個狀態，真的是書讀太多了，沒有撥出休息的時間，這樣下去可能對身心都不好。因此打算來看看我有多少空閒時間，以及我需要花多少時間在作業上。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;qing-suan-shi-jian&quot;&gt;清算時間&lt;&#x2F;h2&gt;
&lt;p&gt;平常我的睡覺時間是晚上十點到早上七點（現在發現有點太久了），扣除吃飯、洗澡、通勤、上課等時間後，我可用的時間有 65 小時。當下算出來真的是嚇到，竟然有這麼多，體感上時間完全不夠用，總是在星期日才把一週的進度做完。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;gui-hua-shi-jian&quot;&gt;規劃時間&lt;&#x2F;h2&gt;
&lt;p&gt;首先列出所有的科目每週課後學習所需要的時間：&lt;&#x2F;p&gt;
&lt;ol&gt;
&lt;li&gt;NASA：10 小時&lt;&#x2F;li&gt;
&lt;li&gt;DSA：10 小時&lt;&#x2F;li&gt;
&lt;li&gt;投資學導論：2 小時&lt;&#x2F;li&gt;
&lt;li&gt;日文：1 小時&lt;&#x2F;li&gt;
&lt;li&gt;物理：5 小時&lt;&#x2F;li&gt;
&lt;li&gt;微積分：5 小時&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;p&gt;課內學習總共 33 小時，我明明有兩倍的時間，為什麼總是到星期日才能做完所有的作業呢？&lt;&#x2F;p&gt;
&lt;h2 id=&quot;duo-de-shi-jian-ke-yi-zuo-shen-mo&quot;&gt;多的時間可以做什麼&lt;&#x2F;h2&gt;
&lt;p&gt;多的時間可以做什麼呢？我一直以來都很想要好好學日文，但總是因為時間被作業佔據導致沒辦法好好學，因此打算空出每天晚上七點到八點這段時間學日文，而星期四下午就已經有三節日文課了，就不排了。接著來做點晨讀，每天早上吃完早餐後的一小時讀課外書，星期五早八體育課，這天不排。算下來每週會有 6 小時日文、6 小時晨讀，總共 12 小時的課外學習。&lt;&#x2F;p&gt;
&lt;p&gt;到目前為止已經使用了 45 小時，還剩下 20 個小時，經過謹慎思考後，決定來排個娛樂時間。時間就定在每天晚上八點到十點。剩下的 6 個小時就作為彈性使用。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;jian-yi-qing-dan&quot;&gt;簡易清單&lt;&#x2F;h2&gt;
&lt;ol&gt;
&lt;li&gt;課內學習：33 小時&lt;&#x2F;li&gt;
&lt;li&gt;課外學習：12 小時&lt;&#x2F;li&gt;
&lt;li&gt;娛樂：14 小時&lt;&#x2F;li&gt;
&lt;li&gt;彈性時間：6 小時&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;h2 id=&quot;xin-de&quot;&gt;心得&lt;&#x2F;h2&gt;
&lt;p&gt;除了以上的規劃之外，在實際執行的兩天中，我也引入&lt;strong&gt;番茄鐘&lt;&#x2F;strong&gt;，除了能夠讓我更加專心之外，也可以提醒我要喝水，一舉兩得。雖然這麼做會造成更長的作業耗時，但或許提升效率後就能補回來也說不定。&lt;&#x2F;p&gt;
&lt;p&gt;前面有說到或許睡眠時間太長了，Google 之後也發現睡太久對身體似乎也不是那麼好，減少一個小時的睡眠時間來擠出 7 小時空閒時間似乎也是不錯的選擇。但最重要的還是先執行一段時間後，看看成效如何，以及有哪些細節需要做調整，才能打造出適合自己的時間規劃。&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="zh-tw">
        <title>111-2 期中回顧</title>
        <published>2023-04-19T00:00:00+00:00</published>
        <updated>2023-04-19T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              NatsuCamellia
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://natsucamellia.github.io/111-2-midterm-recap/"/>
        <id>https://natsucamellia.github.io/111-2-midterm-recap/</id>
        
        <content type="html" xml:base="https://natsucamellia.github.io/111-2-midterm-recap/">&lt;h2 id=&quot;sheng-huo-zuo-xi&quot;&gt;生活作息&lt;&#x2F;h2&gt;
&lt;p&gt;這學期的生活作息我很滿意，每天晚上十點多睡覺，隔天七點起床，沒課的話還能睡到八點。每天都能睡滿八小時的日子真的很棒，相比之下，高中每天一早就想睡，但是這個情況在我的高中已經在這個學年得到改善，希望學弟妹們要睡好睡滿。&lt;&#x2F;p&gt;
&lt;p&gt;每天的行程也幾乎固定下來了，不需要煩惱接下來要做什麼，哪一天要在哪裡念書。這也得益於這學期沒有課輔志工和社團活動，晚上的時間都是完整的，不像上學期白天夠累了，晚上還要忙東忙西。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;xiu-ke-lie-biao&quot;&gt;修課列表&lt;&#x2F;h2&gt;
&lt;ol&gt;
&lt;li&gt;網路管理與系統管理（NASA），3 學分&lt;&#x2F;li&gt;
&lt;li&gt;資料結構與演算法（DSA），3 學分&lt;&#x2F;li&gt;
&lt;li&gt;微積分，4 學分&lt;&#x2F;li&gt;
&lt;li&gt;普通物理學，3 學分&lt;&#x2F;li&gt;
&lt;li&gt;日文，3 學分&lt;&#x2F;li&gt;
&lt;li&gt;投資學導論， 3 學分&lt;&#x2F;li&gt;
&lt;li&gt;桌球，1 學分&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;p&gt;總計 20 學分&lt;&#x2F;p&gt;
&lt;h2 id=&quot;zuo-ye-ya-li&quot;&gt;作業壓力&lt;&#x2F;h2&gt;
&lt;p&gt;這學期修了兩門 Loading 很重的課。第一門是 DSA ，這是系上核心必修課程。這門課出乎意料之外地有很多外系的學生來修，我們系上一年級才 160 出頭人，修課人數竟然達到了 400 人，扣掉重修的學長姐不算，也是一個龐大的數字。作業的部分分為手寫題和程式題，難度都很高，平均下來一週可能要花超過十個小時才做得完。&lt;&#x2F;p&gt;
&lt;p&gt;第二門是 NASA（&lt;del&gt;美國太空總署&lt;&#x2F;del&gt;），這是系上的選修課，需要在暑假先完成 Homework 0 ，再依照作業分數篩選修課學生。這堂課的內容不深但很廣，包括各種網路協定、Linux、虛擬化、防火牆等等。每週的前兩個小時教授會上課，剩下的一小時會由 NASA 團隊（我們系上的網路與系統管理團隊）的助教帶我們實作（Lab）關於課堂的內容，內容千奇百怪，難度通常難到在課堂上做不完，但都是很實際的問題。&lt;&#x2F;p&gt;
&lt;p&gt;而 NASA 的作業又比 Lab 更難，完全就是 Lab 的進階題，大部分都是實作題，都是在考驗自學與搜尋的能力，這也是系統管理者的能力之一。一般而言，一份作業的時間是兩個禮拜，遲交零分計，沒有任何寬容空間，教授說這是系統管理者的紀律。作業所需時間以我而言大約是二十小時，也就是每週和 DSA 一樣要花十個小時。&lt;&#x2F;p&gt;
&lt;p&gt;至此這六學分就佔掉我每週二十個小時了，還有微積分、普物......&lt;&#x2F;p&gt;
&lt;h2 id=&quot;qi-zhong-kao&quot;&gt;期中考&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;nasa&quot;&gt;NASA&lt;&#x2F;h3&gt;
&lt;p&gt;只能說超級刺激，這不是有書可以讀的科目，考前幾乎沒機會猜題。題目全部都是實作，要求在考試的三個小時內做出盡可能多的系統要求，也就是說題目是不可能做得完的。考試採分組，三個人一組分工做，組員分數皆相同。考試的時候可以使用自己的電腦，網路資源也全開，僅限制不能和自己組員以外的人討論，很大程度上還原了實戰。&lt;&#x2F;p&gt;
&lt;p&gt;我做的題目是設定 Switch 和防火牆。Switch 的部分挺熟悉的，指令打得很順手，也只有查過一個小設定而已。防火牆是最刺激的，因為我的電腦是 Macbook M1 ，不適合開虛擬機，所以用電腦教室的電腦。我開電腦教室的電腦選 Windows，開了一台防火牆，一台 GUI Ubuntu，和兩台 CLI Alpine，總共一個 Windows + 4 台虛擬機，記憶體都是維持在 7.x GB &#x2F; 7.6 GB，深怕電腦突然承受不住關機，然後檔案就會被清掉（電腦教室你懂的）。做完每個小題就趕緊填表單，呼叫助教過來檢查，而助教也是有夠快的，我填完表單喝口水就有助教到我旁邊了，超讚。&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;natsucamellia.github.io&#x2F;111-2-midterm-recap&#x2F;NASA-Midterm.jpg&quot; alt=&quot;期中考場景圖&quot; title=&quot;期中考場景圖&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;最後我們組拿到了 84 &#x2F; 235 分，位居第 5 &#x2F; 23 名，第一名有 128 分，算是大海放。因為我做的題目都是算簡單的，一個人就拿了 44 分，而隊友都是做比較 Hardcore 的題目，分數少了一點。整體來說我很滿意這次的成績，隊友也很棒，考試的時候都會互相鼓舞士氣！&lt;&#x2F;p&gt;
&lt;h3 id=&quot;dsa&quot;&gt;DSA&lt;&#x2F;h3&gt;
&lt;p&gt;做過考古題之後，發現考試難度比作業難度簡單太多了，是很輕鬆就能在三小時寫完的那種。&lt;&#x2F;p&gt;
&lt;p&gt;考試當天我被分配在大講堂，可以想像成充滿電影院紅色軟椅的大空間。答案卷是八張空白紙，要在每一面寫上學號姓名和題號，有人在考試前幾天抱怨說他名字筆畫太多，這樣不公平，於是教授說在考試前發放答案卷讓我們寫名字。&lt;&#x2F;p&gt;
&lt;p&gt;第一個令人不滿的點來了，我拿到答案卷的時候考試已經開始了，我名字都還沒寫上，題本也還沒拿到。不過助教後來宣布延後考試時間那就算了。&lt;&#x2F;p&gt;
&lt;p&gt;第二點是我都寫完題號和名字了，助教才說名字要寫在右上角，而我是寫在左上角的。還記得那個抱怨他名字筆畫太多的那位同學嗎？我更慘，不但要在考試中重寫名字，還要把原本的擦掉，有夠不爽。&lt;&#x2F;p&gt;
&lt;p&gt;第三點是我們有問過助教題號的格式，助教回答 A 方案，後來考試到一半又說是 B 方案，真的讓人懷疑有沒有集中訓練過。&lt;&#x2F;p&gt;
&lt;p&gt;在全部的題目中，各種不同難度的題目我都會寫，只有一題被標記成簡單的題目臨時想不到，走回宿舍時才想出來，當下心情只能用悔しい（不甘心）來表達了，明明我是會做的。&lt;&#x2F;p&gt;
&lt;h3 id=&quot;qi-ta-ke-mu&quot;&gt;其他科目&lt;&#x2F;h3&gt;
&lt;p&gt;剩下的就簡略帶過吧，微積分偏簡單，但有一題和 DSA 一樣悔しい。普物幾乎都是出作業題目，有好好複習都沒問題。投資學導論八成作業題目，全部都是選擇題，可以想像有多簡單。&lt;&#x2F;p&gt;
&lt;p&gt;日文這是怪怪的，我沒有很認真在背文法，都是靠語感在填的，導致寫的時候有很多不確定的地方。甚至有一題是課堂上沒有說過的，被我靠語感答對，出教室還被老師抓去問說：「你怎麼會寫這個？你有想過過去式嗎？」，「沒有耶，我覺得唸起來很順就寫了。」&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="zh-tw">
        <title>大學與高中的不同</title>
        <published>2023-04-09T00:00:00+00:00</published>
        <updated>2023-04-09T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              NatsuCamellia
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://natsucamellia.github.io/change-after-university/"/>
        <id>https://natsucamellia.github.io/change-after-university/</id>
        
        <content type="html" xml:base="https://natsucamellia.github.io/change-after-university/">&lt;h2 id=&quot;zi-xue&quot;&gt;自學&lt;&#x2F;h2&gt;
&lt;p&gt;**大學教授沒辦法教你所有東西。**相對於高中，大學在一個學期內需要學的知識多了好幾倍，但是課程的時數卻少了很多。教授會在課堂上指出大致上的學習方向，剩下的細節與延伸則要靠自己自學。&lt;&#x2F;p&gt;
&lt;p&gt;舉我的「計算機程式設計」課程為例，教授的上課方式和高中非常不同，大致上的流程如下：&lt;&#x2F;p&gt;
&lt;ol&gt;
&lt;li&gt;在上課之前閱讀完教授指定的課本章節。&lt;&#x2F;li&gt;
&lt;li&gt;在每週三小時的課堂中，教授會挑出約三題 Online Judge 上的題目，講解核心的概念，如遞迴、剪枝等。&lt;&#x2F;li&gt;
&lt;li&gt;兩週上課一週考試。&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;p&gt;不難發現，教授真正做的事就是每三週的課程循環中講大約六題的題目，不包含基礎語法。學生要做的事就是自己學基礎語法，上課聽教授講解重要的概念，接著回家做大量的練習。由於一學期就要把課本全部上完，課程量真的非常龐大，因此教授預估每週要練習十個小時，才能通過這門課程。&lt;&#x2F;p&gt;
&lt;p&gt;當然，這堂課是比較極端的例子，但我在這裡想表達的是：課程時間有限，教授沒辦法教我們所有東西，我們需要透過自學來得到完整的學習效果。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;zi-you&quot;&gt;自由&lt;&#x2F;h2&gt;
&lt;p&gt;大學相比於高中而言自由許多，除了人身自由外，選課自由也是很重要的一點。在高中以前，每一個科目都不見得是我們想學的，但因為這些科目都是基本學識，自然也沒有選擇的空間。儘管高中有了選修制度的出現，開始能夠選擇自己有興趣的課程，但是基本上選擇依舊不多，只能從有限的選項中挑選。&lt;&#x2F;p&gt;
&lt;p&gt;情況到了大學有了改變，首先科系是自己選擇的，決定了接下來四年修課的大方向。課程很高程度會符合自己的喜好，使自己更有動力去學習。其次是選修課程，我可以選擇自己有熱情的科目學習。&lt;&#x2F;p&gt;
&lt;p&gt;舉外文為例，臺大許多科系的大一外文都不限英文，因此我選擇了我有興趣的日文，我常常會自己預習，沒有被強迫學習的感覺，而且學習效果也非常好。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;zi-sheng&quot;&gt;自省&lt;&#x2F;h2&gt;
&lt;p&gt;國中時，目標是考上好高中；高中時，目標是考上好大學；那大學之後呢？&lt;&#x2F;p&gt;
&lt;p&gt;這是每個人必經的過程，這時候就要開始思考自己的未來了。我未來想要做什麼？我的興趣是什麼？我的目標是什麼？不再有人告訴我們答案，不再有人能夠告訴我們答案，我們已經是一個成年人、一個獨立的個體，必須要對自己的未來負起責任。&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="zh-tw">
        <title>興趣的意義是什麼</title>
        <published>2023-03-08T00:00:00+00:00</published>
        <updated>2023-03-08T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              NatsuCamellia
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://natsucamellia.github.io/what-is-interest/"/>
        <id>https://natsucamellia.github.io/what-is-interest/</id>
        
        <content type="html" xml:base="https://natsucamellia.github.io/what-is-interest/">&lt;p&gt;最近和朋友在吃飯時聊到彼此閒暇時都在做什麼，我的空閒時間幾乎都被我拿來完成作業與學習，而朋友卻說：&lt;&#x2F;p&gt;
&lt;p&gt;「太認真了吧！」&lt;&#x2F;p&gt;
&lt;p&gt;「會嗎？我也沒有其他事情可以做了。」&lt;&#x2F;p&gt;
&lt;p&gt;「你不會看 Youtube 或玩遊戲嗎？」&lt;&#x2F;p&gt;
&lt;p&gt;「不會啊，我覺得沒意思，那不然你沒事都在做什麼？」&lt;&#x2F;p&gt;
&lt;p&gt;「我都看小說、玩遊戲或是看影片之類的。」&lt;&#x2F;p&gt;
&lt;p&gt;這個問題久違地從我的腦海中被打撈了出來，我開始正視這個問題。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;duan-xian-de-gu-dian-ji-ta&quot;&gt;斷弦的古典吉他&lt;&#x2F;h2&gt;
&lt;p&gt;記得我在上個學期加入的&lt;a href=&quot;&#x2F;classical-guitar-club&quot;&gt;古典吉他社&lt;&#x2F;a&gt;，想說這就是我&lt;strong&gt;學樂器的最後機會了&lt;&#x2F;strong&gt;，在學期初的時候滿腔熱血，想要學習彈奏好多歌曲，向社團借了一把吉他帶回宿舍練習。到了學期中社團開始準備期末的成果發表會，發給每個人兩份樂譜，要求每個人都必須在期末之前練好，並在成果發表會上大合奏。&lt;&#x2F;p&gt;
&lt;p&gt;但是我逐漸發現，在這個社團中的人都是有經驗的演奏者，或至少也有充足的音樂底子，&lt;strong&gt;我在每次社課的練習中顯得格格不入&lt;&#x2F;strong&gt;，儘管我投入百分之百的專注在每次的練習中，總是在樂章進行到一半時被落在一旁，手指再也觸摸不到離我遠去的樂聲。每次練習完之後，社長總會說大家彈的都很不錯，&lt;strong&gt;社員間充滿了歡笑聲，殊不知我並沒有成功走道終點，眼淚只能滴在心頭&lt;&#x2F;strong&gt;。我把吉他還給了社團，吉他被擠到課業後方，參加社團漸漸地產生了阻力，「我在學校受到的挫折已經夠多了，為什麼我還要來這裡疲累我的心神？」&lt;&#x2F;p&gt;
&lt;p&gt;期末發表前夕，我認為來不及練成大合奏了，我給社長發了訊息：&lt;&#x2F;p&gt;
&lt;p&gt;「社長不好意思，想請問成發是每個人都要上台嗎？」&lt;&#x2F;p&gt;
&lt;p&gt;「在大合奏的時候要，其他時候不用。」&lt;&#x2F;p&gt;
&lt;p&gt;「我可以不要上台嗎，我已經覺得壓力太大了，再下去我覺得要放棄了。我覺得練合奏的曲子沒有成就感，總是迷路的合奏讓我很挫折。」&lt;&#x2F;p&gt;
&lt;p&gt;「瞭解，沒有關係，星期五還是歡迎來聽其他人演奏。」&lt;&#x2F;p&gt;
&lt;p&gt;開學原以為能夠踏進音樂的世界，沒想到成果發表會我卻坐在觀眾席看著每個社員演奏大合奏，於是我離開古典吉他了。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;dui-yu-xing-qu-de-xin-tai&quot;&gt;對於興趣的心態&lt;&#x2F;h2&gt;
&lt;p&gt;每次填寫個人資料時，最困擾我的總是興趣、喜好這個欄位，畢竟我對於每件事都覺得到最後毫無意義，又如何能持續做下去成為我的興趣呢？&lt;&#x2F;p&gt;
&lt;p&gt;我看待興趣似乎過於功利，&lt;strong&gt;我總是專注在最終的結果，因為我害怕浪費時間&lt;&#x2F;strong&gt;，但是卻找不到一個興趣是有意義的。學音樂我就會覺得學到最後不就是彈奏音樂而已嗎，有什麼意思？練字到最後就是寫出漂亮的字，有什麼用？不過就是在浪費時間，毫無生產力。這種專注在結果的心態也影響到我玩遊戲。遊戲玩到後期可能會結束，也可能不會，&lt;strong&gt;但共同點是玩了之後都不會為我帶來現實中的效益&lt;&#x2F;strong&gt;。這導致我無聊時總是看著遊戲沈思三十秒之後又不想玩了，又或是開始玩了幾分鐘就關掉了。&lt;&#x2F;p&gt;
&lt;p&gt;放棄古典吉他也是基於這個原因，由於練習的過程過於挫折，加上我發現彈到後面也就是彈而已，就算我今天真的練成了，我以後大概也沒時間彈吧。朋友跟我說：「你有沒有想過興趣的重點在於過程，演奏樂器的過程就是最開心的，看小說的過程就是最快樂的！」&lt;&#x2F;p&gt;
&lt;h2 id=&quot;xing-qu-dao-di-shi-shen-mo&quot;&gt;興趣到底是什麼&lt;&#x2F;h2&gt;
&lt;p&gt;有問題問 Google ，我上網查了關於培養興趣的一些資訊，在知乎上找到了一串關於興趣的問答。&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;興趣應該是，投入大量時間去做一件真心喜歡的事，儘管貌似一無所獲，但卻能夠從中感到實在的快樂。人生這麼長，不必每件事都得有收穫吧？&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;這個觀點直擊我的痛處，&lt;strong&gt;興趣不見得最後要有所收穫，只要是真心喜歡的事情，就算沒有外顯的成果，沒有他人的讚賞，我們也能孤芳自賞&lt;&#x2F;strong&gt;。一個深愛鋼琴的人，我們並不期望他能夠譜出世界名曲、演奏高難度曲目，或是技巧要多純熟，只要他在彈琴的過程中是真正享受音樂帶來的喜悅、沈醉於飄揚樂音，我們都會覺得他是真正熱愛鋼琴的。&lt;&#x2F;p&gt;
&lt;p&gt;&lt;strong&gt;興趣需要真心喜歡，否則就算一個技能練地再純熟，也只是徒增折磨&lt;&#x2F;strong&gt;。我學習古典吉他的動機並不是真正喜歡這個樂器，憑良心說只是羨慕別人會演奏樂器罷了，我也想要學一個樂器，而隨便地就在社團聯展從眾多不喜歡的樂器中，挑了一個沒那麼討厭的樂器。
但是&lt;strong&gt;不喜歡的事並非碰久了就會喜歡&lt;&#x2F;strong&gt;，在忙碌的課程結束後，費心費時地跑到社團教室練不喜歡的琴，又沒有嚐到甜頭，只會讓自己越來越討厭這件事而已，要變成興趣是不可能的。&lt;&#x2F;p&gt;
&lt;p&gt;人生這麼長，如果我們執著於有收穫的興趣，那麽我們將會有大把的時間。大把的時間可以做什麼？這就是重點，人們賺錢、爭取時間不就只是為了一件事嗎？&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;想做自己想做的事，儘管一無所獲。&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;&lt;strong&gt;我們就是想要做自己想做的事，但卻堅持不做一無所獲的事，那不就是本末倒置嗎？&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;h2 id=&quot;qi-fa&quot;&gt;啟發&lt;&#x2F;h2&gt;
&lt;p&gt;我終於瞭解，原來我找不到一個有最終收穫的興趣是因為：&lt;strong&gt;興趣本身的意義並不在最終結果，而是在過程本身&lt;&#x2F;strong&gt;。有了這個想法，我開始接納各式各樣的事情成為我的興趣，儘管最後一無所獲。我接受花時間培養這些興趣，因為我知道人生的一部份本該屬於我的興趣。&lt;&#x2F;p&gt;
&lt;p&gt;也許是因為我每件事都想要做到最好，但是我發現我並不能在每件事都做到比別人好，&lt;strong&gt;以前我總找不到能夠贏過所有人的事，而讓我放棄了所有興趣&lt;&#x2F;strong&gt;。但是現在我能接受不必做到最好，只要自己做得開心就可以了。&lt;&#x2F;p&gt;
&lt;p&gt;我決定重新檢視被拋棄的興趣：&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;也許我能重拾鋼筆，繼續練字，儘管不見得能寫得很工整好看，但是用鋼筆寫字、欣賞筆墨的墨韻本身就是享受。&lt;&#x2F;li&gt;
&lt;li&gt;也許我能繼續研究網站，嘗試各種框架，儘管不見得會有技術上的收穫，但是讓我的網站變得賞心悅目本身就令人滿足。&lt;&#x2F;li&gt;
&lt;li&gt;也許我能停下所有事，專心聆聽音樂，儘管可能會耽擱正事，但是品味音樂的和弦行進本身就是音樂的樂趣所在。&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
</content>
        
    </entry>
    <entry xml:lang="zh-tw">
        <title>Java Thread</title>
        <published>2023-03-04T00:00:00+00:00</published>
        <updated>2023-03-04T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              NatsuCamellia
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://natsucamellia.github.io/java-thread/"/>
        <id>https://natsucamellia.github.io/java-thread/</id>
        
        <content type="html" xml:base="https://natsucamellia.github.io/java-thread/">&lt;blockquote&gt;
&lt;p&gt;當本文使用 Thread 時，指的是 Thread 這個類別，而非執行緒。&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;執行緒是 Java 中重要的一環，可以讓我們的程式分成不同部分（看起來）同時運行。建立執行緒有兩種方式，第一種是直接繼承 Thread ，而另一種則是實作 Runnable 。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;ji-cheng-thread&quot;&gt;繼承 Thread&lt;&#x2F;h2&gt;
&lt;p&gt;繼承 Thread 的話只要覆寫 run() 方法就可以了，可以在 run() 中放入任何想要做的事。
例如我想要印出一些數字，並在之間 sleep() 一秒鐘：&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;java&quot; style=&quot;background-color:#eff1f5;color:#4f5b66;&quot; class=&quot;language-java &quot;&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;public class &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;MyThread &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;extends &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;Thread &lt;&#x2F;span&gt;&lt;span style=&quot;color:#343d46;&quot;&gt;{ 
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#343d46;&quot;&gt;    @&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Override  
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#343d46;&quot;&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;public void &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;run&lt;&#x2F;span&gt;&lt;span style=&quot;color:#343d46;&quot;&gt;() {  
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#343d46;&quot;&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;for &lt;&#x2F;span&gt;&lt;span style=&quot;color:#343d46;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;int&lt;&#x2F;span&gt;&lt;span style=&quot;color:#343d46;&quot;&gt; i &lt;&#x2F;span&gt;&lt;span&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#343d46;&quot;&gt;; i &lt;&#x2F;span&gt;&lt;span&gt;&amp;lt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;5&lt;&#x2F;span&gt;&lt;span style=&quot;color:#343d46;&quot;&gt;; i&lt;&#x2F;span&gt;&lt;span&gt;++&lt;&#x2F;span&gt;&lt;span style=&quot;color:#343d46;&quot;&gt;) {  
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#343d46;&quot;&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;System&lt;&#x2F;span&gt;&lt;span style=&quot;color:#343d46;&quot;&gt;.out.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;println&lt;&#x2F;span&gt;&lt;span style=&quot;color:#343d46;&quot;&gt;(i);
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#343d46;&quot;&gt;  
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#343d46;&quot;&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;try &lt;&#x2F;span&gt;&lt;span style=&quot;color:#343d46;&quot;&gt;{  
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#343d46;&quot;&gt;                &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;sleep&lt;&#x2F;span&gt;&lt;span style=&quot;color:#343d46;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;1000&lt;&#x2F;span&gt;&lt;span style=&quot;color:#343d46;&quot;&gt;);  
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#343d46;&quot;&gt;            } &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;catch &lt;&#x2F;span&gt;&lt;span style=&quot;color:#343d46;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;InterruptedException &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;e&lt;&#x2F;span&gt;&lt;span style=&quot;color:#343d46;&quot;&gt;) {  
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#343d46;&quot;&gt;                &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;throw new &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;RuntimeException&lt;&#x2F;span&gt;&lt;span style=&quot;color:#343d46;&quot;&gt;(e);  
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#343d46;&quot;&gt;            }  
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#343d46;&quot;&gt;        }  
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#343d46;&quot;&gt;    }  
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#343d46;&quot;&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;要讓這個執行緒開始跑，並不是呼叫 run() ，而是呼叫 start() ，因為呼叫 run() 並不會建立一個新的執行緒。&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;java&quot; style=&quot;background-color:#eff1f5;color:#4f5b66;&quot; class=&quot;language-java &quot;&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;public class &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;Main &lt;&#x2F;span&gt;&lt;span style=&quot;color:#343d46;&quot;&gt;{  
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#343d46;&quot;&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;public static void &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;main&lt;&#x2F;span&gt;&lt;span style=&quot;color:#343d46;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;String&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;[] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;args&lt;&#x2F;span&gt;&lt;span style=&quot;color:#343d46;&quot;&gt;) { 
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#343d46;&quot;&gt;		&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;MyThread&lt;&#x2F;span&gt;&lt;span style=&quot;color:#343d46;&quot;&gt; thread &lt;&#x2F;span&gt;&lt;span&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;new &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;MyThread&lt;&#x2F;span&gt;&lt;span style=&quot;color:#343d46;&quot;&gt;();
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#343d46;&quot;&gt;		thread.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;start&lt;&#x2F;span&gt;&lt;span style=&quot;color:#343d46;&quot;&gt;();
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#343d46;&quot;&gt;    }  
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#343d46;&quot;&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h2 id=&quot;shi-zuo-runnable&quot;&gt;實作 Runnable&lt;&#x2F;h2&gt;
&lt;p&gt;Runnable 介面只有一個方法 run() ，因此實作時和繼承 Thread 時一樣：&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;Java&quot; style=&quot;background-color:#eff1f5;color:#4f5b66;&quot; class=&quot;language-Java &quot;&gt;&lt;code class=&quot;language-Java&quot; data-lang=&quot;Java&quot;&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;public class &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;MyRunnable &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;implements &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;Runnable &lt;&#x2F;span&gt;&lt;span style=&quot;color:#343d46;&quot;&gt;{ 
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#343d46;&quot;&gt;    @&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Override  
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#343d46;&quot;&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;public void &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;run&lt;&#x2F;span&gt;&lt;span style=&quot;color:#343d46;&quot;&gt;() {  
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#343d46;&quot;&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;for &lt;&#x2F;span&gt;&lt;span style=&quot;color:#343d46;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;int&lt;&#x2F;span&gt;&lt;span style=&quot;color:#343d46;&quot;&gt; i &lt;&#x2F;span&gt;&lt;span&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span style=&quot;color:#343d46;&quot;&gt;; i &lt;&#x2F;span&gt;&lt;span&gt;&amp;lt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;5&lt;&#x2F;span&gt;&lt;span style=&quot;color:#343d46;&quot;&gt;; i&lt;&#x2F;span&gt;&lt;span&gt;++&lt;&#x2F;span&gt;&lt;span style=&quot;color:#343d46;&quot;&gt;) {  
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#343d46;&quot;&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;System&lt;&#x2F;span&gt;&lt;span style=&quot;color:#343d46;&quot;&gt;.out.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;println&lt;&#x2F;span&gt;&lt;span style=&quot;color:#343d46;&quot;&gt;(i);
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#343d46;&quot;&gt;        }  
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#343d46;&quot;&gt;    }  
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#343d46;&quot;&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;現在它還不是一個可以跑的執行緒，要先呼叫 Thread 的建構子，並把 MyRunnable 當作參數建立一個 Thread 。&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;Java&quot; style=&quot;background-color:#eff1f5;color:#4f5b66;&quot; class=&quot;language-Java &quot;&gt;&lt;code class=&quot;language-Java&quot; data-lang=&quot;Java&quot;&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;public class &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;Main &lt;&#x2F;span&gt;&lt;span style=&quot;color:#343d46;&quot;&gt;{  
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#343d46;&quot;&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;public static void &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;main&lt;&#x2F;span&gt;&lt;span style=&quot;color:#343d46;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;String&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;[] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;args&lt;&#x2F;span&gt;&lt;span style=&quot;color:#343d46;&quot;&gt;) { 
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#343d46;&quot;&gt;		&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;MyRunnable&lt;&#x2F;span&gt;&lt;span style=&quot;color:#343d46;&quot;&gt; runnable &lt;&#x2F;span&gt;&lt;span&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;new &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;MyRunnable&lt;&#x2F;span&gt;&lt;span style=&quot;color:#343d46;&quot;&gt;();
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#343d46;&quot;&gt;		&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;Thread&lt;&#x2F;span&gt;&lt;span style=&quot;color:#343d46;&quot;&gt; thread &lt;&#x2F;span&gt;&lt;span&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;new &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;Thread&lt;&#x2F;span&gt;&lt;span style=&quot;color:#343d46;&quot;&gt;(runnable);
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#343d46;&quot;&gt;		thread.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;start&lt;&#x2F;span&gt;&lt;span style=&quot;color:#343d46;&quot;&gt;();
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#343d46;&quot;&gt;    }  
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#343d46;&quot;&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h2 id=&quot;runnable-yu-thread&quot;&gt;Runnable 與 Thread&lt;&#x2F;h2&gt;
&lt;p&gt;那麼到底該&lt;strong&gt;實作 Runnable&lt;&#x2F;strong&gt; 還是&lt;strong&gt;繼承 Thread&lt;&#x2F;strong&gt; 呢？
Thread 實作了 Runnable ，並新增了許多方法如 wait(), sleep() 等，但是使用實作 Runnable 的方法最終還是會建立一個 Thread ，所以一樣可以用到 Thread 的方法。此外，由於 Java 不允許&lt;strong&gt;多重繼承&lt;&#x2F;strong&gt;，因此實作 Runnable 的好處是不會佔用繼承的位置。
總而言之，能用 Runnable 就盡量用吧！&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="zh-tw">
        <title>Java 序列化</title>
        <published>2023-02-24T00:00:00+00:00</published>
        <updated>2023-02-24T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              NatsuCamellia
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://natsucamellia.github.io/serialization/"/>
        <id>https://natsucamellia.github.io/serialization/</id>
        
        <content type="html" xml:base="https://natsucamellia.github.io/serialization/">&lt;p&gt;當類別實作 &lt;code&gt;java.io.Serializable&lt;&#x2F;code&gt; 後，物件就可以被輸出到檔案中，稱為序列化。同樣也可以被讀取，稱為反序列化。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;xu-lie-hua&quot;&gt;序列化&lt;&#x2F;h2&gt;
&lt;ol&gt;
&lt;li&gt;用 FileOutputStream 開啟檔案&lt;&#x2F;li&gt;
&lt;li&gt;用 ObjectOutputStream 將物件寫入 FileOutputStream&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;pre data-lang=&quot;Java&quot; style=&quot;background-color:#eff1f5;color:#4f5b66;&quot; class=&quot;language-Java &quot;&gt;&lt;code class=&quot;language-Java&quot; data-lang=&quot;Java&quot;&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;FileOutputStream&lt;&#x2F;span&gt;&lt;span&gt; fos = &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;new &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;FileOutputStream&lt;&#x2F;span&gt;&lt;span&gt;(&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;filename&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;);
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;ObjectOutputStream&lt;&#x2F;span&gt;&lt;span&gt; oos = &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;new &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;ObjectOutputStream&lt;&#x2F;span&gt;&lt;span&gt;(fos);
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;oos.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;writeObject&lt;&#x2F;span&gt;&lt;span&gt;(object);
&lt;&#x2F;span&gt;&lt;span&gt;oos.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;flush&lt;&#x2F;span&gt;&lt;span&gt;(); &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a7adba;&quot;&gt;&#x2F;&#x2F; 立刻寫入檔案
&lt;&#x2F;span&gt;&lt;span&gt;oos.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;close&lt;&#x2F;span&gt;&lt;span&gt;();
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h2 id=&quot;fan-xu-lie-hua&quot;&gt;反序列化&lt;&#x2F;h2&gt;
&lt;p&gt;反序列化和序列化過程類似：&lt;&#x2F;p&gt;
&lt;ol&gt;
&lt;li&gt;用 FileInputStream 開啟檔案&lt;&#x2F;li&gt;
&lt;li&gt;用 ObjectInputStream 從 FileInputStream 讀取物件&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;pre data-lang=&quot;Java&quot; style=&quot;background-color:#eff1f5;color:#4f5b66;&quot; class=&quot;language-Java &quot;&gt;&lt;code class=&quot;language-Java&quot; data-lang=&quot;Java&quot;&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;FileInputStream&lt;&#x2F;span&gt;&lt;span&gt; fis = &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;new &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;FileInputStream&lt;&#x2F;span&gt;&lt;span&gt;(&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;filename&lt;&#x2F;span&gt;&lt;span&gt;&amp;quot;);
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;ObjectInputStream&lt;&#x2F;span&gt;&lt;span&gt; ois = &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;new &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;ObjectInputStream&lt;&#x2F;span&gt;&lt;span&gt;(fis);
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;Object&lt;&#x2F;span&gt;&lt;span&gt; object = ois.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;readObject&lt;&#x2F;span&gt;&lt;span&gt;(object);
&lt;&#x2F;span&gt;&lt;span&gt;ois.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;close&lt;&#x2F;span&gt;&lt;span&gt;();
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h2 id=&quot;zi-ding-xu-lie-hua&quot;&gt;自訂序列化&lt;&#x2F;h2&gt;
&lt;p&gt;關於序列化有些小細節：&lt;&#x2F;p&gt;
&lt;ol&gt;
&lt;li&gt;物件裡的 Field 若沒有實作 Serializable 會導致物件無法序列化&lt;&#x2F;li&gt;
&lt;li&gt;序列化時，有 static 或 transient 修飾詞的 Field 不會被寫入檔案&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;p&gt;若想要將這些 Field 序列化，可以透過實作 Serializable 的方法來自訂序列化：&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;Java&quot; style=&quot;background-color:#eff1f5;color:#4f5b66;&quot; class=&quot;language-Java &quot;&gt;&lt;code class=&quot;language-Java&quot; data-lang=&quot;Java&quot;&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;public class &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;Student &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;implements &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a3be8c;&quot;&gt;Serializable &lt;&#x2F;span&gt;&lt;span style=&quot;color:#343d46;&quot;&gt;{
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#343d46;&quot;&gt;	&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;private static final long &lt;&#x2F;span&gt;&lt;span style=&quot;color:#343d46;&quot;&gt;serialVersionUID &lt;&#x2F;span&gt;&lt;span&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;L&lt;&#x2F;span&gt;&lt;span style=&quot;color:#343d46;&quot;&gt;;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#343d46;&quot;&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#343d46;&quot;&gt;	&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;private void &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;writeObject&lt;&#x2F;span&gt;&lt;span style=&quot;color:#343d46;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;ObjectOutputStream &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;oos&lt;&#x2F;span&gt;&lt;span style=&quot;color:#343d46;&quot;&gt;) 
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#343d46;&quot;&gt;		&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;throws &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;IOException &lt;&#x2F;span&gt;&lt;span style=&quot;color:#343d46;&quot;&gt;{
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#343d46;&quot;&gt;		oos.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;defaultWriteObject&lt;&#x2F;span&gt;&lt;span style=&quot;color:#343d46;&quot;&gt;();
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#343d46;&quot;&gt;		oos.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;writeObject&lt;&#x2F;span&gt;&lt;span style=&quot;color:#343d46;&quot;&gt;(grade.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;getChinese&lt;&#x2F;span&gt;&lt;span style=&quot;color:#343d46;&quot;&gt;());
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#343d46;&quot;&gt;	}
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#343d46;&quot;&gt;	
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#343d46;&quot;&gt;	&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;private void &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;readObject&lt;&#x2F;span&gt;&lt;span style=&quot;color:#343d46;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;ObjectInputStream &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;ois&lt;&#x2F;span&gt;&lt;span style=&quot;color:#343d46;&quot;&gt;) 
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#343d46;&quot;&gt;		&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;throws &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;IOException&lt;&#x2F;span&gt;&lt;span style=&quot;color:#343d46;&quot;&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;ClassNotFoundException &lt;&#x2F;span&gt;&lt;span style=&quot;color:#343d46;&quot;&gt;{
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#343d46;&quot;&gt;		ois.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;defaultReadObject&lt;&#x2F;span&gt;&lt;span style=&quot;color:#343d46;&quot;&gt;();
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#343d46;&quot;&gt;		grade &lt;&#x2F;span&gt;&lt;span&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;new &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;Grade&lt;&#x2F;span&gt;&lt;span style=&quot;color:#343d46;&quot;&gt;((&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;int&lt;&#x2F;span&gt;&lt;span style=&quot;color:#343d46;&quot;&gt;) ois.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;readObject&lt;&#x2F;span&gt;&lt;span style=&quot;color:#343d46;&quot;&gt;());
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#343d46;&quot;&gt;	}
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#343d46;&quot;&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;defaultWriteObject 和 defaultReadObject 是預設的序列化，後面就是自訂序列化了，把想要做的通通都寫在裡面就可以了。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;serialversionuid&quot;&gt;SerialVersionUID&lt;&#x2F;h2&gt;
&lt;p&gt;在上面的例子中，我為 Student 這個類別加入了 SerialVersionUID ，這個 UID 是用來驗證輸出和讀取的物件是指定的類別，若不是則會拋出 InvalidClassException 。&lt;&#x2F;p&gt;
&lt;p&gt;一般而言，IDE 會自動生成 UID ，若沒有指定 UID 則會由 JVM 指定。但是推薦手動指定，因為 UID 可能會因為編譯器而不同，導致產生 InvalidClassException 。&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="zh-tw">
        <title>Java Collection</title>
        <published>2023-02-22T00:00:00+00:00</published>
        <updated>2023-02-22T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              NatsuCamellia
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://natsucamellia.github.io/java-collection/"/>
        <id>https://natsucamellia.github.io/java-collection/</id>
        
        <content type="html" xml:base="https://natsucamellia.github.io/java-collection/">&lt;p&gt;只會用 Array 嗎？在程式設計中有個專業知識稱為「資料結構」，資料結構可以幫助我們有效率地存取資料。Java Collections 框架就是為此而生，提供了各種實用的功能！&lt;&#x2F;p&gt;
&lt;p&gt;Java Collections 有兩個主要的介面，分別為 Collection 與 Map ，前者將大量型態相同的元素裝在一起，後者則是儲存多對 Entry（Key-Value），用 Key 來存取 Value，本篇著重介紹 Collection 。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;collection-jie-mian&quot;&gt;Collection 介面&lt;&#x2F;h2&gt;
&lt;p&gt;Colletion 是 Java 中實作&lt;strong&gt;集合&lt;&#x2F;strong&gt;的介面，宣告了集合所具備的基本方法：&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;add(T element)&lt;&#x2F;code&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;remove(T element)&lt;&#x2F;code&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;size()&lt;&#x2F;code&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;isEmpty()&lt;&#x2F;code&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;contains(T element)&lt;&#x2F;code&gt;&lt;&#x2F;li&gt;
&lt;li&gt;...&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;所有子介面都擁有這些方法，以下介紹三個子介面：&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;h2 id=&quot;1-list&quot;&gt;&lt;strong&gt;1. List&lt;&#x2F;strong&gt;&lt;&#x2F;h2&gt;
&lt;p&gt;List 以&lt;strong&gt;索引&lt;&#x2F;strong&gt;來排序元素，可以如陣列存取元素，在 Collection 之外新增了一些有關索引的方法：&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;get(int index)&lt;&#x2F;code&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;set(int index, T element)&lt;&#x2F;code&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;indexOf(T element)&lt;&#x2F;code&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;實作的類別有：&lt;&#x2F;p&gt;
&lt;h3 id=&quot;linkedlist&quot;&gt;LinkedList&lt;&#x2F;h3&gt;
&lt;p&gt;LinkedList 會在每個元素中紀錄下一個元素的位址。存取時需要從頭遍歷，因此存取中間元素的速度&lt;strong&gt;相對&lt;&#x2F;strong&gt;慢。但增減時只要更改下一個元素的位址即可，所以增減中間元素的速度&lt;strong&gt;相對&lt;&#x2F;strong&gt;快。&lt;&#x2F;p&gt;
&lt;h3 id=&quot;arraylist&quot;&gt;ArrayList&lt;&#x2F;h3&gt;
&lt;p&gt;ArrayList 和 Array 最大的不同是：ArrayList 可以&lt;strong&gt;動態調整&lt;&#x2F;strong&gt;大小，可以增加或減少元素數量。&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;h2 id=&quot;2-set&quot;&gt;&lt;strong&gt;2. Set&lt;&#x2F;strong&gt;&lt;&#x2F;h2&gt;
&lt;p&gt;Set 的特色是不允許有重複的元素，元素之間沒有順序，可用的方法大多已定義在 Collection 中，這裡不多解釋。&lt;&#x2F;p&gt;
&lt;p&gt;實作的類別有：&lt;&#x2F;p&gt;
&lt;h3 id=&quot;hashset&quot;&gt;HashSet&lt;&#x2F;h3&gt;
&lt;p&gt;HashSet 透過 HashMap 實現，擁有快速的存取速度。&lt;&#x2F;p&gt;
&lt;h3 id=&quot;linkedhashset&quot;&gt;LinkedHashSet&lt;&#x2F;h3&gt;
&lt;p&gt;基於 HastSet 之上，LinkedHashSet 還會維持元素新增時的順序。&lt;&#x2F;p&gt;
&lt;h3 id=&quot;treeset&quot;&gt;TreeSet&lt;&#x2F;h3&gt;
&lt;p&gt;TreeSet 會依物件的比較結果來排序元素，但每個元素都必須實作 Comparable 介面才能進行排序。&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;h2 id=&quot;3-queue&quot;&gt;&lt;strong&gt;3. Queue&lt;&#x2F;strong&gt;&lt;&#x2F;h2&gt;
&lt;p&gt;Queue 是一種特殊的線性資料結構，如字面上的意思，就和排隊一樣，具有 First in, First out (FIFO) 的特性，它只能對頭進行刪除、對尾進行插入。&lt;&#x2F;p&gt;
&lt;h3 id=&quot;queue-jie-mian-fang-fa-jian-yi&quot;&gt;Queue 介面方法（建議）&lt;&#x2F;h3&gt;
&lt;p&gt;對頭操作，當 Queue 為空時會回傳 &lt;code&gt;null&lt;&#x2F;code&gt; ：&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;poll()&lt;&#x2F;code&gt;：刪除第一個元素並回傳。&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;peek()&lt;&#x2F;code&gt;：查看第一個元素並回傳。&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;對尾操作，當 Queue 滿時回傳 &lt;code&gt;false&lt;&#x2F;code&gt; ：&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;offer()&lt;&#x2F;code&gt;：插入一個元素到尾端。&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;collection-nei-jian-fang-fa-bu-jian-yi&quot;&gt;Collection 內建方法（不建議）&lt;&#x2F;h3&gt;
&lt;p&gt;對頭操作，當 Queue 為空時會拋出 Exception ：&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;remove()&lt;&#x2F;code&gt;：相當於 &lt;code&gt;poll()&lt;&#x2F;code&gt;。&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;element()&lt;&#x2F;code&gt;：相當於 &lt;code&gt;peek()&lt;&#x2F;code&gt;。&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;對尾操作，當 Queue 滿時拋出 unchecked Exception ：&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;add()&lt;&#x2F;code&gt;：相當於 &lt;code&gt;offer()&lt;&#x2F;code&gt;。&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;實作 Queue 的子類別有：&lt;&#x2F;p&gt;
&lt;h3 id=&quot;linkedlist-1&quot;&gt;LinkedList&lt;&#x2F;h3&gt;
&lt;p&gt;沒錯，就是上面的 LinkedList ，它也有實作 Queue ，可以當 Queue 用！&lt;&#x2F;p&gt;
&lt;h3 id=&quot;priorityqueue-interface&quot;&gt;PriorityQueue (Interface)&lt;&#x2F;h3&gt;
&lt;p&gt;PriorityQueue 可以想像成 Heap，每個元素都有自己的優先度，取出元素時會是優先度最高的元素，因此不具備 FIFO 的特質。此外，為了讓 Queue 比較元素間的優先度，元素必須實作 Comparable 介面，或是在宣告 Queue 的時候加入 Comparator 。&lt;&#x2F;p&gt;
&lt;h3 id=&quot;blockingqueue-interface&quot;&gt;BlockingQueue (Interface)&lt;&#x2F;h3&gt;
&lt;p&gt;BlockingQueue 除了實作 Queue 的基本功能，還有&lt;strong&gt;阻塞&lt;&#x2F;strong&gt;功能，意思就是說：當我們要從 Queue 中拿一個元素，但是卻&lt;strong&gt;沒有元素&lt;&#x2F;strong&gt;可以拿時，這個執行緒就會&lt;strong&gt;停下來&lt;&#x2F;strong&gt;，直到有元素可以拿為止。有四個方法有阻塞的功能：&lt;&#x2F;p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;take()&lt;&#x2F;code&gt; ：拿元素，沒元素拿就&lt;strong&gt;等到有為止&lt;&#x2F;strong&gt;。&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;put()&lt;&#x2F;code&gt; ：插入元素，沒空間放就&lt;strong&gt;等到有為止&lt;&#x2F;strong&gt;。&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;poll(timeout, unit)&lt;&#x2F;code&gt; ：拿元素，沒元素拿就等&lt;strong&gt;指定時長&lt;&#x2F;strong&gt;直到有元素。&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;offer(timeout, unit)&lt;&#x2F;code&gt; ：插入元素，沒空間放就等&lt;strong&gt;指定時長&lt;&#x2F;strong&gt;直到有空間。&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;p&gt;BlockingQueue 可以運用在生產與消費中：&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;take()&lt;&#x2F;code&gt; ：消費者購買商品，當商品數量不足時就一直等到生產者做出來為止。&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;put()&lt;&#x2F;code&gt; ：生產者製造商品，當商品數量達到上限時就一直等到消費者買為止。&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;priorityblockingqueue&quot;&gt;PriorityBlockingQueue&lt;&#x2F;h3&gt;
&lt;p&gt;繼承了上面兩個介面，PriorityQueue 和 BlockingQueue 。&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="zh-tw">
        <title>Minecraft 礦物掉落</title>
        <published>2023-02-07T00:00:00+00:00</published>
        <updated>2023-02-07T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              NatsuCamellia
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://natsucamellia.github.io/minecraft-ore-drop/"/>
        <id>https://natsucamellia.github.io/minecraft-ore-drop/</id>
        
        <content type="html" xml:base="https://natsucamellia.github.io/minecraft-ore-drop/">&lt;p&gt;不想看分析可以直接下拉看&lt;strong&gt;期望值整理&lt;&#x2F;strong&gt;。&lt;&#x2F;p&gt;
&lt;p&gt;Minecraft 中礦物掉落的公式大多使用 &lt;code&gt;minecraft:ore_drop&lt;&#x2F;code&gt; 公式，數學式為：&lt;&#x2F;p&gt;
&lt;p&gt;$$
count * (max(0, random(level + 2) - 1) + 1)
$$&lt;&#x2F;p&gt;
&lt;p&gt;其中 count 為 1 的礦物以下稱為&lt;strong&gt;單一掉落型&lt;&#x2F;strong&gt;礦物，如煤炭、鑽石， count 不為 1 的礦物稱為&lt;strong&gt;多重掉落型&lt;&#x2F;strong&gt;礦物，如銅、青金石。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;dan-yi-diao-luo&quot;&gt;單一掉落&lt;&#x2F;h2&gt;
&lt;p&gt;從運算結果來看，可以理解為：掉落一個的權重為 2 ，每有一等幸運，就會多一點權重再&lt;strong&gt;額外掉落&lt;&#x2F;strong&gt;一個，用表格說明：&lt;&#x2F;p&gt;
&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;幸運&lt;&#x2F;th&gt;&lt;th&gt;1&lt;&#x2F;th&gt;&lt;th&gt;2&lt;&#x2F;th&gt;&lt;th&gt;3&lt;&#x2F;th&gt;&lt;th&gt;4&lt;&#x2F;th&gt;&lt;&#x2F;tr&gt;&lt;&#x2F;thead&gt;&lt;tbody&gt;
&lt;tr&gt;&lt;td&gt;level=0&lt;&#x2F;td&gt;&lt;td&gt;2&lt;&#x2F;td&gt;&lt;td&gt;&lt;&#x2F;td&gt;&lt;td&gt;&lt;&#x2F;td&gt;&lt;td&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;level=1&lt;&#x2F;td&gt;&lt;td&gt;2&lt;&#x2F;td&gt;&lt;td&gt;1&lt;&#x2F;td&gt;&lt;td&gt;&lt;&#x2F;td&gt;&lt;td&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;level=2&lt;&#x2F;td&gt;&lt;td&gt;2&lt;&#x2F;td&gt;&lt;td&gt;1&lt;&#x2F;td&gt;&lt;td&gt;1&lt;&#x2F;td&gt;&lt;td&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;level=3&lt;&#x2F;td&gt;&lt;td&gt;2&lt;&#x2F;td&gt;&lt;td&gt;1&lt;&#x2F;td&gt;&lt;td&gt;1&lt;&#x2F;td&gt;&lt;td&gt;1&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;&#x2F;tbody&gt;&lt;&#x2F;table&gt;
&lt;p&gt;機率的話則如下表：&lt;&#x2F;p&gt;
&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;drop&lt;&#x2F;th&gt;&lt;th&gt;1&lt;&#x2F;th&gt;&lt;th&gt;2&lt;&#x2F;th&gt;&lt;th&gt;3&lt;&#x2F;th&gt;&lt;th&gt;4&lt;&#x2F;th&gt;&lt;&#x2F;tr&gt;&lt;&#x2F;thead&gt;&lt;tbody&gt;
&lt;tr&gt;&lt;td&gt;level=0&lt;&#x2F;td&gt;&lt;td&gt;1.00&lt;&#x2F;td&gt;&lt;td&gt;&lt;&#x2F;td&gt;&lt;td&gt;&lt;&#x2F;td&gt;&lt;td&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;level=1&lt;&#x2F;td&gt;&lt;td&gt;0.66&lt;&#x2F;td&gt;&lt;td&gt;0.33&lt;&#x2F;td&gt;&lt;td&gt;&lt;&#x2F;td&gt;&lt;td&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;level=2&lt;&#x2F;td&gt;&lt;td&gt;0.50&lt;&#x2F;td&gt;&lt;td&gt;0.25&lt;&#x2F;td&gt;&lt;td&gt;0.25&lt;&#x2F;td&gt;&lt;td&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;level=3&lt;&#x2F;td&gt;&lt;td&gt;0.40&lt;&#x2F;td&gt;&lt;td&gt;0.20&lt;&#x2F;td&gt;&lt;td&gt;0.20&lt;&#x2F;td&gt;&lt;td&gt;0.20&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;&#x2F;tbody&gt;&lt;&#x2F;table&gt;
&lt;h2 id=&quot;duo-zhong-diao-luo&quot;&gt;多重掉落&lt;&#x2F;h2&gt;
&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;礦物&lt;&#x2F;th&gt;&lt;th&gt;count&lt;&#x2F;th&gt;&lt;&#x2F;tr&gt;&lt;&#x2F;thead&gt;&lt;tbody&gt;
&lt;tr&gt;&lt;td&gt;銅礦&lt;&#x2F;td&gt;&lt;td&gt;2~6&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;青金石礦&lt;&#x2F;td&gt;&lt;td&gt;4~9&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;地獄金礦&lt;&#x2F;td&gt;&lt;td&gt;2~6&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;&#x2F;tbody&gt;&lt;&#x2F;table&gt;
&lt;p&gt;這三種礦物的 &lt;code&gt;count&lt;&#x2F;code&gt; 機率為&lt;strong&gt;平均分佈&lt;&#x2F;strong&gt;，總掉落計算方法為先算出 &lt;code&gt;count&lt;&#x2F;code&gt; ，再乘上 &lt;code&gt;(max(0, random(level + 2) - 1) + 1)&lt;&#x2F;code&gt;。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;guan-yu-hong-shi&quot;&gt;關於紅石&lt;&#x2F;h2&gt;
&lt;p&gt;紅石所使用的公式並不是 &lt;code&gt;minecraft:ore_drop&lt;&#x2F;code&gt; ，而是使用 &lt;code&gt;minecraft:uniform_bonus_count&lt;&#x2F;code&gt; ，紅石的 count 為 4~5 ，機率各半。&lt;&#x2F;p&gt;
&lt;p&gt;掉落 &lt;code&gt;count&lt;&#x2F;code&gt; 的權重為 1 ，每有一等幸運，就會多一點權重再額外掉落一個，以 &lt;code&gt;count=4&lt;&#x2F;code&gt; 為例用表格說明：&lt;&#x2F;p&gt;
&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;drop&lt;&#x2F;th&gt;&lt;th&gt;4&lt;&#x2F;th&gt;&lt;th&gt;5&lt;&#x2F;th&gt;&lt;th&gt;6&lt;&#x2F;th&gt;&lt;th&gt;7&lt;&#x2F;th&gt;&lt;&#x2F;tr&gt;&lt;&#x2F;thead&gt;&lt;tbody&gt;
&lt;tr&gt;&lt;td&gt;level=0&lt;&#x2F;td&gt;&lt;td&gt;1&lt;&#x2F;td&gt;&lt;td&gt;&lt;&#x2F;td&gt;&lt;td&gt;&lt;&#x2F;td&gt;&lt;td&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;level=1&lt;&#x2F;td&gt;&lt;td&gt;1&lt;&#x2F;td&gt;&lt;td&gt;1&lt;&#x2F;td&gt;&lt;td&gt;&lt;&#x2F;td&gt;&lt;td&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;level=2&lt;&#x2F;td&gt;&lt;td&gt;1&lt;&#x2F;td&gt;&lt;td&gt;1&lt;&#x2F;td&gt;&lt;td&gt;1&lt;&#x2F;td&gt;&lt;td&gt;&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;level=3&lt;&#x2F;td&gt;&lt;td&gt;1&lt;&#x2F;td&gt;&lt;td&gt;1&lt;&#x2F;td&gt;&lt;td&gt;1&lt;&#x2F;td&gt;&lt;td&gt;1&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;&#x2F;tbody&gt;&lt;&#x2F;table&gt;
&lt;h2 id=&quot;qi-wang-zhi-zheng-li&quot;&gt;期望值整理&lt;&#x2F;h2&gt;
&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;幸運&lt;&#x2F;th&gt;&lt;th&gt;單一掉落型&lt;&#x2F;th&gt;&lt;th&gt;銅礦＆地獄金礦&lt;&#x2F;th&gt;&lt;th&gt;青金石礦&lt;&#x2F;th&gt;&lt;th&gt;紅石礦&lt;&#x2F;th&gt;&lt;&#x2F;tr&gt;&lt;&#x2F;thead&gt;&lt;tbody&gt;
&lt;tr&gt;&lt;td&gt;level=0&lt;&#x2F;td&gt;&lt;td&gt;1.00&lt;&#x2F;td&gt;&lt;td&gt;4.00&lt;&#x2F;td&gt;&lt;td&gt;6.50&lt;&#x2F;td&gt;&lt;td&gt;4.50&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;level=1&lt;&#x2F;td&gt;&lt;td&gt;1.33&lt;&#x2F;td&gt;&lt;td&gt;5.33&lt;&#x2F;td&gt;&lt;td&gt;8.66&lt;&#x2F;td&gt;&lt;td&gt;5.00&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;level=2&lt;&#x2F;td&gt;&lt;td&gt;1.75&lt;&#x2F;td&gt;&lt;td&gt;7.00&lt;&#x2F;td&gt;&lt;td&gt;11.375&lt;&#x2F;td&gt;&lt;td&gt;5.50&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;level=3&lt;&#x2F;td&gt;&lt;td&gt;2.20&lt;&#x2F;td&gt;&lt;td&gt;8.80&lt;&#x2F;td&gt;&lt;td&gt;14.30&lt;&#x2F;td&gt;&lt;td&gt;6.00&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;&#x2F;tbody&gt;&lt;&#x2F;table&gt;
</content>
        
    </entry>
    <entry xml:lang="zh-tw">
        <title>霞鶩文楷</title>
        <published>2023-02-06T00:00:00+00:00</published>
        <updated>2023-02-06T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              NatsuCamellia
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://natsucamellia.github.io/lxgw-wenkai/"/>
        <id>https://natsucamellia.github.io/lxgw-wenkai/</id>
        
        <content type="html" xml:base="https://natsucamellia.github.io/lxgw-wenkai/">&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;natsucamellia.github.io&#x2F;lxgw-wenkai&#x2F;wenkai.png&quot; alt=&quot;LXGW Wenkai&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;正當我在美化我的網站時，突然看到了「&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;lxgw&#x2F;LxgwWenKai&quot;&gt;霞鶩文楷&lt;&#x2F;a&gt;」這個字體，我覺得很不錯看，想要把網站的字體換成它。我研究了一番，發現這是一款開源字體，它源自日本字體公司 Fontworks 的開源字體 &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;fontworks-fonts&#x2F;Klee&quot;&gt;Klee&lt;&#x2F;a&gt;，但因為 Klee 作為一款日文字體，漢字的字數不足以讓中文使用者使用。於是作者為 Klee 補全了簡繁常用字體，推出了「霞鶩文楷」。&lt;&#x2F;p&gt;
&lt;h3 id=&quot;demo&quot;&gt;Demo&lt;&#x2F;h3&gt;
&lt;p&gt;現在網站使用的字體就是霞鶩文楷，但也許之後又換了也不一定（更：換了），想要看 Demo 的話也可以到霞鶩文楷作者的 &lt;a href=&quot;https:&#x2F;&#x2F;lxgw.github.io&quot;&gt;Github Page&lt;&#x2F;a&gt; 查看。&lt;&#x2F;p&gt;
&lt;h3 id=&quot;cdn&quot;&gt;CDN&lt;&#x2F;h3&gt;
&lt;p&gt;將網站字體改為霞鶩文楷有兩種方法，第一種最直接的方式就是把字體檔案放在網站上，當進入網站時就可以直接載入，但我並不想把字體放在網站裡，這樣有點雜亂又麻煩，不能像 Google Fonts 直接在 CSS 裡輸入網址嗎？&lt;&#x2F;p&gt;
&lt;p&gt;那肯定是可以，我在 Github 上面看到另一種方法：CDN。&lt;&#x2F;p&gt;
&lt;p&gt;CDN 全名 Content Delivery Network，中文為內容傳遞網路，概念上就是許多伺服器被設在不同地區，以提供網路內容的快速傳遞。&lt;&#x2F;p&gt;
&lt;p&gt;原理是這樣的，假設這個網站不是由 Github 幫我 Host，而是我自己架設在臺灣，在美國的使用者要讀取我的網站字體的話，就必須要從我這裡取得，不免需要比較多的時間。而透過 CDN 的話，該使用者就可以直接從當地的 CDN 伺服器下載這個字體，加快網頁的載入時間。&lt;&#x2F;p&gt;
&lt;p&gt;以我的網站規模而言，省下這點時間實在是稱不上顯著，但已經達成我的目的了：讓使用者從別的網域下載字體，不需要透過我的網站！而對於大規模的網站或者是應用程式，就有以下明顯的優點了：&lt;&#x2F;p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;加速網頁讀取&lt;&#x2F;strong&gt;：使用者能從最近的 CDN 獲取網站內容，增加載入速度。&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;分擔流量&lt;&#x2F;strong&gt;：CDN 可以幫伺服器分散流量，減少伺服器的頻寬成本。&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;改善網站安全性&lt;&#x2F;strong&gt;：有些 CDN 甚至能做到 DDoS 防護與改善安全性。&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
</content>
        
    </entry>
    <entry xml:lang="zh-tw">
        <title>Minecraft 模組計畫</title>
        <published>2023-01-18T00:00:00+00:00</published>
        <updated>2023-01-18T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              NatsuCamellia
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://natsucamellia.github.io/minecraft-modding-plan/"/>
        <id>https://natsucamellia.github.io/minecraft-modding-plan/</id>
        
        <content type="html" xml:base="https://natsucamellia.github.io/minecraft-modding-plan/">&lt;p&gt;我回到雲林之後就一直宅在家裡不知道要做什麼，直到某一天我突然看到一系列 &lt;a href=&quot;https:&#x2F;&#x2F;www.youtube.com&#x2F;playlist?list=PLKGarocXCE1EMxeBvqsOWZVkYD_Vd_uwW&quot;&gt;Minecraft 模組教學影片&lt;&#x2F;a&gt;，作者教的很好，發音也很標準，可以練英聽（？），而且我發現並不難，於是就開始研究模組了。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;kai-shi-dong-ji&quot;&gt;開始動機&lt;&#x2F;h2&gt;
&lt;p&gt;剛開始我照著影片內的作法做，做著其實還挺有成就感的，於是我便打算來做一個模組。我突然想到之前很喜歡玩的 AppleMilkTea2（AMT2） ，裡面新增了很多食物和飲料，還有調酒系統，可惜版本一直待在 1.7.10 都沒有更新，我便打算將這個模組移植到 1.19.2 ，命名為 AppleMilkTea3（AMT3），作為我的寒假消遣。&lt;&#x2F;p&gt;
&lt;p&gt;先說說為什麼這個作者停止更新了，根據該模組的 &lt;a href=&quot;https:&#x2F;&#x2F;www.curseforge.com&#x2F;minecraft&#x2F;mc-mods&#x2F;applemilktea2&quot;&gt;CurseForge 頁面&lt;&#x2F;a&gt;下原作者的留言表示，會停止更新的原因之一是他已經有新做了一個模組 Head and Climate（HAC） ，其中有一部份來自 AMT2 ，算是作為 AMT2 的重製版。此外，由於這個 CurseForge 頁面是原作者的朋友所擁有，下載模組的玩家常常會誤認原作者的朋友才是真正的作者，這讓原作者感到不太開心。&lt;&#x2F;p&gt;
&lt;p&gt;再來是為什麼在有 HAC 的情況下我還要移植這個模組，一方面是因為這個模組在 1.12.2 版本，我本身是喜歡玩最新版本的玩家，這個五年前的版本實在不能接受；另一方面是我不太喜歡氣候系統，釀個酒還要找適當的氣候稍嫌麻煩，這樣就不能在我家裡蓋食物工廠了。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;zhu-zuo-quan&quot;&gt;著作權&lt;&#x2F;h2&gt;
&lt;p&gt;根據 &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;defeatedcrow&#x2F;AppleMilkTea2_1.7.10&quot;&gt;AMT2 Github&lt;&#x2F;a&gt; ，作者對於原始碼的條款採用 MMPL（Minecraft Mod Public License），其他人可以修改、引用並在同樣條款下發布修改過的模組；對於材質於音效，作者採用 CC-BY-NC 創用 CC 條款，也就是非營利、標明作者便可以使用。所以我的模組理論上是沒有著作權問題的。&lt;&#x2F;p&gt;
&lt;p&gt;後來我想要把我的模組放上 CurseForge 讓朋友們方便安裝下載，但 CurseForge 管理跟我說 AMT2 在 CurseForge 發布時是 All Right Reserved ，也就是當時原作者的朋友設定的，因此我必須取得原作者的同意才能發佈我的模組。&lt;&#x2F;p&gt;
&lt;p&gt;我並不想去和原作者洽談，因為原作者可能會覺得他已經做了 HAC 為什麼我還要重做 AMT ，再來是我可能會搶到原作者模組的下載量，最後是我可能會半途而廢，所以我就不公開發佈了，但我還是將 &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;NatsuCamellia&#x2F;AppleMilkTea3_1.19.2&quot;&gt;AMT3 Github&lt;&#x2F;a&gt; 設為公開，想要遊玩的讀者可以前往下載。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;kun-nan-yi-ban-ben-lao-jiu&quot;&gt;困難一、版本老舊&lt;&#x2F;h2&gt;
&lt;p&gt;眾所皆知， 1.7.10 是一個非常古老的版本，在 2014 年 6 月推出，當時的程式碼和現在有很大的不同，模組內的資料分布也差很多，比如以前把配方材質都直接寫在 class 裏面，現在是 API 會自動去抓名稱相符的 json ，我要找以前的檔案都要翻很久。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;kun-nan-er-bu-shou-lian&quot;&gt;困難二、不熟練&lt;&#x2F;h2&gt;
&lt;p&gt;由於我才剛接觸模組，馬上就移植這麼大的模組，加上我是邊做邊學，效率自然不高，而且網上關於模組的文章實在不多，找資料不太容易，不過我相信很快就能上手了。&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="zh-tw">
        <title>2022 回顧</title>
        <published>2022-12-31T00:00:00+00:00</published>
        <updated>2022-12-31T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              NatsuCamellia
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://natsucamellia.github.io/2022-recap/"/>
        <id>https://natsucamellia.github.io/2022-recap/</id>
        
        <content type="html" xml:base="https://natsucamellia.github.io/2022-recap/">&lt;h2 id=&quot;yi-yue-xue-ce&quot;&gt;一月、學測&lt;&#x2F;h2&gt;
&lt;p&gt;學測的那幾天精神狀態不錯，考試的時候都不會緊張。每堂考試進入考場之前，我們都會吃一顆糖果，聽說這樣有助於腦袋清醒。不確定是化學上的作用還是心理作用，反正是達成目的了，我考試的時候很冷靜，頭腦也非常清楚。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;er-yue-che-huo&quot;&gt;二月、車禍&lt;&#x2F;h2&gt;
&lt;p&gt;二月寒假我去考了機車駕照，就在考駕照的前一天，我騎車去考場練習（反面教材），就在考場的前一個路口，我被一輛小客車衝撞。我失去了當時的大部分記憶，意識清醒時已經在醫院了。記得當時媽媽心急如焚的衝來醫院，我躺在病床上看到媽媽時便緊握她的手，我瞬間感到原來保有生命是多麽幸福的一件事。&lt;&#x2F;p&gt;
&lt;p&gt;小客車直接撞上機車的龍頭，龍頭損傷嚴重，但我只有輕微擦傷而已，要是我再騎快一點，撞上的地方就是我的身體了，算是萬中選一的幸運吧，從此我也更加珍惜生命。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;san-yue-fan-xing&quot;&gt;三月、繁星&lt;&#x2F;h2&gt;
&lt;p&gt;三月一日公布學測成績，英文社會 14 級分，其他都是 15 級分，成績比我想像中的好很多，當下在等校車的我雀躍無比。&lt;&#x2F;p&gt;
&lt;p&gt;我後來覺得，學測的考運很大程度地決定了決定了我的人生，我預期國文和數學都前標，但沒想到結果竟然都是 15 級分，當下震驚的我沒有意識到臺大這條道路被解鎖了。&lt;&#x2F;p&gt;
&lt;p&gt;儘管我在學測拿到接近滿級分的成績，是校史中最好的一次，我卻依然沒有自信。準備繁星時我非常保守，志願序是清華、交通、成功的資工系，從來沒有考慮過台大。因為我認為台大的學生都是天才，課程內容也會比較困難，我在台大肯定會吊車尾，導致我失去最後的自信心，從此放棄唸書。&lt;&#x2F;p&gt;
&lt;p&gt;正式填繁星的前夕，學校的老師找我討論，他對我說：「以你的成績完全可以上台大，甚至可以上台大醫學系，你是非常有競爭力的，要對自己有信心。況且重考也不一定有如此好的成績，一生也只有這一次用繁星的機會，下次就沒有了。」&lt;&#x2F;p&gt;
&lt;p&gt;我花了好幾天認真考慮，我很害怕落榜，失去了這次完美的機會，亦或是上了台大卻失去讀書的動力。但後來我想通了這個道理，既然我的成績可以上台大，代表我有相當的競爭力，不是每個都市學校的學生能力都比我好，我有資格自信。我也深知我不填台大只是因為我習慣當第一名了，不想離開溫暖的舒適圈，不過既然都要成為大學生了，第一名與否已經不重要了，重要的是能夠學到多少，學校有多少資源讓我學習才是最重要的。&lt;&#x2F;p&gt;
&lt;p&gt;最後，我透過繁星上了臺大資工。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;si-yue-macbook&quot;&gt;四月、MacBook&lt;&#x2F;h2&gt;
&lt;p&gt;四月高中校慶，聽說家長會長要送我禮物，當作考上台大的獎品。我聽到這件事的當下是不知道要選什麼的，但是班導直接獅子大開口說「MacBook」，我那時還很純潔，沒有被蘋果碰過一根寒毛，也不知道蘋果的價格就同意了。後來家長會長還真的送了 MacBook Pro 14&quot;，還把記憶體升到 16G ，是一筆不小的金額，應該足夠付我高中三年的學費，這樣算是讀高中賺錢...嗎？&lt;&#x2F;p&gt;
&lt;p&gt;這件事聽在其他學校的學生耳裡，可能會覺得很扯，考上台大就可以有一台 MacBook ，但就連我自己也覺得很扯。校方是認為偏鄉高中考上臺大非常不易，送一台電腦是值得的，不過我覺得學弟妹有越來越厲害的趨勢，入學成績一屆比一屆好，也許是近年繁星成績亮眼的關係吧。&lt;&#x2F;p&gt;
&lt;p&gt;開學後 MacBook 成為我的主力機，用起來不會有任何的障礙，如果有那就太丟資工系的臉了。用了一個學期，最有感的優點就是順，而且 M1 晶片耗電量低，都不用關機，打開上蓋就可以直接從上次中斷的地方繼續。設定寫程式的環境也很友善，內建 GCC ，寫 C 直接打開 VSCode 就可以寫了，如果需要另外裝有的沒的就直接 &lt;code&gt;homebrew install&lt;&#x2F;code&gt; 。這些優點也許 Linux 都有，但絕對沒有無敵的觸控板，各種視窗鬼切都可以透過簡單的手勢完成，最棒的是觸控板的任何角落都可以當左鍵點。當我用同學的 Windows 觸控板時，我總是覺得 MacBook 的觸控板真棒。&lt;&#x2F;p&gt;
&lt;p&gt;現在已經回不去 Windows 筆電了，糟糕。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;wu-yue-liu-yue-zi-zhu-xue-xi&quot;&gt;五月～六月、自主學習&lt;&#x2F;h2&gt;
&lt;p&gt;繁星錄取後到畢業前的這段時間，我做了一個專案，是一個查詢繁星資料的程式，雖然那時寫的程式碼並不多，而且現在看來也是非常粗糙的程式，但終於做出一個能夠分享給他人使用的程式，是非常有成就感的一件事。&lt;&#x2F;p&gt;
&lt;p&gt;我分享給高中導師使用，反饋似乎不錯，我當時又回去東修西改，新增了好多功能，甚至利用 Java 的優勢讓這個程式能夠在 Windows 和 Mac 兩個主流平台上運行，雖然是一段血汗之路...&lt;&#x2F;p&gt;
&lt;p&gt;最近放寒假了，我終於有空可以更新 112 年的資料了，希望能儘早趕工完成，提供學弟妹使用！&lt;&#x2F;p&gt;
&lt;h2 id=&quot;ba-yue-nai-nai-guo-shi&quot;&gt;八月、奶奶過世&lt;&#x2F;h2&gt;
&lt;p&gt;奶奶在八月底過世了，卡在大學的迎新週，導致我錯過了很多新生的活動，但也許是奶奶不希望影響我大學的學習吧。&lt;&#x2F;p&gt;
&lt;p&gt;在這段過程中，我學習到了如何獨當一面，包辦各項大小事，確實感覺到自己在上大學前的這個暑假成長了不少，也對於生離死別有了不同的見解，親人終究會慢慢離開我們。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;jiu-yue-mi-yue&quot;&gt;九月、蜜月&lt;&#x2F;h2&gt;
&lt;p&gt;九月是大學的蜜月，在臺北到處走逛，不斷刷新價值觀與眼界的時期，也寫了不少札記，是個什麼東西都新奇、都能寫的階段。&lt;&#x2F;p&gt;
&lt;p&gt;這段時間我利用課餘時間逐漸把我的網站架設起來，開始可以發布一些文章了，我把我剛開學的心路歷程放在網站裡，希望藉由半公開的方式，能夠讓我以第三者的觀點看待我生活中所發生的事。&lt;&#x2F;p&gt;
&lt;p&gt;這個學期我還參加了「金華九九學堂」的志工服務，每個禮拜三都到金華國中當國中生的課輔老師，剛開始每週都非常精彩，但到後來精力逐漸被課業消磨殆盡。這個計畫非常累，時間是下午四點半到六點半，而我還會多留一個小時陪學生進行課後共學，變成七點半才離開，這個時間吃晚餐就不太容易了，常常都是吃個麵包擋著而已。&lt;&#x2F;p&gt;
&lt;p&gt;在這段服務中我發現，老師總是願意教學生的，儘管學生能力可能稍差，但只要是願意學，老師就肯教；反之如果學生心不在焉、完全不想學，老師講得再多不但沒有幫助，反而還會澆熄老師的熱情。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;shi-yue-ya-li&quot;&gt;十月、壓力&lt;&#x2F;h2&gt;
&lt;p&gt;十月是壓力最大的時期，也是心靈成長最多的一段時間，那時候透過國文課的報告記下了不少珍貴的心路歷程：&lt;a href=&quot;&#x2F;exit-comfort-zone&quot;&gt;跨出舒適圈，找尋自我&lt;&#x2F;a&gt;。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;shi-yi-yue-hui-fu&quot;&gt;十一月、恢復&lt;&#x2F;h2&gt;
&lt;p&gt;經過了十月的期中考，十一月的這段時間逐漸看開分數，也逐漸對自己產生自信，課業也步入正軌，也覺得生活很幸福。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;shi-er-yue-sheng-huo&quot;&gt;十二月、生活&lt;&#x2F;h2&gt;
&lt;p&gt;十二月的我全心專注於學業上，沒有什麼寫作。期末考考的還滿理想的，成績都不錯。考完後回家過聖誕節，隔一個週一就回來臺北準備計概上臺報告，順便在臺北不斷地玩，導生宴、和同學吃飯、聊天、玩桌遊，也去臺北的不同地方、看電影、逛 IKEA 等學期中想去的地方。我交了好多朋友，跨年還一起在學校附近看煙火，這段時間真的好開心。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;xin-nian-mu-biao&quot;&gt;新年目標&lt;&#x2F;h2&gt;
&lt;p&gt;最後來個很多人喜歡做的訂定新年目標吧：&lt;&#x2F;p&gt;
&lt;h3 id=&quot;duan-qi&quot;&gt;短期&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;日檢 N5&lt;&#x2F;li&gt;
&lt;li&gt;寒假學完 Java&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;zhong-qi&quot;&gt;中期&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;多在系館交朋友&lt;&#x2F;li&gt;
&lt;li&gt;不要被課業支配時間&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;chang-qi&quot;&gt;長期&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;每週一篇札記&lt;&#x2F;li&gt;
&lt;li&gt;每天給家人發訊息&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
</content>
        
    </entry>
    <entry xml:lang="zh-tw">
        <title>導生宴</title>
        <published>2022-12-27T00:00:00+00:00</published>
        <updated>2022-12-27T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              NatsuCamellia
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://natsucamellia.github.io/dining-with-teacher/"/>
        <id>https://natsucamellia.github.io/dining-with-teacher/</id>
        
        <content type="html" xml:base="https://natsucamellia.github.io/dining-with-teacher/">&lt;p&gt;十二月六日，收到了一封導生宴的邀約信，我起初沒有想過會有導生宴這種活動，竟然能夠收到邀請。我將表單中所有可能的時段都給它打勾了，地點約在了一間價格偏貴的餐廳。&lt;&#x2F;p&gt;
&lt;p&gt;當天早上完成了計算機概論的期末報告後，我就和同班的三位同學一起前往指定的餐廳。我們到得挺早，教授約在十二點，而我們卻大約在十一點半就到了。我們在餐廳內坐了一會，等到大家都到了之後我們就開始點餐。因為這家餐廳是西式早點餐廳，菜單上有這不少甜點，剛好近期非常想吃甜食，我便點了藍莓鬆餅套餐和烤棉花糖可可。&lt;&#x2F;p&gt;
&lt;p&gt;這兩道甜點都超乎我預期的甜，但是我都很喜歡。藍莓鬆餅口感鬆軟，但不會過於空心，附上的糖漿雖然非常甜，但是搭上藍莓後，和鬆餅的香味非常契合。烤棉花糖可可表層的奶泡非常綿密，下層的可可偏甜，但香味非常足夠，而棉花糖如口即化，但一樣算是偏甜。&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;教授：好猛，滿滿的碳水化合物...&lt;br&gt;
我：沒在怕。&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;我現在已經比開學的時候胖七公斤了，這餐下去不知道會發生什麼事。&lt;&#x2F;p&gt;
&lt;p&gt;教授真的超友善，能夠跟我們談天說地，確實如同學長說的「表現得很年輕」。我們和教授聊了非常多，從選課、升學、工作到人生規劃，還有一位九八年入學的學姊一起聊天，有各種處在不同階段的人一起聊天真的會有非常多不同的見解。&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="zh-tw">
        <title>療癒書寫修課心得</title>
        <published>2022-12-12T00:00:00+00:00</published>
        <updated>2022-12-12T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              NatsuCamellia
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://natsucamellia.github.io/curing-writing-thought/"/>
        <id>https://natsucamellia.github.io/curing-writing-thought/</id>
        
        <content type="html" xml:base="https://natsucamellia.github.io/curing-writing-thought/">&lt;h2 id=&quot;qian-yan&quot;&gt;前言&lt;&#x2F;h2&gt;
&lt;p&gt;我在學期初選課的心態是趕快把比較難選的課修掉，於是就選了三堂國文課，而這堂課是我的第一志願。傳聞高年級比較容易選到國文課，但是我們班上卻有一半以上都是大一生，這個傳聞是真是假有待查驗。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;zhu-ti&quot;&gt;主題&lt;&#x2F;h2&gt;
&lt;p&gt;本堂課程的名稱叫做「大學國文：文學鑑賞與寫作」，而老師訂的主題為「療癒書寫」。希望藉由書寫自己的不體面與不美好的過程中，以客觀的角度看待整個事件，以期修補心中的傷口，達到「療癒」的目的。&lt;&#x2F;p&gt;
&lt;p&gt;課程的進行分為兩部分，同學報告（佔多數時間）與老師分析文本，每個同學在一個學期中都要報告三次。分為三大主題：探索與書寫、生活體驗報告、關係與感受報告。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;ting-gu-shi&quot;&gt;聽故事&lt;&#x2F;h2&gt;
&lt;p&gt;在臺下聽同學說有關自己的故事是很有意思的一件事，大家來自不同的地區，有各種不同的文化背景與生長環境，因此每個人的故事都與眾不同。一堂課就能體驗到不同故事，並且都是大家童年到青少年萃取的最精華，加上主題幾乎可以說是不限，因此怎麼聽都不會膩。&lt;&#x2F;p&gt;
&lt;p&gt;令我印象深刻的故事有好多好多，單親家庭、重組家庭、隔代教養家庭，被家暴、被霸凌、頂撞老師，也有旅行探索如騎單車、獨旅、幫家人安排日本行程，最酷的是自造飛機還有當場在臺上表演如何用吉他做一人樂團。還有很多故事到現在我仍歷歷在目，當報告者在台上真情流露，我也被帶進了他們的世界中，和他們一起走過當時的心路歷程。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;shang-tai&quot;&gt;上台&lt;&#x2F;h2&gt;
&lt;p&gt;還記得我第一次上台的感覺，當下我腦中充滿想法，當晚立馬就記下了稍縱即逝的感受：（&lt;a href=&quot;&#x2F;exploration-writing-sharing&quot;&gt;原文&lt;&#x2F;a&gt;）&lt;&#x2F;p&gt;
&lt;p&gt;在台上時我放慢語速，謹慎小心地將每個文字說出口，盡量在每個句子之間加上適當的停頓，好緩和我的情緒，利用這段時間對我將要說出的句子稍加整理，希望能讓我的演講聽起來更加有條理，並減少冗言贅字的產生。&lt;&#x2F;p&gt;
&lt;p&gt;而當報告結束時，總會得到滿堂掌聲，也許每位上臺的講者收到的掌聲都是相同而充滿熱情的，但這些掌聲對任何人而言都是振奮人心而溫暖的。&lt;&#x2F;p&gt;
&lt;p&gt;下課後，看著每位同學寫的暖心回饋單，我第一次報告的主題是關於剛入大學的壓力，當我打開回饋單時，令我意外地，並沒有任何一張提到我該如何改善我的演講，反而大家都是為我打氣加油，也有不少同學表示能了解我的處境，因為自己也是遇到同樣的情況。我感到非常感動，快要哭出來了。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;zhe-tang-ke-de-jia-zhi&quot;&gt;這堂課的價值&lt;&#x2F;h2&gt;
&lt;p&gt;老師一開學就說到因為這堂課要做療癒書寫，所以一般被社會認為不體面、不美好的事情都可以搬上臺講，而且我認為正因爲同學們大多和彼此不熟識，我更能自在地說出自己的真實處境、揭露傷痕，而不必在意他人的眼光。&lt;&#x2F;p&gt;
&lt;p&gt;此外，我認為可能是因為人們通常樂於講述自己的故事，所以同學們各個都精心製作簡報與策劃上台報告，內容都很充實、故事也引人入勝，最重要的也是因為老師不會評論我們的故事內容，所以同學也更能放開自我來書寫。&lt;&#x2F;p&gt;
&lt;p&gt;最後我認為很有意思的是「暖心回饋單」，每當同學報告完之後，臺下的同學就要寫回饋單給報告的同學。原先的設定是回饋單上面有評分欄，可以供同學改進自己的報告，但是到最後變成同學只在上面寫鼓勵的話，完全沒有填寫評分欄，自動地往療癒的方向走了。不過後來我發現後來寫回饋單的同學越來越少了，參與度似乎沒有剛開學那麼高，這是比較可惜的，不過我還是堅持會為每位同學寫回饋單，並認真地聽他們的報告，畢竟這都是大家辛苦準備的。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;ke-cheng-you-hua&quot;&gt;課程優化&lt;&#x2F;h2&gt;
&lt;p&gt;老師在課堂中所講的古典文本對我來說意義不大，因為「聊齋誌異」與「閱微草堂筆記」這兩本古著用比較間接的方式進行「療癒書寫」，一般來說我們並不會透過奇聞軼事來療癒我們的心靈。每次下課後我就覺得：好，我知道作者做了什麼事，但是我到底學到了什麼？我覺得沒有學到寫作技巧或是精準地表達自己想法的方法，整個學期唯一有印象的技巧只有「開頭簡短、概括全文」&lt;&#x2F;p&gt;
&lt;p&gt;因此我認為在之後的課程中，老師可以講述作者如何在文章中療癒自己的心靈，用了什麼技巧、以及用字遣詞的細節等，讓同學能夠運用在自己的報告中。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;xin-de&quot;&gt;心得&lt;&#x2F;h2&gt;
&lt;p&gt;「療癒書寫」，我確實在書寫上大學的壓力與和弟弟的情感的過程中，療癒了我的心，我認為修這門課很值得，我也希望這類的課程能夠被推廣，比起傳統只聽老師分析文本有意義多了。&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="zh-tw">
        <title>第四次計程考試</title>
        <published>2022-11-28T00:00:00+00:00</published>
        <updated>2022-11-28T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              NatsuCamellia
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://natsucamellia.github.io/fourth-programming-test/"/>
        <id>https://natsucamellia.github.io/fourth-programming-test/</id>
        
        <content type="html" xml:base="https://natsucamellia.github.io/fourth-programming-test/">&lt;p&gt;今天是禮拜一，又來到了三週一次的計程考試。前天我幾乎整天都在寫程式，而昨天就更誇張了，只有最後一兩個小時讀微積分，其餘整天都是在寫程式。我寫程式的原因不單是因為為了練習今天的考試範圍，更是因為在 Judge Girl 上解題的成就感太強了，簡單分析原因：&lt;&#x2F;p&gt;
&lt;ol&gt;
&lt;li&gt;題目做完會打勾，分類還會填星星，沒做空心，做過半滿，做完全滿。&lt;img src=&quot;https:&#x2F;&#x2F;natsucamellia.github.io&#x2F;fourth-programming-test&#x2F;star_check.png&quot; alt=&quot;打勾和填星星&quot; &#x2F;&gt;&lt;&#x2F;li&gt;
&lt;li&gt;題目難度超出舒適圈一點點，解題的成就感非常充足。&lt;&#x2F;li&gt;
&lt;li&gt;網站有解題數量排行，隨著自己解題數的上升，自己的排名也不斷飛升，這是最大的成就感來源，也是讓我題目一做在做的原因，因為真的太令人著迷了，到現在已經是歷史 59 位、年段 2 位了。&lt;&#x2F;li&gt;
&lt;li&gt;每題的程式速度也有排行，我會稍微讓自己程式跑快一點，如果有贏過別人很多也會很有成就感，例如別人要 1.5 s，我卻只要 100 ms 以內，算是滿足虛榮心吧。&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;p&gt;我這兩天總共做了約 23 題，看起來不是個大數字，但是若以每題一小時來看，那就是 23 小時，雖然實際上應該沒有這麼久。&lt;&#x2F;p&gt;
&lt;p&gt;我已經把 Judge Girl 的 motto 設成了：&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;I’m not the best, but I’m trying my best.&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;h2 id=&quot;qian-wang-kao-chang&quot;&gt;前往考場&lt;&#x2F;h2&gt;
&lt;p&gt;早上騎車快到系館時，才發現忘記帶課本了，教授說考試的時候可以看課本，但我完全沒看過，估計這次也不會看，但是保險起見我還是回去宿舍拿了，額外花了不少時間。進到電腦教室已經約 9:05 了，我走到白板前查看座位表，發現怎麼是梅花座，但我也瞬間就認知到有一半的人都停休了，沒退選的人再被當一些的話，教授開學說出的預言就成真了：&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;看看你左邊的同學，再看看右邊的同學，你們其中一個會停休，一個會被當。&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;教授說他每年開學都會都會跟同學說怎麼做才不會被當，但每年還是有大比例會被當掉。連結：&lt;a href=&quot;https:&#x2F;&#x2F;www.facebook.com&#x2F;pangfeng.liu&#x2F;posts&#x2F;pfbid02jrExcvJHNnF82suS9mDUsi6FL5ETfRUDt31EP2zCnzFKvUpfLrS7BJ5RN1zEikU4l&quot;&gt;教授開學警言&lt;&#x2F;a&gt;。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;kao-shi-kai-shi&quot;&gt;考試開始&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;pa-convert-a-uint64-t-array-cc-2-2-2-20min&quot;&gt;pA. Convert a uint64_t array, CC=2&#x2F;2.2, 20min&lt;&#x2F;h3&gt;
&lt;p&gt;第一題看起來很簡單，CC 只有 2.2。題意是給一堆 64 bit 的 unsigned integer ，然後每次讀最右邊的五個 bit ，就可以表示 0 ~ 31 ，然後要把這五個 bit 代表的數字轉成字元 a=0, b=1…, z=25，每個 integer 會讀到 12 個字元，真的是挺簡單的。練習的題庫中有一題是要從左邊開始讀，還要要把全部串起來讀，比這個考試的題目還麻煩，雖然中途遇到了括號的 BUG ，不過我還是三兩下就做出來了，花了約二十分鐘。&lt;&#x2F;p&gt;
&lt;h3 id=&quot;pc-friend-cover-cc-10-10-6-80min&quot;&gt;pC. Friend Cover, CC=10&#x2F;10.6, 80min&lt;&#x2F;h3&gt;
&lt;p&gt;我先做這題是因為 pB 看起來很複雜，而且教授還特別說要 Error Check，還表示說很麻煩。&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;有 N 個人，給定 M 對朋友，找出最小組合，使得每對朋友都至少有一個人被選中。&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;我當下的想法就是想到昨天新學到的東西，先選一個人，然後把他的朋友從備選名單中劃掉，再繼續從備選名單中挑選，如此遞迴下去直到備選名單清空。&lt;&#x2F;p&gt;
&lt;p&gt;我做了很久，但答案始終不對，我花了半個小時 Debug 都找不到問題，後來重新審視演算法，發現我的演算法從頭就錯了。&lt;&#x2F;p&gt;
&lt;p&gt;我一開始的想法會有一個問題，我用例子來解釋：&lt;&#x2F;p&gt;
&lt;p&gt;假設有三個人，三對朋友，分別是&lt;&#x2F;p&gt;
&lt;p&gt;&lt;code&gt;(0, 1), (1, 2), (0,2)&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;p&gt;如果我按照我原本的想法選了 0 之後，1 和 2 就被劃掉了，第二對便不會滿足。&lt;&#x2F;p&gt;
&lt;p&gt;所以到最後我還是只能慢慢地暴搜，到地回最底部再 Check，印象中很快就做出來了。丟上去 Judge ，AC！我超驚訝，因為這題後面 50 分是要解決 TLE 才能拿到的，也許是我練習量多了，我自然而然就會用效率比較好的方式來做，再加上我用了 bit operation 來加速，bit operation 真是個好東西，之後再寫幾篇文章來傳教好了。&lt;&#x2F;p&gt;
&lt;h3 id=&quot;pb-parse-a-boolean-operation-cc-15-22-8-80min&quot;&gt;pB. Parse a boolean operation, CC=15&#x2F;22.8, 80min&lt;&#x2F;h3&gt;
&lt;blockquote&gt;
&lt;p&gt;給予多個 bit opertion 字串，輸出結果，如果語法錯誤則輸出 invalid，直到 EOF。&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;這題想法很簡單，而且他有給提示，我很快就做出來了，範例測資也全對，我送上 Judge ，WA 0。這場考試怎麼那麼令我驚訝啦，只對了 Sample ，令我百思不得其解，一樣 Debug 了三十分鐘才發現是 &lt;code&gt;A &amp;amp;&amp;amp; B&lt;&#x2F;code&gt; 及 &lt;code&gt;A || B&lt;&#x2F;code&gt; 順序的問題，我把 &lt;code&gt;parse()&lt;&#x2F;code&gt; 放在 B 的位置，A 放先前得到的布林，這導致很有可能不會執行 &lt;code&gt;parse()&lt;&#x2F;code&gt; ，就導致錯誤了，修正後便得到 WA 70 了。&lt;&#x2F;p&gt;
&lt;p&gt;考試時間剩下二十分鐘，我已經得了 270 分，累積分數也已經過了學期及格線了，但我還想做出剩下的三十分，也就是要進行 Error Check。我一步一步慢慢找出可能有語法錯誤的地方，隨著時間接近下課，我的心跳愈來愈快，但結果始終都是 WA 70。最後一個 Submit 約在 12:18 ，終於被我找出所有的 Error，成功拿到 AC。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;kao-shi-jie-shu&quot;&gt;考試結束&lt;&#x2F;h2&gt;
&lt;p&gt;我心情極度雀躍，上次破台是第一次，之後成績就慢慢降低，而這次終於又破台了，看來是努力的成果呢！我每題的 CC 都低於真強者的平均，甚至 pB 還低了 7 個 CC ，後來看到成績分布，考試人數 36 ，只有兩個破台，而其中一個就是我，多令人滿足啊。&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;natsucamellia.github.io&#x2F;fourth-programming-test&#x2F;overall.png&quot; alt=&quot;總成績分佈&quot; &#x2F;&gt;
&lt;img src=&quot;https:&#x2F;&#x2F;natsucamellia.github.io&#x2F;fourth-programming-test&#x2F;each.png&quot; alt=&quot;單題成績分佈&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;我愈來愈愛 Judge Girl 了，我正在考慮之後要不要當助教，可以碰後臺，甚至是出題審題，好想要為這個網站貢獻一點。&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="zh-tw">
        <title>債務危機解除、四腳蛇驚魂</title>
        <published>2022-11-22T00:00:00+00:00</published>
        <updated>2022-11-22T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              NatsuCamellia
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://natsucamellia.github.io/money-crisis-over/"/>
        <id>https://natsucamellia.github.io/money-crisis-over/</id>
        
        <content type="html" xml:base="https://natsucamellia.github.io/money-crisis-over/">&lt;h2 id=&quot;zhu-yi-li-bu-ji-zhong&quot;&gt;注意力不集中&lt;&#x2F;h2&gt;
&lt;p&gt;今天早上的我注意力非常不集中，泡牛奶的時候不小心讓奶粉的鋁蓋掉到地上，這一連串的鏗鏘震醒的安靜的房間，我的室友也被影響到了，當下馬上跟他抱歉了，雖然不知道他有沒有聽到，如果真的吵到他我感到非常抱歉。後來準備出門時，我拿起打開水壺喝水，結果水壺的蓋子又掉到地上了，這次的扣喀聲沒有比鋁蓋還響亮，但我覺得吵到室友兩次真的很不應該。&lt;&#x2F;p&gt;
&lt;p&gt;在騎腳踏車到學校的途中，我為了查看後方的來車，結果沒看到前方的腳踏車，於是出了點小車禍，幸好雙方都沒什麼大礙。對方有罵出髒話，結果我因為被嚇到了，所以當下沒有立刻道歉，這點有待改進。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;zhai-wu-wei-ji-de-xi-wang&quot;&gt;債務危機的希望&lt;&#x2F;h2&gt;
&lt;p&gt;計概上到一半我突然想到姑姑的花旗存摺，因為我家那邊的花旗關掉了，導致姑姑沒辦法就近領錢，所以上次國慶日回去的時候，我就順便拿上來，試試看能不能領。於是我準備在吃完午餐到下午三點半的普心課中間的空檔，去一趟花旗銀行領錢，看看能不能解除這個債務危機，這樣家裡也不用匯款給我朋友請他幫我領了。&lt;&#x2F;p&gt;
&lt;p&gt;吃完午餐後，開啟 Google Map ，搜尋富邦銀行，最近的在古亭，從臺大大門大約五分鐘的腳踏車就能到。我走進銀行，有個接待員問我要辦什麼服務，其實我覺得有點不自在，因為我想要自己抽號碼牌就好，但是他都這樣問我了，我只好跟他說我要提款。他為我抽了一張號碼牌後，大約過了一分鐘就輪到我了，我走到櫃檯，業務員一樣問我要辦什麼服務，我真的覺得他們的口氣很不錯，服務很棒。我說我要提款，並拿出了存摺與印章，結果得到的回應是：「這是花旗的存摺，你要去花旗領喔！」，我當下愣了一秒鐘，我回想我在哪裡&lt;del&gt;我是誰&lt;&#x2F;del&gt;，這才想起來我剛剛好像是搜尋富邦銀行，如果你剛剛懷疑過為什麼我是搜尋富邦，那你是對的（笑。我馬上回他說：「不好意思，我記錯了，不好意思。」，他也口氣很好的說沒關係，讓我一點都不覺得羞愧。也許是因為富邦跟花旗都是藍色的，又或者是在開學前，我在研究後來沒用的就學貸款，搜尋了大量的富邦銀行，才導致我要跑花旗，結果不小心跑去富邦了。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;hua-qi-yin-xing&quot;&gt;花旗銀行&lt;&#x2F;h2&gt;
&lt;p&gt;我搜尋最近的花旗銀行，最近的竟然在有點距離東門旁，當下外頭非常熱，又是下午一點，我不想直接騎腳踏車過去，於是我選擇搭捷運。從臺電大樓開始搭，搭到古亭換車再到東門，兩次的捷運都等了好一段時間，也許是離峰時段吧。到了東門，想要借 Ubike ，但是不知道怎麼回事，花旗銀行附近完全沒有還車站，所以我就直接走過去了，也不算太遠，大約三分鐘的路程而已。&lt;&#x2F;p&gt;
&lt;p&gt;走入花旗銀行，一樣是一位接待員接待我，他看起來年紀比較大，也顯得挺老實的。他幫我抽號碼牌後，櫃檯馬上就叫號了。&lt;&#x2F;p&gt;
&lt;p&gt;「我要提款。」&lt;&#x2F;p&gt;
&lt;p&gt;「本人的帳戶嗎？」&lt;&#x2F;p&gt;
&lt;p&gt;「不是。」&lt;&#x2F;p&gt;
&lt;p&gt;「那請問是幫誰領的呢？」&lt;&#x2F;p&gt;
&lt;p&gt;「幫家人領的。」&lt;&#x2F;p&gt;
&lt;p&gt;「你們的關係是什麼呢？」&lt;&#x2F;p&gt;
&lt;p&gt;「姑姑。」&lt;&#x2F;p&gt;
&lt;p&gt;之後那讓我填了提款單，銀行在這方面就做得比較嚴謹了，不知道是不是所有銀行都是這樣的，但花旗身為全球百大企業，這點水準是應該的。我覺得肩上的背包有點重，想要放在地上，服務員跟我說放桌上就好，喔哇，好感度加分。她也仔細地告訴我提款單要填哪些欄位，甚至怕我寫錯字還教我怎麼寫，雖然字我都會寫，但我不排斥別人教我寫字，我也不希望她覺得她在白費力氣，所以我刻意在寫到姑侄時停下，問說侄是什麼部首的。&lt;&#x2F;p&gt;
&lt;p&gt;之後有一大串的流程，看起來作業非常謹慎小心，甚至連操作的應用程式都要另外一個人登入，於是就換成另一個服務員為我服務了。&lt;&#x2F;p&gt;
&lt;p&gt;她問說：「姑姑知道你要領錢嗎？」&lt;&#x2F;p&gt;
&lt;p&gt;我說「知道。」&lt;&#x2F;p&gt;
&lt;p&gt;「她知道你要領多少嗎？」&lt;&#x2F;p&gt;
&lt;p&gt;我這下有點緊張，因為姑姑還真不知道我要領多少，且也不知道我今天要領。&lt;&#x2F;p&gt;
&lt;p&gt;「我們可能要打電話問姑姑喔，她現在可以接電話嗎？」&lt;&#x2F;p&gt;
&lt;p&gt;首先，我覺得直接打過去的話，姑姑有很大的機率會沒接電話，再者，姑姑當初留的電話現在還能用嗎，這也是一個問題。&lt;&#x2F;p&gt;
&lt;p&gt;看到我當下遲疑了一下子，服務員對我說：「還是你要先打電話跟姑姑確認？」&lt;&#x2F;p&gt;
&lt;p&gt;好吧，於是我打開電話簿，尋找家裡的電話撥號，結果過了三十秒都沒有人接，我心都涼了一半，我大老遠跑來這裡不會沒辦法領錢吧？&lt;&#x2F;p&gt;
&lt;p&gt;「先生，不好意思，不用打電話沒關係，我剛剛以為你要領二十萬。」&lt;&#x2F;p&gt;
&lt;p&gt;我鬆了一口氣，那這樣就順利了，接著比較擔心的是，因為這個帳戶已經很久沒有操作了，而且也很久沒刷存摺，不知道銀行會不會還有什麼程序要走。不過最後倒是很順利地就領到錢了，就是服務員幫我刷存摺久了點，還刷到換新摺。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;si-jiao-she-jing-hun&quot;&gt;四腳蛇驚魂&lt;&#x2F;h2&gt;
&lt;p&gt;接著說說普心第二堂發生的事，上課到一半突然有隻四腳蛇（我後來查，疑似叫這個名字）爬了進來，它跳上第一階走道，靜靜地停在原地不動。它的尾巴大約是身體的三倍長，四隻腳的長度都有身體的一半長，看起來非常恐怖，我很怕它會爬到我身上。後來它跳了一下，跳到了第二階，它當下就在我腳左邊，我更加緊張了，但我還是專心地上課。&lt;&#x2F;p&gt;
&lt;p&gt;突然，我感受到有東西碰到了我的腳踝，我瞬間意識到是這隻恐怖的生物爬到我腳上，我反射性地抬起腳，撞到桌子，「碰！」發出了不小的音量，「靠」也同時從我口中小聲地迸出。雖然說成功的將它甩到了旁邊的地上，不過老師上課突然中斷了，我沒有抬起頭來看周遭的情況，我只看著那隻生物，希望它不要再爬過來了，但是我很有把握應該全班都朝著我這邊看來，過了五秒鐘後，老師就繼續上課了。但我在三十分鐘內都沒辦法專心，除了腎上腺素分泌、心跳加速、血壓上升的緣故，我也持續注意那隻生物到底有沒有在我附近徘徊，最後都沒看到了才能安心上課。&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="zh-tw">
        <title>強化的心理素質</title>
        <published>2022-11-21T00:00:00+00:00</published>
        <updated>2022-11-21T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              NatsuCamellia
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://natsucamellia.github.io/evolved-mental-strength/"/>
        <id>https://natsucamellia.github.io/evolved-mental-strength/</id>
        
        <content type="html" xml:base="https://natsucamellia.github.io/evolved-mental-strength/">&lt;p&gt;今天又輪到我在國文課上臺報告了，這次的主題是關係與感受報告，是關於弟弟的事情，文本可以看這裡：&lt;a href=&quot;&#x2F;relative-happiness&quot;&gt;&lt;strong&gt;換來的幸福&lt;&#x2F;strong&gt;&lt;&#x2F;a&gt;。&lt;&#x2F;p&gt;
&lt;p&gt;今天上臺反而沒有像之前那樣緊張，我在臺上能清楚地看見臺下的眼神，以及當我說出哪些句子的時候大家會有反應，不再像上次幾乎只說我自己的內容，而忘記臺下的存在。&lt;&#x2F;p&gt;
&lt;p&gt;國文課之後就是微積分小考了，考前我從容不迫，我還有記得要吃糖果來提升注意力，連續吃了兩顆。考卷發下來之後，發現題目偏難。寫到一半時，我當下清楚，這次考試可能要比第一次慘了，不果想到這裡，我竟然能靜下心來繼續寫接下來的考卷，交卷時還面帶微笑地跟助教說謝謝。&lt;&#x2F;p&gt;
&lt;p&gt;走出教室準備回宿舍，大家都在哀號說題目很難，不知道要怎麼寫，甚至有人說：「我的心態已經被考卷搞沒了」，看起來都很在意成績，我也更加確定考卷是真的有比較難了。不過當下的我完全不在乎考得如何，有種超脫俗世的感覺，我不感到傷心難過，我反倒覺得我的心理素質相比開學已經成長這麼多了，我為此感到喜悅萬分，嘴角止不住地上揚，開心到要哭出來了！&lt;&#x2F;p&gt;
&lt;p&gt;今天終於把原子習慣讀完了，我決定每天要播出十分鐘來寫札記，這個網站才不會荒廢（笑。&lt;&#x2F;p&gt;
&lt;p&gt;另外我在考慮是否要把網站換成我最愛的字體 Noto Serif TC ，但是這會讓網站讀取速度變慢，如果沒刪快取的話就只會影響第一次，但還是會讓我的網站在&lt;a href=&quot;https:&#x2F;&#x2F;pagespeed.web.dev&quot;&gt;&lt;strong&gt;這個分析&lt;&#x2F;strong&gt;&lt;&#x2F;a&gt;中得到比較低的分數，看起來就不開心，要權衡的就是美感與效能了。&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;When camellia blooms in summer, it experiences the authentic warmth.&lt;br&gt;
當山茶花綻放於夏日，便感受到真正的溫暖。&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
</content>
        
    </entry>
    <entry xml:lang="zh-tw">
        <title>金融卡的早夭</title>
        <published>2022-11-18T00:00:00+00:00</published>
        <updated>2022-11-18T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              NatsuCamellia
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://natsucamellia.github.io/death-of-cash-card/"/>
        <id>https://natsucamellia.github.io/death-of-cash-card/</id>
        
        <content type="html" xml:base="https://natsucamellia.github.io/death-of-cash-card/">&lt;p&gt;下午三點，微積分課程結束了，我滿心期待地前往台大小福的「電腦先生」蘋果體驗店，準備購入我目色已久的 IPad 9 。可能是我們班比較早下課，進入店中並沒有其他顧客，我向店員示意後，我便把店中的各種平板看過一遍，電腦也都把玩過一遍，再三考慮之後終於決定要買了。&lt;&#x2F;p&gt;
&lt;p&gt;走出店裡到旁邊的郵局 ATM ，很有趣的是，小福一樓有 Apple 體驗店、郵局、ATM ，讓消費方便很多。我將金融卡插入 ATM ，接著輸入密碼，按下確認。令我震驚的是，ATM 把我的卡片吐出來了！「對不起，你的金融卡無法使用」我當下雖然不緊張，但是後來我重新將卡片插入了約五次，卻總是出現同樣的錯誤訊息。嘗試隔壁的 ATM 、我上次領錢的全家 ATM 都沒辦法領，最後想到可能是晶片髒污的問題，我拿出橡皮擦將晶片擦拭過後也沒能解決問題。&lt;&#x2F;p&gt;
&lt;p&gt;我能做的都做完了，我衝到小福郵局，服務員跟我說我的卡片壞掉了，必須要帶存摺、印章及身分證補發，但問題是存摺跟印章都在雲林，我沒辦法在台北辦。&lt;&#x2F;p&gt;
&lt;p&gt;只能用當初想到的最差方案了，就是媽媽在雲林把錢匯到我室友的戶頭裡，然後再請室友領給我，雖然有點麻煩，但也只能這樣了。&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="zh-tw">
        <title>換來的幸福</title>
        <published>2022-11-12T00:00:00+00:00</published>
        <updated>2022-11-12T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              NatsuCamellia
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://natsucamellia.github.io/relative-happiness/"/>
        <id>https://natsucamellia.github.io/relative-happiness/</id>
        
        <content type="html" xml:base="https://natsucamellia.github.io/relative-happiness/">&lt;blockquote&gt;
&lt;p&gt;我真希望能分享更多生活的美好給弟弟。&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;在我家中有兩個小孩，我以及我的弟弟。從小到大總是玩在一起，感情好的不得了，儘管在我們很小的時候，會因為一些小事而不開心，但是我們絕對不會拳打腳踢傷害對方。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;su-jiao-qia-pian&quot;&gt;塑膠卡片&lt;&#x2F;h2&gt;
&lt;p&gt;有一次，我們兩人各自拿到了一張塑膠小卡，那卡片表面光亮、一塵不染，上面印著很可愛的植物精靈圖案，我很是小心的保護這張卡片，不希望任何刮痕留在卡片上。「借我看看你的卡片，我的也借你看」弟弟說，我當下猶豫了幾秒鐘，我怕弟弟對我的卡片造成任何的損傷，最後我還是交換了。這沒什麼大不了的，弟弟的卡片上已經有一些小刮痕了，萬物都會折損，這是能夠接受的。&lt;&#x2F;p&gt;
&lt;p&gt;「喀拉！」，像是聽到玻璃落地般警戒，轉頭看向聲音傳來的位置，我瞬間意識到是卡片因重力作用撞擊地面發出的聲響，躺平在表面有些許沙粒與灰塵的地板上。我匆忙起身想去撿起我珍愛的卡片，終究是敗在距離，弟弟比我早了一步。蹲下身子嘗試撿起卡片，被媽媽剪短的指甲讓卡片始終爬不上指腹。不斷地嘗試，卡片卻依舊被大氣壓力壓在地上不斷地摩擦，「吱…吱…」，同時我的心也像是被砂紙磨著。心急如焚的我終於來到卡片旁，大拇指抵著此端，中指扶起彼端，翻過卡片，映入眼中的是已被刮花的塑膠片，一分鐘前的光亮平滑已不復存在，頓時心中像是失去了珍貴的寶物，心好痛、好痛。我越是想看清楚我的寶物，眼前便越來越模糊，閉上雙眼嘗試恢復視線的清晰，希望刮痕能夠消失，張開眼不但無事於補，還有兩粒水珠輕撫我的雙頰，從眼角至下巴，安撫我說沒關係。&lt;&#x2F;p&gt;
&lt;p&gt;出於想報復的情緒，交換左右手的卡片，右手隨著憤怒的高漲而上舉，抓著兩面幾乎無損的卡片，用力深吸一口氣，用盡身體的所有力量，隨著吐氣的一瞬間，右臂急速揮下，將卡片重摔在地。不過這只發生在我和弟弟出手打架的平行世界中，在這個世界裡我並沒有這麼做，只生氣並傷心了一個晚上，便讓這件事落幕了。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;xuan-yao&quot;&gt;炫耀&lt;&#x2F;h2&gt;
&lt;p&gt;之後我們不再有任何小衝突，我覺得這是一件很不可思議的事，我們學會彼此尊重，但是距離非但沒有拉開，反而靠得更近了。在學校我總是驕傲地和同學宣揚我和弟弟令人稱羨的情誼，例如當我們發現蛋糕只剩一塊時，便會優先讓給對方，把自己放在二位。我們聊電玩、電腦、課業、人際及一百萬個為什麼，我們也分享喜悅、共度悲傷、傾訴彼此的心事，在這次段考數學粗心算錯一題、未來要選什麼科系才好，即便我們從未向家人提起。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;shuang-shi-jie&quot;&gt;雙十節&lt;&#x2F;h2&gt;
&lt;p&gt;雙十節回家的第二天，「我都沒辦法專心讀書」弟弟拿著爸爸的衣服說，我跟在他後面，一起走下樓，「為什麼？課業太難了嗎？」，「我讀書讀到一半就接到爸爸的電話，說要上廁所，半夜也常常這樣，我都沒睡到覺。」弟弟憤怒卻無奈地說。&lt;&#x2F;p&gt;
&lt;p&gt;愣在樓梯間，我驚覺原來我離開家中，到臺北讀大學，竟然在弟弟肩上添附偌大的壓力。由於媽媽力氣較小，以往都是我和弟弟一起照顧身障的爸爸，如今我不在家裡，弟弟被迫獨自負擔這些事務，造成弟弟讀書和睡眠總是被一通電話打斷。看著弟弟下樓為爸爸洗澡，淚水再度湧出，上次因為弟弟而流淚是什麼時候了呢？「昨天把你的樓梯弄髒了，我去拖地。」自責地走回二樓浴室，拿出拖把桶裝水，將拖把放進桶中浸潤，置於轉輪裡，我比以往更用力地將拖把壓下，以期連同附在拖把上的水，發洩我的情緒。轉輪愈轉愈快，拔起拖把，握在手中的卻僅是拖把的長柄，圓盤仍在桶中恣意地旋轉著。&lt;&#x2F;p&gt;
&lt;p&gt;我在大學念書，弟弟卻在家裡獨自替我承受如此大的壓力，想到這裡，我讀大學中遇到的挫折，根本不足為道，因為有弟弟的付出，我才能有讀大學的機會，我想這就是所謂幸福了。但是幸福不能只有我獨享，為了讓弟弟也能幸福，在未來我一定要盡我所能讓出更多生活的美好給弟弟。&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="zh-tw">
        <title>驚喜總是在意料之外</title>
        <published>2022-11-03T00:00:00+00:00</published>
        <updated>2022-11-03T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              NatsuCamellia
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://natsucamellia.github.io/surprises-are-out-of-expectation/"/>
        <id>https://natsucamellia.github.io/surprises-are-out-of-expectation/</id>
        
        <content type="html" xml:base="https://natsucamellia.github.io/surprises-are-out-of-expectation/">&lt;p&gt;課輔志工，儘管每次我都懶得去，但是每次的課後共學總是充滿驚喜，沒有參加就不會體會到其中的喜悅。每當我踏上歸途，我心中總是想著：我有來參與今天的課輔志工真是太好了，沒參加就太可惜了。&lt;&#x2F;p&gt;
&lt;p&gt;驚喜總是出現在我們的意料之外，如果我們因為無聊而放棄的話，我們將錯過多少驚喜。因此我相信如果我參加了特別的活動，一定會有很棒的驚喜，也一定有令人值得回味的珍貴回憶。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;yao-yue&quot;&gt;邀約&lt;&#x2F;h2&gt;
&lt;p&gt;今天我要參加課輔志工，在這之前我每次都留到七點半參加課後共學，但因為明天有日文期中考，我想要回去複習要考的內容，所以我打算這次就留到六點半就好。&lt;&#x2F;p&gt;
&lt;p&gt;但是就在下午四點左右，課輔志工的領導安安問我說今天會不會留下來？七點半之後要不要去吃飯？因為在所有的大學生中，只有我會留下來課後共學，導致我沒辦法和大家一起吃晚餐，每次都是我自己一個人回去吃。我看到安安的訊息後，我第一時間沒辦法給出答案，一方面我很想久違地和大家吃飯，另一方面我想要回宿舍讀日文。經過幾分鐘的權衡後，我認為和大家一起吃飯是比較重要的，因為我相信，如果我拒絕了這次的邀約，我可能會錯過一些珍貴的回憶與驚喜。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;wan-can&quot;&gt;晚餐&lt;&#x2F;h2&gt;
&lt;p&gt;七點半課輔班結束了，我們離開學校準備去吃飯，正當我們走到門口時，我發現之前和我一起去吃晚餐的阿彥也在，旁邊也站著另一位課輔領導阿祥，這樣我們這個晚餐團就有四個人了！&lt;&#x2F;p&gt;
&lt;p&gt;我們一起撐著雨傘，在微雨中，伴隨著不夜城的霓虹與車流，走在人行道上聊著天，此刻是如此快樂愜意，我真想在後方的地面上放著一台攝影機，就這樣靜靜的錄著我們四人的背影。&lt;&#x2F;p&gt;
&lt;p&gt;我們又到了永康街，找了一家臺南餐館坐了下來，我們各自點了一些餐點，之後我們聊了很多。我們聊到了網路的世代差異，現在的國中生非常仰賴網路，並且沈浸在社群媒體中，吸收了大量低品質的資訊，例如抖音等等的短影片，讓他們的時間都花在這裡，讀書的時間自然就少了許多。之後我們還聊了很多感性的話題，在這裡聊天非常溫暖，我多希望時間凍結，讓世界停止在這一幀。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;dao-gao&quot;&gt;禱告&lt;&#x2F;h2&gt;
&lt;p&gt;最後吃完晚餐、聊完天後，不知不覺已經過了一個小時，安安信仰基督教，他在活動結束時都會為我們禱告。我閉上眼睛，雙手合十，雖然我的雙耳能夠聽見永康街人聲吵雜，但是這一刻我的心是寧靜的。禱告中，他將我們所遇到的困難，就算是我不經意告訴他的事，他也放進禱告中，希望上帝能賜予我們力量，並讓我們身體健康。&lt;&#x2F;p&gt;
&lt;p&gt;聽到一半時心情很感動，我能夠聽出安安對我和阿彥有多麽了解，竟然有這麼一個人會記得我所受到的挫折，即便對他而言微不足道，甚至還為我禱告，希望我能過得順利。&lt;&#x2F;p&gt;
&lt;p&gt;後來安安為我們買單，我當天剛好點了不少，超過一百塊，我真的非常感謝他。&lt;&#x2F;p&gt;
&lt;p&gt;我們揮手道別，阿彥也是臺大生，同樣都住男一社，我便和阿彥一起騎回宿舍。過程中我們聊了很多各自以往發生的故事，我也說出我最近在課業上遇到的挫折與壓力，說出來後心情好了不少，我覺得有人能夠傾訴心事真的太幸福了。&lt;&#x2F;p&gt;
&lt;p&gt;我覺得，今天有留下來吃晚餐真是太好了，如果我選擇回去宿舍讀書，我將錯失今天的驚喜，那未免太可惜了。&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;When camellia blooms in summer, it witnesses the seasons.&lt;br&gt;
當山茶花綻放於夏日，便見證了四季。&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
</content>
        
    </entry>
    <entry xml:lang="zh-tw">
        <title>期中考週</title>
        <published>2022-10-31T00:00:00+00:00</published>
        <updated>2022-10-31T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              NatsuCamellia
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://natsucamellia.github.io/midterm-week/"/>
        <id>https://natsucamellia.github.io/midterm-week/</id>
        
        <content type="html" xml:base="https://natsucamellia.github.io/midterm-week/">&lt;p&gt;臺大從今年開始，每個學期減少為十六週，而這週是學期的第八週，是期中考週。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;pu-tong-xin-li-xue&quot;&gt;普通心理學&lt;&#x2F;h2&gt;
&lt;p&gt;首先是星期二普通心理學的期中考，這是我的第一場期中考。考前幾個禮拜，教授說考題不會太難，每個人都可以拿到八九十分，只要有好好看上課的投影片。而到了期中考當天，我認為考題並沒有如教授所說的簡單，甚至可以說是困難，有著大量的細節題，我認為全班的平均可能會只有六十分。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;pu-tong-wu-li-xue&quot;&gt;普通物理學&lt;&#x2F;h2&gt;
&lt;p&gt;接著是星期三的普通物理學，一樣的情況，考前教授也表示題目不難。這次我是相信教授的，因為教授說他都出課本和作業的習題，這也是為什麼不給我們 Open book 的原因。考試當天，題目只有五六題，每題確實都如教授所說的，都是出自於課本及作業的習題，雖然我都沒有看過這些題目，不過題目都不會太過複雜，都算是簡單，但我還是有幾題寫不出來。考試後我挺懊悔的，這麼簡單的問題我都拿不到分數，無可反駁地，就是我準備不足，我難得被題目打得心服口服。不過之後我又回到原本的想法了，那就是我認為有及格就好，況且作業佔比四十，我相信這樣下去一定沒有問題。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;wei-ji-fen&quot;&gt;微積分&lt;&#x2F;h2&gt;
&lt;p&gt;週六是微積分考試，這一天是我印象最深刻的一天。考場並不在平常上課的新生教學館，反而是在普通教學館。考前大家都聚集在考場前，考場外貼著座位分配表，我彷彿回到了大考，緊張的籠罩整個考場。入座後十分鐘，時間到了九點鐘，考試開始，我快速瀏覽整份題本，總共七大題，看起來難度都不高。我從第一題開始寫，第一題就埋了一個陷阱，是關於絕對值和正負號的陷阱，因為我寫得較慢，我才得以發現它。考試時間為兩個小時半，跳過了一些比較麻煩的問題，寫完一輪後，時間剩下超過一個小時，我又仔細地從最前面寫到最後面，把跳過的問題補齊，簡單檢查寫完的題目。在考試的最後我總共放掉了十分，沒意外的話成績會不錯！&lt;&#x2F;p&gt;
&lt;h2 id=&quot;xin-de&quot;&gt;心得&lt;&#x2F;h2&gt;
&lt;p&gt;經過了這次期中考後，我對於努力與收穫的比例有概略性的了解了，也大致上知道了每個科目考試的難度，這樣我以後就可以調整在每個科目上投注的心力，來得到我最滿意的結果。先前的焦慮有一部份來自於對考試的不確定，現在總算是可以全心投入學習了。&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="zh-tw">
        <title>探索與書寫，上臺分享</title>
        <published>2022-10-24T00:00:00+00:00</published>
        <updated>2022-10-24T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              NatsuCamellia
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://natsucamellia.github.io/exploration-writing-sharing/"/>
        <id>https://natsucamellia.github.io/exploration-writing-sharing/</id>
        
        <content type="html" xml:base="https://natsucamellia.github.io/exploration-writing-sharing/">&lt;h2 id=&quot;qian-yan&quot;&gt;前言&lt;&#x2F;h2&gt;
&lt;p&gt;這篇文章是關於國文課探索與書寫的上臺演講，建議先閱讀文稿：&lt;a href=&quot;&#x2F;exit-comfort-zone&quot;&gt;&lt;strong&gt;跨出舒適圈，找尋自我&lt;&#x2F;strong&gt;&lt;&#x2F;a&gt;。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;shang-tai-qian&quot;&gt;上臺前&lt;&#x2F;h2&gt;
&lt;p&gt;前一位同學的分享尚未結束，我的腎上腺素已經開始分泌，讓我的呼吸變得急促，心跳加速且愈跳愈用力，彷彿我的血管隨時都有可能被撐破。這位同學的報告我沒法仔細聽，儘管我嘗試靜下心來理解這些語句，但是生理的反射性緊張實在讓我辦不到這件事。&lt;&#x2F;p&gt;
&lt;p&gt;分享結束了，老師簡單地對這位同學做了一點回饋，接著唸出下一位上臺分享的同學名字。我收起雙腳，身體向前傾，準備從座位上站起，但是出乎我意料之外的是：那個從老師口中被唸出的姓名竟然不是我的名字。這下可好，我得要再緊張十分鐘了。&lt;&#x2F;p&gt;
&lt;p&gt;接著這位上臺分享的同學是資工系一年級，也就是我的同學，但是我卻無法從我的腦海中尋得這張面孔。分享的過程中，他突然問了一個問題：十隻手指可以數到多少？這個問題我以前研究過，對於每隻手指，可以分為折與不折，有兩種可能性，十隻手指就有 2&lt;sup&gt;10&lt;&#x2F;sup&gt; 種的可能性，所以可以數 1024 個數字。在這個問題脫口而出的兩秒內，我回答了 1024 。他笑得很開心，說我的答案是正確的；我笑的更開心，這是資工系的浪漫，研究這種沒有意義的問題卻能得到快樂，我也因為這樣而稍微放鬆了，舒緩了我緊張的心情。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;tai-shang&quot;&gt;臺上&lt;&#x2F;h2&gt;
&lt;p&gt;這位同學報告完之後，終於輪到我上臺了，我抬頭挺胸，挺有自信的，打開檔案、拿起麥克風，試了一下音量便直接開始了。&lt;&#x2F;p&gt;
&lt;p&gt;我沙盤推演了好多次，打開 PPT 按下從第一頁開始播放，腦中想像上臺的畫面，整個環境的氛圍，臺下同學給我的目光，同時我也需注意時間，儘管我有好多內容想要分享，我也不能超出太多時間。為此我也刪減了不少內容，只求精簡扼要。&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;大家午安，我今天要各位分享的主題是：從我高中到大學，我跨出舒適圈，尋找自我的故事。&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;我放慢語速，謹慎小心地將每個文字說出口，盡量在每個句子之間加上適當的停頓，好緩和我的情緒，利用這段時間對我將要說出的句子稍加整理，希望能讓我的演講聽起來更加有條理，並減少冗言贅字的產生。&lt;&#x2F;p&gt;
&lt;p&gt;也許是經過多次的演練，也可能是我把注意力全放在我說出的一字一句，我並沒有非常注意我講到哪一部份，但是卻能順暢地進行下去。&lt;&#x2F;p&gt;
&lt;p&gt;隨著我的演講進行，我意識到這股奇特的感覺，我的意識彷彿脫離我的身體，我能夠以第三人稱看著正在演講的我。想著接下來要說的句子，看著臺下的同學們，我的嘴巴自動傳達著我的想法；聽著說出的言語，什麼時候變得這麼會演講了？每個句子都充滿著抑揚頓挫，也有恰到好處的節奏與停頓。我覺得我的大腦不需要做其他事，唯獨稍微排序接下來要說的話就可以了，我神奇地完全不感一絲緊張。&lt;&#x2F;p&gt;
&lt;p&gt;演講結束，得到滿堂掌聲，也許每位上臺的講者得到的掌聲都是相同而充滿熱情的，但是當演講結束後，對任何人而言都是振奮人心而令人溫暖的。下課後走出教室，天色微暗，周遭校舍燈光點綴了我的世界，忽地一陣寒風迎面拂來，我不覺冷，拿著每位同學寫給我的暖心回饋單，整個人都變得充滿力量，反而感到涼快，離開教室的腳步都變得輕盈，嘴角肯定也微微上揚了吧。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;nuan-xin-hui-kui-dan&quot;&gt;暖心回饋單&lt;&#x2F;h2&gt;
&lt;p&gt;打開三十出頭張的暖心回饋單，期待能收到一些關於演講技術層面的回饋，但令我意外地，並沒有任何一張說到我該如何改善我的演講，反而大家都是為我打氣加油，也有不少表示能了解我的處境，因為自己也是遇到同樣的情況。&lt;&#x2F;p&gt;
&lt;strong&gt;
我真的好感動，我快要哭出來了。
&lt;&#x2F;strong&gt;
&lt;blockquote&gt;
&lt;p&gt;夢想是慢慢尋找出來的，我也仍在尋找自己的夢想，很開心聽到你跨出舒適圈，慢慢發掘生活中的目標！&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;我媽媽是雲林人，她說雲林的孩子都很自卑但很努力，但離開雲林後才發現自己其實沒那麼糟。要加油喔～&lt;br &#x2F;&gt; &amp;gt; 其實大家都覺得別人是怪物，也都被作業追著跑啦～&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;加油，你已經很厲害了，我是分科碰巧上政治系，我完全跟不上其他同學，但我從以前成績就沒有很好，所以沒有太大的期待，希望你以後可以實現自己的夢想。&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;沒事沒事！慢慢適應大學生活！自己進步就好是很棒的想法，畢竟人外有人，祝你能順利度過也能過得充實。&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;學測快滿級根本超猛！！心態很讚！！加油加油！！目標超讚！！期待！！&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;我現在也是船到橋頭自然直的理念。既然近來臺大了你就是很優秀的人！祝福你投入教育的路能順利！也恭喜你找到喜歡的領域！&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;來到臺大真的會認識到世界上有很多怪物，不過真的不用和他們比，只要維持自己的讀書規劃就好，大家微積分一起加油！&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;你很棒，懂的分享知識（大拇指 x100）&lt;br&#x2F;&gt;
要不，就把「怪物」當朋友吧！&lt;br&#x2F;&gt;
我覺得我自己是...求學是我與知識的關係，知識界中，我沒有對手，只有求學路上的夥伴。&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;謝謝你的分享，我有時候也會對自己不自信...我也還在調整中。加油！一起努力！我們能來到這裡一定是有原因的～&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;跨出舒適圈真的好難 QAQ&lt;br&#x2F;&gt;
我覺得來到這個地方，比起追求成為第一，更多的是創造自己的唯一。&lt;br&#x2F;&gt;
所以，放寬心去探索自己吧！&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;不用擔心，一切都能慢慢來。未來的路很長，不必現在把一切搞定。&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
</content>
        
    </entry>
    <entry xml:lang="zh-tw">
        <title>XOR 消除法</title>
        <published>2022-10-23T00:00:00+00:00</published>
        <updated>2022-10-23T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              NatsuCamellia
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://natsucamellia.github.io/xor-trick/"/>
        <id>https://natsucamellia.github.io/xor-trick/</id>
        
        <content type="html" xml:base="https://natsucamellia.github.io/xor-trick/">&lt;p&gt;在解題的時候，有人使用最標準的思路來解題，我們稱之為 Best Practice；但也有人用較為特殊的技巧或想法來快速解題，雖然這可能不是題目最先設計的用意，但是它卻能有效率的解決問題，當中也有一些值得學習的小技巧。&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;給予一個包含 n-1 個數字的陣列，範圍為 [1, n] ，所有數字都恰好出現一次，除了一個遺失的數字，請找出這個數字。&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;當然，我們有很多直觀的解法來解決這個問題，但是讓我們來看看 XOR 能如何巧妙地解決這道題目吧。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;xor&quot;&gt;XOR&lt;&#x2F;h2&gt;
&lt;p&gt;XOR 是一個用於位元的邏輯運算子，一般而言用 &lt;code&gt;^&lt;&#x2F;code&gt; 表示，如果兩個位元不同就回傳 &lt;code&gt;1&lt;&#x2F;code&gt; ，反之則回傳 &lt;code&gt;0&lt;&#x2F;code&gt;。&lt;&#x2F;p&gt;
&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;x&lt;&#x2F;th&gt;&lt;th&gt;y&lt;&#x2F;th&gt;&lt;th&gt;x ^ y&lt;&#x2F;th&gt;&lt;&#x2F;tr&gt;&lt;&#x2F;thead&gt;&lt;tbody&gt;
&lt;tr&gt;&lt;td&gt;0&lt;&#x2F;td&gt;&lt;td&gt;0&lt;&#x2F;td&gt;&lt;td&gt;0&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;0&lt;&#x2F;td&gt;&lt;td&gt;1&lt;&#x2F;td&gt;&lt;td&gt;1&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;1&lt;&#x2F;td&gt;&lt;td&gt;0&lt;&#x2F;td&gt;&lt;td&gt;1&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;1&lt;&#x2F;td&gt;&lt;td&gt;1&lt;&#x2F;td&gt;&lt;td&gt;0&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;&#x2F;tbody&gt;&lt;&#x2F;table&gt;
&lt;p&gt;許多的程式語言會將&lt;code&gt;^&lt;&#x2F;code&gt;實作成位元運算子，讓 XOR 能對每個位元進行運算，例如：&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;java&quot; style=&quot;background-color:#eff1f5;color:#4f5b66;&quot; class=&quot;language-java &quot;&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;0011 &lt;&#x2F;span&gt;&lt;span&gt;^ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;1010 &lt;&#x2F;span&gt;&lt;span&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;1001
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;因為：&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;java&quot; style=&quot;background-color:#eff1f5;color:#4f5b66;&quot; class=&quot;language-java &quot;&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;0 &lt;&#x2F;span&gt;&lt;span&gt;^ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;1 &lt;&#x2F;span&gt;&lt;span&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;1
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;0 &lt;&#x2F;span&gt;&lt;span&gt;^ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;0 &lt;&#x2F;span&gt;&lt;span&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;0
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;1 &lt;&#x2F;span&gt;&lt;span&gt;^ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;1 &lt;&#x2F;span&gt;&lt;span&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;0
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;1 &lt;&#x2F;span&gt;&lt;span&gt;^ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;0 &lt;&#x2F;span&gt;&lt;span&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;1
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;因為有了這個特性，我們不只可以將 XOR 應用在布林值，我們甚至可以用在任何物件上。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;guan-yu-xor-de-te-xing&quot;&gt;關於 XOR 的特性&lt;&#x2F;h2&gt;
&lt;p&gt;我們可以從先前的定義演繹出一些關於 XOR 的特性，我們先逐一了解這些特性，並接著使用它們來解決問題。&lt;&#x2F;p&gt;
&lt;h3 id=&quot;dui-0-zuo-xor-x-0-x&quot;&gt;對 0 做 XOR： &lt;code&gt;x ^ 0 = x&lt;&#x2F;code&gt;&lt;&#x2F;h3&gt;
&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;x&lt;&#x2F;th&gt;&lt;th&gt;y&lt;&#x2F;th&gt;&lt;th&gt;x ^ y&lt;&#x2F;th&gt;&lt;&#x2F;tr&gt;&lt;&#x2F;thead&gt;&lt;tbody&gt;
&lt;tr&gt;&lt;td&gt;0&lt;&#x2F;td&gt;&lt;td&gt;0&lt;&#x2F;td&gt;&lt;td&gt;0&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;1&lt;&#x2F;td&gt;&lt;td&gt;0&lt;&#x2F;td&gt;&lt;td&gt;1&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;&#x2F;tbody&gt;&lt;&#x2F;table&gt;
&lt;h3 id=&quot;dui-zi-ji-zuo-xor-x-x-0&quot;&gt;對自己做 XOR： &lt;code&gt;x ^ x = 0&lt;&#x2F;code&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;這個很直觀，根據定義，兩個一樣的位元做 XOR 會回傳 &lt;code&gt;0&lt;&#x2F;code&gt;。&lt;&#x2F;p&gt;
&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;x&lt;&#x2F;th&gt;&lt;th&gt;y&lt;&#x2F;th&gt;&lt;th&gt;x ^ y&lt;&#x2F;th&gt;&lt;&#x2F;tr&gt;&lt;&#x2F;thead&gt;&lt;tbody&gt;
&lt;tr&gt;&lt;td&gt;0&lt;&#x2F;td&gt;&lt;td&gt;0&lt;&#x2F;td&gt;&lt;td&gt;0&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;1&lt;&#x2F;td&gt;&lt;td&gt;1&lt;&#x2F;td&gt;&lt;td&gt;0&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;&#x2F;tbody&gt;&lt;&#x2F;table&gt;
&lt;h3 id=&quot;jiao-huan-lu-x-y-y-x&quot;&gt;交換律： &lt;code&gt;x ^ y = y ^ x&lt;&#x2F;code&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;XOR 滿足交換律，也就是說我們可以任意交換 XOR 的順序，因為我們是要比較兩個位元是否相異，順序不重要。要證明交換律成立很簡單，我們只要檢查 &lt;code&gt;x ^ y&lt;&#x2F;code&gt; 和 &lt;code&gt;y ^ x&lt;&#x2F;code&gt; 的 Truth table 就可以了。&lt;&#x2F;p&gt;
&lt;table&gt;&lt;thead&gt;&lt;tr&gt;&lt;th&gt;x&lt;&#x2F;th&gt;&lt;th&gt;y&lt;&#x2F;th&gt;&lt;th&gt;x ^ y&lt;&#x2F;th&gt;&lt;th&gt;y ^ x&lt;&#x2F;th&gt;&lt;&#x2F;tr&gt;&lt;&#x2F;thead&gt;&lt;tbody&gt;
&lt;tr&gt;&lt;td&gt;0&lt;&#x2F;td&gt;&lt;td&gt;0&lt;&#x2F;td&gt;&lt;td&gt;0&lt;&#x2F;td&gt;&lt;td&gt;0&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;0&lt;&#x2F;td&gt;&lt;td&gt;1&lt;&#x2F;td&gt;&lt;td&gt;1&lt;&#x2F;td&gt;&lt;td&gt;1&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;1&lt;&#x2F;td&gt;&lt;td&gt;0&lt;&#x2F;td&gt;&lt;td&gt;1&lt;&#x2F;td&gt;&lt;td&gt;1&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;tr&gt;&lt;td&gt;1&lt;&#x2F;td&gt;&lt;td&gt;1&lt;&#x2F;td&gt;&lt;td&gt;0&lt;&#x2F;td&gt;&lt;td&gt;0&lt;&#x2F;td&gt;&lt;&#x2F;tr&gt;
&lt;&#x2F;tbody&gt;&lt;&#x2F;table&gt;
&lt;h2 id=&quot;xor-yun-suan-de-xian-xiang&quot;&gt;XOR 運算的現象&lt;&#x2F;h2&gt;
&lt;p&gt;結合以上幾個特性，我們可以得到一個非常有用的技巧：&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;XOR 消除法：如果我們有一連串的 XOR 運算 &lt;code&gt;a ^ b ^ c ^ …&lt;&#x2F;code&gt; ，我們可以消除每一對重複的數字，而不影響運算結果。&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;消除法的中心思想是：我們先運用交換律交換運算順序，再利用 &lt;code&gt;x ^ x = 0&lt;&#x2F;code&gt; 的性質來消除每一對重複的數字。&lt;&#x2F;p&gt;
&lt;p&gt;讓我們來看看一個例子：&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;java&quot; style=&quot;background-color:#eff1f5;color:#4f5b66;&quot; class=&quot;language-java &quot;&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span&gt;  a ^ c ^ d ^ b ^ d ^ c ^ a
&lt;&#x2F;span&gt;&lt;span&gt;= a ^ a ^ c ^ c ^ d ^ d ^ b  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a7adba;&quot;&gt;&#x2F;&#x2F; 交換律
&lt;&#x2F;span&gt;&lt;span&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;0 &lt;&#x2F;span&gt;&lt;span&gt;^ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;0 &lt;&#x2F;span&gt;&lt;span&gt;^ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;0 &lt;&#x2F;span&gt;&lt;span&gt;^ b              &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a7adba;&quot;&gt;&#x2F;&#x2F; x ^ x = 0
&lt;&#x2F;span&gt;&lt;span&gt;= b                          &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a7adba;&quot;&gt;&#x2F;&#x2F; x ^ 0 = x
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;並且因為 &lt;code&gt;^&lt;&#x2F;code&gt; 是位元運算子，這個技巧不管 &lt;code&gt;a&lt;&#x2F;code&gt; , &lt;code&gt;b&lt;&#x2F;code&gt; , &lt;code&gt;c&lt;&#x2F;code&gt; , &lt;code&gt;d&lt;&#x2F;code&gt; 是什麼資料型態都可以使用。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;ying-yong-yi-jiao-huan-liang-ge-shu-zi&quot;&gt;應用一：交換兩個數字&lt;&#x2F;h2&gt;
&lt;p&gt;在解決找出遺失數字的問題前，我們先來看看這個問題&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;交換兩個數字，而不使用額外的變數。&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;這看起來有點棘手，但是我們可以透過 XOR 輕鬆完成：&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;java&quot; style=&quot;background-color:#eff1f5;color:#4f5b66;&quot; class=&quot;language-java &quot;&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span&gt;x ^= y
&lt;&#x2F;span&gt;&lt;span&gt;y ^= x
&lt;&#x2F;span&gt;&lt;span&gt;x ^= y
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;看起來有點神奇對吧，但是它是真的可以辦到交換兩數的，我們透過拆解每個步驟，註解中表示每一行執行完之後 &lt;code&gt;(x, y)&lt;&#x2F;code&gt; 的值，來看看它到底是如何完成的：&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;java&quot; style=&quot;background-color:#eff1f5;color:#4f5b66;&quot; class=&quot;language-java &quot;&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span&gt;x ^= y &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a7adba;&quot;&gt;&#x2F;&#x2F; (x ^ y, y)
&lt;&#x2F;span&gt;&lt;span&gt;y ^= x &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a7adba;&quot;&gt;&#x2F;&#x2F; (x ^ y, y ^ x ^ y) =&amp;gt; (x ^ y, x)
&lt;&#x2F;span&gt;&lt;span&gt;x ^= y &lt;&#x2F;span&gt;&lt;span style=&quot;color:#a7adba;&quot;&gt;&#x2F;&#x2F; (x ^ y ^ x, x) =&amp;gt; (y, x)
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;我們可以發現，這其實只是使用我們先前導出的一些特性而已。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;ying-yong-er-zhao-chu-yi-shi-de-shu-zi&quot;&gt;應用二：找出遺失的數字&lt;&#x2F;h2&gt;
&lt;p&gt;我們終於要來解決一開始的題目了，我們重新來看看題目：&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;給予一個包含 n-1 個數字的陣列，範圍為 [1, n] ，所有數字都恰好出現一次，除了一個遺失的數字，請找出這個數字。&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;當然，我們有很多解法來解決這個問題，但是讓我們用學到的新玩具 XOR 來解決這道題目。&lt;&#x2F;p&gt;
&lt;p&gt;我們知道 XOR 可以消除重複出現的元素，但是如果我們只是對每個元素 XOR ，我們就沒辦法運用消除的這個特性，因為每個元素只出現最多一次。&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;java&quot; style=&quot;background-color:#eff1f5;color:#4f5b66;&quot; class=&quot;language-java &quot;&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span&gt;a[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span&gt;] ^ a[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span&gt;] ^ ... ^ a[n-&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;2&lt;&#x2F;span&gt;&lt;span&gt;]
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;請注意因為我們只有 &lt;code&gt;n-1&lt;&#x2F;code&gt; 個元素，所以最後一個索引值是 &lt;code&gt;n-2&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;p&gt;那該怎麼辦呢，如同前總統馬英九所說的：&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;一個便當吃不夠，你可以吃兩個。&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;所以呢？&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;一個元素 XOR 不夠，你可以 XOR 兩個。&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;讓我們也把 1 到 n XOR 進去：&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;java&quot; style=&quot;background-color:#eff1f5;color:#4f5b66;&quot; class=&quot;language-java &quot;&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;1 &lt;&#x2F;span&gt;&lt;span&gt;^ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;2 &lt;&#x2F;span&gt;&lt;span&gt;^ ... ^ n ^ a[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span&gt;] ^ a[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span&gt;] ^ ... ^ a[n-&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;2&lt;&#x2F;span&gt;&lt;span&gt;]
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;我們會得到一個這樣的 XOR 序列：&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;給定的數字都會出現兩次：
&lt;ul&gt;
&lt;li&gt;其中一次在我們 XOR 進去的 1 到 n 之中。&lt;&#x2F;li&gt;
&lt;li&gt;另一次在給定的陣列中。&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;遺失的數字只會出現一次：
&lt;ul&gt;
&lt;li&gt;我們 XOR 進去的 1 到 n 之中。&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;如果我們把這些全部 XOR 起來，給定的數字會因為出現兩次而被消除，得益於 XOR 消除法；而遺失的數字只出現一次，不會被消除。也就是說結果會剩下遺失的數字，也就是題目所求的答案。&lt;&#x2F;p&gt;
&lt;p&gt;用程式碼表現，大概會像這個樣子：&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;java&quot; style=&quot;background-color:#eff1f5;color:#4f5b66;&quot; class=&quot;language-java &quot;&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;public int &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;findMissing&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;int[]&lt;&#x2F;span&gt;&lt;span&gt; array, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;int&lt;&#x2F;span&gt;&lt;span&gt; n) {
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;int&lt;&#x2F;span&gt;&lt;span&gt; missing = &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;for &lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;int&lt;&#x2F;span&gt;&lt;span&gt; i = &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span&gt;; i &amp;lt;= n; i++) {
&lt;&#x2F;span&gt;&lt;span&gt;        missing ^= i;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;for &lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;int&lt;&#x2F;span&gt;&lt;span&gt; i : array) {
&lt;&#x2F;span&gt;&lt;span&gt;        missing ^= i;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;return&lt;&#x2F;span&gt;&lt;span&gt; missing;
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;觀察這段程式碼，可能讓人不懂背後的演算法原理，但是我們知道了 XOR 消除法後，我們會發現其實是非常簡單的概念。但是我不推薦把這段程式碼拿給別人看，因為他會需要了解這個技巧才能知道這段程式碼的想法。&lt;&#x2F;p&gt;
&lt;h3 id=&quot;tui-guang-zhi-suo-you-zi-liao-xing-tai&quot;&gt;推廣至所有資料型態&lt;&#x2F;h3&gt;
&lt;p&gt;我們也可以運用這個演算法在各種資料型態上，尋找缺失的元素，只要符合以下條件：&lt;&#x2F;p&gt;
&lt;ol&gt;
&lt;li&gt;給定出現過的元素&lt;&#x2F;li&gt;
&lt;li&gt;給定所有元素&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;p&gt;我們就能套用在任何一種資料型態上，例如：&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;我們有所有 &lt;code&gt;Person&lt;&#x2F;code&gt; 的集合，就可以找出缺失的 &lt;code&gt;Person&lt;&#x2F;code&gt; 。&lt;&#x2F;li&gt;
&lt;li&gt;我們有所有節點的集合，就可以找出缺失的節點。&lt;&#x2F;li&gt;
&lt;li&gt;就算不是連續整數，只要我們有所有整數的集合，和出現過的整數，我們就能找到缺失的整數。&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;lian-xi-zhao-chu-zhong-fu-de-shu-zi&quot;&gt;練習：找出重複的數字&lt;&#x2F;h2&gt;
&lt;blockquote&gt;
&lt;p&gt;給予一個包含 n+1 個數字的陣列，範圍為 [1, n] ，所有數字都恰好出現一次，除了一個重複的數字出現了兩次，請找出這個數字。&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
</content>
        
    </entry>
    <entry xml:lang="zh-tw">
        <title>Stack 堆疊</title>
        <published>2022-10-20T00:00:00+00:00</published>
        <updated>2022-10-20T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              NatsuCamellia
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://natsucamellia.github.io/stack/"/>
        <id>https://natsucamellia.github.io/stack/</id>
        
        <content type="html" xml:base="https://natsucamellia.github.io/stack/">&lt;p&gt;Stack 是一種基礎的資料結構，可以拿堆盤子來幫助想像，它的特性是：&lt;&#x2F;p&gt;
&lt;ol&gt;
&lt;li&gt;只能在堆疊的最上方新增或刪除元素&lt;&#x2F;li&gt;
&lt;li&gt;後進先出（Last in first out, LIFO）&lt;&#x2F;li&gt;
&lt;li&gt;最上方稱為 Top ，底部稱為 Bottom&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;p&gt;操作有：&lt;&#x2F;p&gt;
&lt;ol&gt;
&lt;li&gt;Push，新增元素&lt;&#x2F;li&gt;
&lt;li&gt;Pop，拿出元素&lt;&#x2F;li&gt;
&lt;li&gt;Peak，查看最上方的元素&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;p&gt;此外，Java 標準函式庫也有 Stack。&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;ruby&quot; style=&quot;background-color:#eff1f5;color:#4f5b66;&quot; class=&quot;language-ruby &quot;&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span&gt;import java.util.Stack;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;宣告方法為：&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;ruby&quot; style=&quot;background-color:#eff1f5;color:#4f5b66;&quot; class=&quot;language-ruby &quot;&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Stack&lt;&#x2F;span&gt;&lt;span&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;T&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt; stack = &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;new &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Stack&lt;&#x2F;span&gt;&lt;span&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;T&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;();
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;hr &#x2F;&gt;
&lt;h2 id=&quot;1-class&quot;&gt;1. Class&lt;&#x2F;h2&gt;
&lt;p&gt;首先，先建立 Stack Class。&lt;&#x2F;p&gt;
&lt;p&gt;我們需要一個陣列來放元素，同時也需要一個數字告訴我們容量才能建立陣列。此外我們還需要一個 Flag 來紀錄最上方元素的 Index。&lt;&#x2F;p&gt;
&lt;p&gt;先新增 Stack 的屬性：&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;ruby&quot; style=&quot;background-color:#eff1f5;color:#4f5b66;&quot; class=&quot;language-ruby &quot;&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;public &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;class &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;Stack &lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;private&lt;&#x2F;span&gt;&lt;span&gt; int capacity;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;private&lt;&#x2F;span&gt;&lt;span&gt; int data[];
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;private&lt;&#x2F;span&gt;&lt;span&gt; int top = -&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;加入 Constructor：&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;ruby&quot; style=&quot;background-color:#eff1f5;color:#4f5b66;&quot; class=&quot;language-ruby &quot;&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;public &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Stack&lt;&#x2F;span&gt;&lt;span&gt;(int capacity) {
&lt;&#x2F;span&gt;&lt;span&gt;    this.capacity = capacity;
&lt;&#x2F;span&gt;&lt;span&gt;    data = &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;new&lt;&#x2F;span&gt;&lt;span&gt; int[capacity];
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;我們可以開始實作功能了。&lt;&#x2F;p&gt;
&lt;hr &#x2F;&gt;
&lt;h2 id=&quot;2-functions&quot;&gt;2. Functions&lt;&#x2F;h2&gt;
&lt;p&gt;首先，我們先實作 Push 來加入元素：&lt;&#x2F;p&gt;
&lt;ol&gt;
&lt;li&gt;把 top 往上移，指到一個空位&lt;&#x2F;li&gt;
&lt;li&gt;把元素填進去這個空位&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;pre data-lang=&quot;ruby&quot; style=&quot;background-color:#eff1f5;color:#4f5b66;&quot; class=&quot;language-ruby &quot;&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;public&lt;&#x2F;span&gt;&lt;span&gt; void push(int element) {
&lt;&#x2F;span&gt;&lt;span&gt;    data[++top] = element;
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;接著實作 Pop：&lt;&#x2F;p&gt;
&lt;ol&gt;
&lt;li&gt;回傳最上方的元素&lt;&#x2F;li&gt;
&lt;li&gt;把 top 往下移，讓下面那個元素成為 top&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;pre data-lang=&quot;ruby&quot; style=&quot;background-color:#eff1f5;color:#4f5b66;&quot; class=&quot;language-ruby &quot;&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;public&lt;&#x2F;span&gt;&lt;span&gt; int pop() {
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;return&lt;&#x2F;span&gt;&lt;span&gt; data[top--];
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;實作 Peak：&lt;&#x2F;p&gt;
&lt;ol&gt;
&lt;li&gt;回傳最上方的元素&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;pre data-lang=&quot;ruby&quot; style=&quot;background-color:#eff1f5;color:#4f5b66;&quot; class=&quot;language-ruby &quot;&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;public&lt;&#x2F;span&gt;&lt;span&gt; int peak() {
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;return&lt;&#x2F;span&gt;&lt;span&gt; data[top];
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;hr &#x2F;&gt;
&lt;h2 id=&quot;3-state&quot;&gt;3. State&lt;&#x2F;h2&gt;
&lt;p&gt;由於我們可能在多次 Push Pop 之後可能會忘記 Stack 裝了多少元素，還有多少空間，可能會導致 Stack 滿了仍繼續 Push 產生 Overflow，或是 Stak 空了仍繼續 Pop 產生 Underflow，所以我們引入幾個 State Getter 來取得 Stack 的容量情況。&lt;&#x2F;p&gt;
&lt;ol&gt;
&lt;li&gt;isFull&lt;&#x2F;li&gt;
&lt;li&gt;isEmpty&lt;&#x2F;li&gt;
&lt;li&gt;size&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;pre data-lang=&quot;ruby&quot; style=&quot;background-color:#eff1f5;color:#4f5b66;&quot; class=&quot;language-ruby &quot;&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;public &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Boolean&lt;&#x2F;span&gt;&lt;span&gt; isFull() {
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;return&lt;&#x2F;span&gt;&lt;span&gt; this.top == this.capacity - &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;public &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Boolean&lt;&#x2F;span&gt;&lt;span&gt; isEmpty() {
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;return&lt;&#x2F;span&gt;&lt;span&gt; this.top == -&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;public&lt;&#x2F;span&gt;&lt;span&gt; int size() {
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;return&lt;&#x2F;span&gt;&lt;span&gt; top + &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;hr &#x2F;&gt;
&lt;h2 id=&quot;code&quot;&gt;Code&lt;&#x2F;h2&gt;
&lt;pre data-lang=&quot;ruby&quot; style=&quot;background-color:#eff1f5;color:#4f5b66;&quot; class=&quot;language-ruby &quot;&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;public &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;class &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;Stack &lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;private&lt;&#x2F;span&gt;&lt;span&gt; int capacity;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;private&lt;&#x2F;span&gt;&lt;span&gt; int data[];
&lt;&#x2F;span&gt;&lt;span&gt;    int top = -&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;    &lt;&#x2F;span&gt;&lt;span&gt;&#x2F;&#x2F; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Constructor
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;public &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Stack&lt;&#x2F;span&gt;&lt;span&gt;(int capacity) {
&lt;&#x2F;span&gt;&lt;span&gt;        this.capacity = capacity;
&lt;&#x2F;span&gt;&lt;span&gt;        data = &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;new&lt;&#x2F;span&gt;&lt;span&gt; int[capacity];
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;    &lt;&#x2F;span&gt;&lt;span&gt;&#x2F;&#x2F; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Push
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;public&lt;&#x2F;span&gt;&lt;span&gt; void push(int element) {
&lt;&#x2F;span&gt;&lt;span&gt;        data[++top] = element;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;    &lt;&#x2F;span&gt;&lt;span&gt;&#x2F;&#x2F; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Pop
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;public&lt;&#x2F;span&gt;&lt;span&gt; int pop() {
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;return&lt;&#x2F;span&gt;&lt;span&gt; data[top--];
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;    &lt;&#x2F;span&gt;&lt;span&gt;&#x2F;&#x2F; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Peak
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;public&lt;&#x2F;span&gt;&lt;span&gt; int peak() {
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;return&lt;&#x2F;span&gt;&lt;span&gt; data[top];
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;    &lt;&#x2F;span&gt;&lt;span&gt;&#x2F;&#x2F; isFull
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;public &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Boolean&lt;&#x2F;span&gt;&lt;span&gt; isFull() {
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;return&lt;&#x2F;span&gt;&lt;span&gt; this.top == this.capacity - &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;    &lt;&#x2F;span&gt;&lt;span&gt;&#x2F;&#x2F; isEmpty
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;public &lt;&#x2F;span&gt;&lt;span style=&quot;color:#bf616a;&quot;&gt;Boolean&lt;&#x2F;span&gt;&lt;span&gt; isEmpty() {
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;return&lt;&#x2F;span&gt;&lt;span&gt; this.top == -&lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#96b5b4;&quot;&gt;    &lt;&#x2F;span&gt;&lt;span&gt;&#x2F;&#x2F; size
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#8fa1b3;&quot;&gt;public&lt;&#x2F;span&gt;&lt;span&gt; int size() {
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#b48ead;&quot;&gt;return&lt;&#x2F;span&gt;&lt;span&gt; top + &lt;&#x2F;span&gt;&lt;span style=&quot;color:#d08770;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
</content>
        
    </entry>
    <entry xml:lang="zh-tw">
        <title>到底是「臺灣」還是「台灣」</title>
        <published>2022-10-17T00:00:00+00:00</published>
        <updated>2022-10-17T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              NatsuCamellia
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://natsucamellia.github.io/different-words-of-taiwan/"/>
        <id>https://natsucamellia.github.io/different-words-of-taiwan/</id>
        
        <content type="html" xml:base="https://natsucamellia.github.io/different-words-of-taiwan/">&lt;p&gt;最近我在用 Macbook 打文章時，輸入「台大」預設都是用「台」這個字，我現在連續輸入多次「台大」後選成「臺大」才被我訓練成「臺」這個預設。&lt;&#x2F;p&gt;
&lt;p&gt;由於我以前手寫都堅持寫筆畫比較多的「臺」，不管是臺灣、上臺或是臺北，因為「台」給我一種草率的感覺。但是我現在打字就很麻煩，對於每一個有「台」的詞彙，我都要手動修正成「臺」，真的很花時間。我不禁想，到底為什麼要用台？以及正確用法到底是要用哪一個字？&lt;&#x2F;p&gt;
&lt;p&gt;我在網路上找了一些資料，歷史上而言，以前都是用「臺」，符合造字法則。後來到清朝小說才開始用「台」假借。考量「臺」字「觀四方之高處」的本義，教育部目前規定用「臺」，目的是為了保存形構歷史、形體之美，但是考試寫「台」也不扣分。也有人認為兩個字給人的感覺不同，甚至有設計上的考量。&lt;&#x2F;p&gt;
&lt;p&gt;由於我對漢字的形體之美有堅持，且寫多一點筆畫也給人不草率的印象，因此我之後一律都寫「臺」，除非真的太多「台」改不過來，或是像這篇文章一樣有必要用途。&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="zh-tw">
        <title>課業方針</title>
        <published>2022-10-17T00:00:00+00:00</published>
        <updated>2022-10-17T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              NatsuCamellia
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://natsucamellia.github.io/study-strategy/"/>
        <id>https://natsucamellia.github.io/study-strategy/</id>
        
        <content type="html" xml:base="https://natsucamellia.github.io/study-strategy/">&lt;p&gt;今天發生了很多事，我有好多的想法，趁早記錄下來。&lt;&#x2F;p&gt;
&lt;p&gt;今天早上是計程考試，第一題簡單通過，一次就 AC ，快到題目都忘了。&lt;&#x2F;p&gt;
&lt;p&gt;第二題是實作 Max heap ，題目敘述給的落落長，竟然要叫我們當場實作出 Max heap 。對於非資訊競賽出身的我，自然是難度偏高，不過敘述裡面有給 Pseudo code ，還算是能做得出來，一次 RE 因為 heap 開太小，第二次就 AC 了。&lt;&#x2F;p&gt;
&lt;p&gt;而第三題比較曲折，我做完第一題後，看到第二題的敘述太長，我就跑去做第三題，我做了三十分鐘都做不出來，才回頭做第二題。第三題敘述有說用 heap 做，不過我當時不知道第二題就是 heap ，我就沒有管題目的建議了，今天讓我學到，跳題目時也要注意題組的問題。&lt;&#x2F;p&gt;
&lt;p&gt;好，回到解題，第三題我用了比較麻煩且耗時的方法，因為我在考試中想不到更好的方法了，我實作並提交，永遠都是得到 TLE 50 ，題目給分有說，前五十分是數字比較小的，後五十分數字偏大，需要用 heap 才能避免 TLE ，儘管我用了 heap ，但是沒有做變化，導致還是很花時間，仍然得到 TLE。&lt;&#x2F;p&gt;
&lt;p&gt;這次的考試得到了 250 &#x2F; 300 ，算是還不錯的成績，我突然覺得好像考試能超過 60 就滿足了，怎麼這麼頹廢呢。&lt;&#x2F;p&gt;
&lt;p&gt;下午有個小故事，我三點去上國文課，走到教室門口發現裡面在上課，我覺得很奇怪，我們這堂課之前是沒有課的，還是我跑錯教室了？我打開手機查看，確定是這間教室沒有錯。過沒多久就聽到老師的聲音，我驚覺原來是我記錯時間了，是下午兩點的課才對。下課後我去補點名，被扣了出席成績三分，不過因為出席成績一百分只占學期總成績的 15% 而已，因此這三分無傷大雅，卻很有教訓的功用。&lt;&#x2F;p&gt;
&lt;p&gt;國文課聽了其他人的報告分享，突然覺得我在大學期間應該要多多享受生活，不要只是讀書。我冒出了一個大膽的想法，每一個科目我的目標只要能及格就好，只要我能學到東西，考試如何無所謂，畢竟在這裡競爭吃力又不討好，更何況畢業證書是長一樣的。那找工作的時候怎麼辦？我認為若把先前準備考試的心力拿去學習新技術，這些我課外學習的技能應該會是工作比較需要的。&lt;&#x2F;p&gt;
&lt;p&gt;來到微積分考試，說也奇怪，微積分和計程總是同時考試。多虧於先前的努力，這次的考試我覺得比較得心應手了，看到題目的一瞬間就有想法了，第三大題出了我超級喜歡的 MVT 。整題而言我寫的非常有自信，應該有八成左右的成績。&lt;&#x2F;p&gt;
&lt;p&gt;考完試心中壓力減輕許多，回到宿舍和室友聊了不少，也聊到了對於課業的看法。會計室友表示他的目標是 A+，外文室友說有及格就好，喜歡的再努力拚成績。我認同外文室友的看法，因此我決定了日後的方針。&lt;&#x2F;p&gt;
&lt;p&gt;知識努力學，考試簡單準備，可以及格就好。省下的時間可以去練吉他、學日文、學程式新技術，學自己喜歡的，也會比較開心。但這也可能是一種逃避、不想讀書的藉口罷了。&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="zh-tw">
        <title>跨出舒適圈，找尋自我</title>
        <published>2022-10-16T00:00:00+00:00</published>
        <updated>2022-10-16T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              NatsuCamellia
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://natsucamellia.github.io/exit-comfort-zone/"/>
        <id>https://natsucamellia.github.io/exit-comfort-zone/</id>
        
        <content type="html" xml:base="https://natsucamellia.github.io/exit-comfort-zone/">&lt;h2 id=&quot;qian-yan&quot;&gt;前言&lt;&#x2F;h2&gt;
&lt;p&gt;這篇文章是國文課探索與書寫的文稿，這個報告分為兩部分，文稿（本篇）與上臺演講：&lt;a href=&quot;&#x2F;exploration-writing-sharing&quot;&gt;&lt;strong&gt;探索與書寫，上臺分享&lt;&#x2F;strong&gt;&lt;&#x2F;a&gt;。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;zheng-wen&quot;&gt;正文&lt;&#x2F;h2&gt;
&lt;p&gt;我很幸運，從小就是班上的第一名，直到高中。因此也很自然地，高中升大學時我憑藉著校排的優勢，順利透過繁星上了台大。表面看來光鮮亮麗，背後卻是一段自我蛻變的過程。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;gao-zhong-shi-qi&quot;&gt;高中時期&lt;&#x2F;h2&gt;
&lt;p&gt;我畢業於麥寮高中，這是一所位於雲林海線的社區高中，升學成績不甚好。在我國三時，我看準了這點，如果我在高中成績能保持在前段，利用繁星推薦一定會讓我升大學更加容易，於是我選擇直升麥寮高中。&lt;&#x2F;p&gt;
&lt;p&gt;高中三年我的成績保持得很好，學期成績幾乎都是九十分以上，由於我的成績在校內特別突出，因此在段考時我總是毫無懸念地穩坐校排一，但心中卻沒有任何成就感，我甚至感到不自信。這像是總在新手村打史萊姆升級，但是卻不知道能攻略哪些頭目。我不知道自己是否有能力和他校的學生競爭，我無從得知他校學生的實力，只能從老師們的口中得知他校的競爭力很強，成績不是偏鄉的社區高中可以比較的。由於這句話被重複多次，已經深烙在我心底，我理所當然地認為我就是比不上其他學校的學生，差距永遠追不上。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;gu-bu-zi-feng&quot;&gt;故步自封&lt;&#x2F;h2&gt;
&lt;p&gt;儘管我在學測拿到接近滿級分的成績，是校史中最好的一次，我卻依然沒有自信。準備繁星時我非常保守，志願序是清華、交通、成功的資工系，從來沒有考慮過台大。因為我認為台大的學生都是天才，課程內容也會比較困難，我在台大肯定會吊車尾，導致我失去最後的自信心，從此放棄唸書。&lt;&#x2F;p&gt;
&lt;p&gt;正式填繁星的前夕，學校的老師找我討論，他對我說：「以你的成績完全可以上台大，甚至可以上台大醫學系，你是非常有競爭力的，要對自己有信心。況且重考也不一定有如此好的成績，一生也只有這一次用繁星的機會，下次就沒有了。」&lt;&#x2F;p&gt;
&lt;p&gt;我花了好幾天認真考慮，我很害怕落榜，失去了這次完美的機會，亦或是上了台大卻失去讀書的動力。但後來我想通了這個道理，既然我的成績可以上台大，代表我有相當的競爭力，不是每個都市學校的學生能力都比我好，我有資格自信。我也深知我不填台大只是因為我習慣當第一名了，不想離開溫暖的舒適圈，不過既然都要成為大學生了，第一名與否已經不重要了，重要的是能夠學到多少，學校有多少資源讓我學習才是最重要的。&lt;&#x2F;p&gt;
&lt;p&gt;最後，我透過繁星上了台大，但這只是一切的開端。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;you-yi-duan-bo-zhe&quot;&gt;又一段波折&lt;&#x2F;h2&gt;
&lt;p&gt;儘管我已有足夠的自信，現實依舊存在難以克服的課題。課業負擔倍增，難度較高中難上了不少。考試不再像高中一樣簡單輕鬆，每一題都具有相當的挑戰性。第一次的微積分小考我只拿了一半的分數，分數低於班平均。普通物理學課堂上大家都會微分甚至積分，我卻不知道老師在做什麼天文數學。城鄉差距忠實地呈現在我的眼前，我在高中學到的知識遠少於身邊的同學。&lt;&#x2F;p&gt;
&lt;p&gt;此外，由於我獨自一人來到台大，自然身邊沒有以前的朋友，上課、交通、吃飯、活動都是自己一個人。我擔心以後沒有人脈，因此我想要認識新朋友，但是每個人的課表都不同，長期相處不容易，就算我去找別人聊天，日後也不會再次對話，交朋友不再如往日般容易。&lt;&#x2F;p&gt;
&lt;p&gt;從雲林來到台北，從鄉村到都市，從朋友環繞到孤身一人，從第一名到普通人，這些變化同時襲來，剛開學的我突然迷失方向，我頓時不知道我為什麼讀書，我的目標究竟是什麼。&lt;&#x2F;p&gt;
&lt;p&gt;但是我是個正向思考的人，我要想辦法來解決問題。我決定照著我的步調來唸書就好，我可以花比別人還要多的時間和努力，考試盡力，只要沒被當掉都還能接受；交朋友不必勉強，緣份到了自然就會有朋友了。&lt;&#x2F;p&gt;
&lt;p&gt;但是我還是沒解決為什麼要讀書這個問題，以及我的目標到底是什麼。我已經讀了十二年的書，只是個普通人，任何興趣嗜好都沒有，如果我現在又重新讓自己陷入這個輪迴，我大學畢業將會成為一個只會讀書寫程式的工程師，任何娛樂、才藝也沒有。我開始思考究竟除了讀書外，我真正想要的到底是什麼。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;zhao-xun-zi-wo&quot;&gt;找尋自我&lt;&#x2F;h2&gt;
&lt;p&gt;在我思索之時，我從系上的電子郵件得知一個課輔志工計畫，我回想起小時候另外一個夢想是當老師。我熱愛幫助他人，教育是一條絕佳的途徑，也是很有意義的事情，因此我決定去參加這個計畫。每週三的傍晚，我都會到台大附近的國中教國中生。我從他們身上反思人生各個階段的目標是什麼，我是否已經成為他們的榜樣了，在教學的過程中，我自己反而學到了更多。&lt;&#x2F;p&gt;
&lt;p&gt;為了成為特別的人，回想我小時候的夢想，其中之一就是學鋼琴，但是現在沒有那麼多的時間，學了以後可能也沒空彈，加上學費和鋼琴又昂貴。後來我發現我喜歡的不只是鋼琴，而是音樂。因此我可以學一個較簡單、價格平價，又較能自學的樂器。因緣際會之下，我最後的選擇了古典吉他，並加入了古典吉他社，開始培養一項才藝。&lt;&#x2F;p&gt;
&lt;p&gt;除了這個計畫，我還想要回到高中教學弟妹們寫程式，因為我高中的時候沒有老師願意教程式，也許是認為偏鄉學生的能力不足，這就造成了城鄉差距。但我相信程式這種能力，只要肯學習、肯努力，都是一定會有成果的，我想要讓偏鄉的學生也能學習程式。&lt;&#x2F;p&gt;
&lt;p&gt;就在教師節那天晚上入睡前，我解決了室友關於程式方面的知識，我發現，當我在教導他人的時候我會感到很滿足、有成就感。我突然找到了其中的共同點，第一，我在高中可以教導同學問題，那時的我生活是很充實的；第二，我發自內心想要當課輔志工；第三，教導室友程式問題時很有成就感。綜合這些線索，我已經找到我的目標了：「我要為教育貢獻心力」。&lt;&#x2F;p&gt;
&lt;p&gt;我很慶幸我選擇了台大，來到台大後，我成長了不少。從高中時期對自己的不自信，到現在能夠肯定自我；高中毫無目的地唸書，現在卻以教育為目標而努力著。上台大對我而言無非是跨出舒適圈，甚至已經接近危機圈了，但是幸好我當時能夠跨出那一步，我才能肯定自己、超越自己、找到自我的價值，我也開始尋找自己的興趣，並培養自己喜歡的才藝；更重要的是，我不再擔心未來會發生什麼事，因為那必將能帶領我跨出舒適圈，突破自我，並更加了解自己。&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="zh-tw">
        <title>國慶同學會</title>
        <published>2022-10-08T00:00:00+00:00</published>
        <updated>2022-10-08T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              NatsuCamellia
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://natsucamellia.github.io/national-day-classmate-meet/"/>
        <id>https://natsucamellia.github.io/national-day-classmate-meet/</id>
        
        <content type="html" xml:base="https://natsucamellia.github.io/national-day-classmate-meet/">&lt;p&gt;幾天前我還在台北的時候，高中同學突然說要在麥寮的餐廳開同學會，當下只是覺得反正有空，不如去一下好了。後來昨天主辦的同學宣布每個人出的錢從 300 變成 500。我心中開始有點不想去了，吃一頓飯竟然要 500 ，實在是太貴了。但是今天我還是抱持著不去可能會後悔的心態參加了。&lt;&#x2F;p&gt;
&lt;p&gt;到了餐廳後，裡面包括我只有四個人，我頓時覺得冷清，加上再五分鐘就到我們預定的上菜時間了，我害怕到最後不但沒辦法湊到預計的 20 人，甚至可能連 10 人都湊不滿。如果真的是這樣，那我們該怎麼處理預定好的兩桌呢？&lt;&#x2F;p&gt;
&lt;p&gt;幸好大家漸漸都來了，總共來了 19 個人，只有一個有行程沒辦法來。我對這個景象覺得很感動，大家都願意播出時間，就算價錢突然在前一天被提高了，也依然出現在這裡。&lt;&#x2F;p&gt;
&lt;p&gt;我們邊吃飯邊聊著在大學發生的事，大家的故事都很特別，聽到了很多神奇的事件。突然覺得，有一群朋友能夠互相吐訴在外地生活的大小事，真的很開心，特別是因為我到台北沒有原鄉的朋友，沒人能和我有同樣的感受。&lt;&#x2F;p&gt;
&lt;p&gt;吃完飯後，我們遲遲在餐廳內不肯離去。我們希望能聊更多，聊聊這陣子到底發生了什麼事。對我而言最重要的事，我能夠和這些同學們互相嘴砲講幹話，是多麽幸福的一件事，必須是要很熟的同學才辦得到，而如今在台北我還沒找到能夠隨意聊天的朋友。&lt;&#x2F;p&gt;
&lt;p&gt;我們終於離開餐廳，走到餐廳外我們還是捨不得離開，於是我們決定來拍一張大合照，希望能夠留下珍貴的紀念。我們請餐廳的工作人員為我們拍照，我們拍了好幾張才肯罷休。&lt;&#x2F;p&gt;
&lt;p&gt;之後大家就散會了，這時我突然覺得欣慰，大家都騎自己的機車來，有的人甚至還開車，令我回想起以前大家出門都必須要靠父母接送，而現在都能自己出門了，這就是長大了吧！大家都獨立了，在外地自己唸書、自己生活並打理大小事，我們不再需要依賴父母，我們正式長大了。&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="zh-tw">
        <title>課輔志工行前訓練</title>
        <published>2022-09-30T00:00:00+00:00</published>
        <updated>2022-09-30T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              NatsuCamellia
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://natsucamellia.github.io/volunteer-training/"/>
        <id>https://natsucamellia.github.io/volunteer-training/</id>
        
        <content type="html" xml:base="https://natsucamellia.github.io/volunteer-training/">&lt;p&gt;這個課輔志工計畫叫做「金華國中 99 學堂」，是一個由叫做「活力校園」的非營利教育團隊與「金華國中家長會」所主辦。目標是希望能夠幫助學生成績進步、找到個人特質與專長，讓學生建立良好的自信與自我價值。&lt;&#x2F;p&gt;
&lt;p&gt;而在下週的第一次服務前，我們必須先參加行前訓練，時間訂在今天的晚上七點半到九點。&lt;&#x2F;p&gt;
&lt;p&gt;晚上六點半我從宿舍出門，我決定搭公車前往。本該是往和平高中搭的，結果卻因為每次都是往公館搭，導致我下意識直接走到對面，且因為超長的紅燈時間，導致我錯過了最快的一班公車。我重新找了 Google 地圖，發現我似乎只能去和平公園搭了。我走了一段路到達和平高中，恰巧剛好有公車靠站，看見此況我立刻衝上去，幸好是有趕上公車，雖然搭下一班也沒問題就是了。&lt;&#x2F;p&gt;
&lt;p&gt;公車坐到目標站之後，我按照得到的地址，走到了類似一個公寓的地方。一進門看到三個電梯，其中兩個只能往上，剩下那個可以上下，但是卻寫著「運貨電梯、緊急使用」。但是很明顯的地址是給我 B2 ，於是我就搭了這個運貨電梯。&lt;&#x2F;p&gt;
&lt;p&gt;到了 B2 ，眼前完全不像是可以集會的地方，過低而充滿壓迫感的天花板，爬滿了管線，和停車場給的感覺很相似。我尋找入口，找到了一個像緊急逃生門的門，裡面有很多歡笑的聲音，也有小孩子的笑聲。我嘗試敲門，但是這扇門卻因為太厚重，抑或是裡面太吵雜，聲音似乎無法傳進去。我打開志工群組，表示我已經到 B2 了，才有工作人員來幫我開門。&lt;&#x2F;p&gt;
&lt;p&gt;原來，正常來說我不應該走這個入口的，他們表示有一個更大的入口在建築的另一邊。我其實很困惑，為什麼會有兩個入口，一個入口不就可以了嗎？在鄉下我從來沒聽過這種事。&lt;&#x2F;p&gt;
&lt;p&gt;新來的志工初估有二十人，有三個和我同桌，他們都是台大物理。他們表示物理系的服務學習可以用這個抵免，是其中的一個選項。我們台大資工都沒有人那就是代表這個並不存在於選項之內，不過聽工作人員表示，我之後還是可以拿去抵服務學習。&lt;&#x2F;p&gt;
&lt;p&gt;主辦方為大家準備了飲料，全部都是「杏仁凍五味茶」，喝起來個感覺只能說他們買得很大膽。然後還有蛋塔和一些餅乾，算是還不錯。&lt;&#x2F;p&gt;
&lt;p&gt;首先我們先了解如何快速和國中生變熟，他們給的方法是尋找共同點。為了練習，我們要先在同桌的六個人（包括主辦方的兩個人）中找到三個共同點，不能是「都是男生」、「都是大學生」這種身份類的。我們找到了「喜歡音樂」、「都打過三劑疫苗」，卻找不出第三個，確實很困難呢，不過這樣確實能和大家縮短距離，是很棒的方法！&lt;&#x2F;p&gt;
&lt;p&gt;接著我們討論一些問題，例如說國中生不想讀書怎麼辦？這是一個一定會遇到的問題，但是基於團隊考量，我們不能說讀書不重要，我們必須要想盡辦法讓他們有動力讀書。還有很多其他問題，但大方向就是自己不能解決就找工作人員這樣子。&lt;&#x2F;p&gt;
&lt;p&gt;回到宿舍前的空地，我抬頭看天空。天空是亮的，可以清楚看到雲的輪廓，臺北果然是不夜城。有個小問題是，在臺北無雲的夜晚，抬頭能看見星星嗎？&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="zh-tw">
        <title>愛現大會</title>
        <published>2022-09-28T00:00:00+00:00</published>
        <updated>2022-09-28T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              NatsuCamellia
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://natsucamellia.github.io/showing-show/"/>
        <id>https://natsucamellia.github.io/showing-show/</id>
        
        <content type="html" xml:base="https://natsucamellia.github.io/showing-show/">&lt;p&gt;今天是教師節，我原本想要對每個老師發送訊息的，但是想想這樣我可能會同時開啟太多對話，我沒有時間回覆就不好了。到最後我只在高中班導的教師節貼文中留言，我會在國慶連假的前夕回去高中找他，應該要買一些伴手禮回去，想到以前歷史老師好像說要買什麼檸檬塔之類的，之後再問問她好了。&lt;&#x2F;p&gt;
&lt;p&gt;下午三點半有我上週預約的輔導諮商，我進入學輔室的時候挺不自在的，裡面好像幼稚園的氛圍，精緻溫馨，又有點悠閒。之後學輔專員開始問我一些有關我剛上大學的一些事，我提出包括課業壓力、交友壓力等。他告訴我一些有關課業的方面該怎麼解決，也給我一些資源運用。交友方面則是慢慢來，這種事不能強求。我也告訴他我想要回到高中，檢視高中所缺乏的資源，運用我所學來幫助學弟妹。學輔專員表示聽到我有這樣的想法很開心。&lt;&#x2F;p&gt;
&lt;p&gt;現在沒有當時的情緒了，好多東西都寫不出來，就寫到這吧。&lt;&#x2F;p&gt;
&lt;p&gt;晚上在系館有愛現大會的表演，這個活動是讓大一新生能夠有一個表演的舞台，演出內容不拘。&lt;&#x2F;p&gt;
&lt;p&gt;這次有很多「酷酷的表演」，例如說表演用單手拍手、上台吃辣麵、兩個人相聲裝弱，甚至還有表演甩槍，這都是和我以前在雲林看到的表演不一樣。以前我總是認為表演只有唱歌、跳舞、演奏樂器而已。喔，寫到這裡我突然想到，以前在高中時我想要在三年內上台表演，但是到最後我卻忘記了，希望能夠找一個機會回去圓夢，或許回去教程式就是一個不錯的方法。&lt;&#x2F;p&gt;
&lt;p&gt;接著還有很多臺北才子的表演，有組樂團，裡面有人彈吉他，有人彈貝斯、還有人彈電子琴，每個人都有才藝。而我卻什麼也不會，我害怕以後什麼才藝都沒有，因此我才參加了古典吉他社，這是我最後學樂器的機會了，我不能再拖延了。&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="zh-tw">
        <title>微積分小考</title>
        <published>2022-09-26T00:00:00+00:00</published>
        <updated>2022-09-26T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              NatsuCamellia
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://natsucamellia.github.io/calculus-test/"/>
        <id>https://natsucamellia.github.io/calculus-test/</id>
        
        <content type="html" xml:base="https://natsucamellia.github.io/calculus-test/">&lt;p&gt;今天是第一次的微積分小考&lt;&#x2F;p&gt;
&lt;p&gt;考卷發下來後，我從寫名字就開始緊張了，手抖以致連名字些微寫歪&lt;&#x2F;p&gt;
&lt;p&gt;我首先看第一大題，是極限的題目，但是都不太好求，實際上需要不少步驟。當下的我心中也清楚，自己頭腦正因為緊張而混亂，可能會在簡單的地方出錯，我可能需要冷靜。但那時緊張到我連冷靜都辦不到，我就這樣一直寫下去。&lt;&#x2F;p&gt;
&lt;p&gt;我當時穿著外套，這種感覺像極了學測寫數 A 的時候，大腦因快速運算而導致耗氧量劇增，心跳增快，血液循環也跟著加速。全身體溫快速上升，連耳朵都感到灼熱。一樣的問題，我迫於時間的壓力，連脫外套都不想做，連冷靜下來思考這動作不會佔用多少時間都辦不到，我就這樣燒著腦寫了整份考卷。&lt;&#x2F;p&gt;
&lt;p&gt;考完之後不太對勁，因為每議題都因為時間的壓力，做完沒有檢查就接著下題了。考完當下覺得成績會非常難看，可能只有一半的分數。&lt;&#x2F;p&gt;
&lt;p&gt;騎車回宿舍時，心中一直覺得我的微積分要沒救了，可能其他科目的狀況也會是這個樣子。就這樣一直持續到我洗澡的時候，我認知到我正在悲觀思考，不能再繼續下去了。我決定來排定一下讀書時間，以實際行動來改變現況，這才會是最好的做法。&lt;&#x2F;p&gt;
&lt;p&gt;不過當我洗澡完，我完全沒有心來做這件事，因此我打開 osu! 一直玩到將近九點，再和高中同學討論程式直到十一點才睡覺。&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="zh-tw">
        <title>重整旗鼓、社團迎新</title>
        <published>2022-09-23T00:00:00+00:00</published>
        <updated>2022-09-23T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              NatsuCamellia
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://natsucamellia.github.io/restart-club-welcome-party/"/>
        <id>https://natsucamellia.github.io/restart-club-welcome-party/</id>
        
        <content type="html" xml:base="https://natsucamellia.github.io/restart-club-welcome-party/">&lt;p&gt;9&#x2F;20、9&#x2F;21 回家辦點事，過了兩天，其中有好多課程都沒有上到，因此我必須邊讀新內容，同時一邊補足我這兩天缺少的內容。&lt;&#x2F;p&gt;
&lt;p&gt;這實際上是一件挺困難的事情，就上課時數而言，這兩天總共有九堂課，要在短時間內自學並吸收完這些內容，首先要有時間，再者有問題也無法及時發問。&lt;&#x2F;p&gt;
&lt;p&gt;心理上壓力也很大，看著待辦清單被要自習的內容填滿，又有新的事項填上，彷彿是無止盡的讀書才能完全清除。&lt;&#x2F;p&gt;
&lt;p&gt;對了，9&#x2F;19 交到的新朋友表示他有在寫 Javascript ，他是學來寫網頁的。我便問他要怎麼管理無止盡增加下去的 HTML ，他框架是很棒的東西，推薦 React。我打算之後還是得借助科技的力量，不然我的網頁會變得難以管理，搞不好就無法經營下去了。&lt;&#x2F;p&gt;
&lt;p&gt;今天中午聽了國泰金控的說明會，內容是 DDT，Digital Data Technology，大致上是在說資料科學如何與金融業合作，建造出一個嶄新的金融體系。最後是招募實習生環節，不過因為我現在是大一壓力比較大、時間比較少，加上我的背景知識還不足，因此我可能不會考慮任何的實習機會。&lt;&#x2F;p&gt;
&lt;p&gt;在這場說明會開始以前，主辦方發給每個人一份餐點，紅茶、花生吐司和蛋土司，還挺不錯的，直接省下一頓午餐。&lt;&#x2F;p&gt;
&lt;p&gt;而因為這場演講到 2:00 ，因此微積分第一堂課我沒有去上，不過課程都會有錄影，因此影響不大。&lt;&#x2F;p&gt;
&lt;p&gt;晚上我去參加社團的迎新，學長首先表演了三首曲子，分別是現代、近代、和古典，說明古典吉他能夠演奏不同曲風的音樂。而社團的老師也表演了一些曲目，雖然曲子聽起來並沒有比學長演奏的更驚豔，不過每個音的細節都非常細緻，幾乎沒有錯誤。令我意外的是，老師現在在台大醫院工作，以前也是台大生，他說他二十二年前也是在這個社團，這個社團真是歷史悠久呢，不知道以後能不能繼續經營下去。&lt;&#x2F;p&gt;
&lt;p&gt;接著學長讓我們新成員都拿一把「社琴」，讓我們熟悉演奏吉他的正確姿勢，不過我喬了一晚還是沒有喬到最舒服的姿勢，同時手的姿勢我也還沒矯正好。我今天稍微彈了基本的指法，算是小有成就感，之後應該會繼續練下去。&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="zh-tw">
        <title>計程破台，回家！</title>
        <published>2022-09-19T00:00:00+00:00</published>
        <updated>2022-09-19T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              NatsuCamellia
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://natsucamellia.github.io/programming-course-full-point/"/>
        <id>https://natsucamellia.github.io/programming-course-full-point/</id>
        
        <content type="html" xml:base="https://natsucamellia.github.io/programming-course-full-point/">&lt;p&gt;今天是計程第一次考試，我早早就到系館地下室，發現 Virus 在大一區坐著，我跟他問候並坐到他旁邊，他也關心我的考試，讓我有朋友的感覺。&lt;&#x2F;p&gt;
&lt;p&gt;我在三十分鐘前到電腦教室準備，環境都沒問題，而坐到我左邊的同學對於輸入測資上有點意外，我幫助他解決這個問題，他也向我道謝，幫助他人真的非常有成就感，果然助人為快樂之本。&lt;&#x2F;p&gt;
&lt;p&gt;當計時開始，我馬上點開第一道題目，看過發現題目其實挺簡單，可以在時間內做完。我慢慢地將程式碼完成，上傳後等待圓圈轉動，「WA 80」。我當下有點緊張，不過我回去看題目，原來是我沒考慮到一個變數等於零的特殊情況，稍加修改之後就 AC 了。&lt;&#x2F;p&gt;
&lt;p&gt;第二題一次就 AC 了，非常順利。而第三題則想了一點時間，也是一次就 AC ，但是 CC 是 5，雖說在考試允許的範圍內，但是離真強者平均的 2. 多還有點距離，我當下想要把他往下壓至少 1 CC，不過問題太多我就放棄了。&lt;&#x2F;p&gt;
&lt;p&gt;我提早離開教室，回到地下室，發現 Virus 正坐在裡面，他問我破台了嗎並恭喜我。我問他要怎麼把第三題的 CC 壓到 2，我聽完他的說明後，馬上打開筆電重寫一個程式碼，不到半小時的時間，我就成功寫出 2 CC 的程式碼了。&lt;&#x2F;p&gt;
&lt;p&gt;原本我決定是明天早上要回家，但是微積分是助教課，而且沒有考試，所以我打算跳過這堂課，提早在今天回家。&lt;&#x2F;p&gt;
&lt;p&gt;五點國文課提早下課，我到學生餐廳慢慢吃完晚餐後，回到宿舍整理東西，時間很快就到六點了。走到基隆長興路口搭公車時，發現手機程式給的資訊是自來水處站的。我自己查長興路口的公車，他說還要四分鐘才會到，結果我抬頭一看，公車已經來了。我急忙衝上公車，相信就是這班公車不會錯了。過了好多紅燈，我到了公館捷運站，搭了捷運、換乘、來到台北車站。我憑藉著上一次南下的記憶，很快就找到了高鐵售票口與月台，在搭車前的十五分鐘就已經在月台準備好了。&lt;&#x2F;p&gt;
&lt;p&gt;我買高鐵票的時候問售票員有沒有靠窗的位子，結果還真的讓我能坐在窗邊，並且因為這班高鐵是七點出發的，可以坐在窗邊看夜景，是我上次北上來就想要看到的景色，果然提早南下是對的，還能多陪家人一晚。&lt;&#x2F;p&gt;
&lt;p&gt;不過關於夜景，因為車內的燈光是亮著的，反光讓我不容易看到窗外，只有將頭靠到窗上才比較容易看到外頭。如果下次讓我選擇的話，我果然還是會選擇白天搭車。&lt;&#x2F;p&gt;
&lt;p&gt;回到家後，第一個看到的是前庭的雜草已經開始長了，有些佈局都不一樣了，提到我的房間時，我竟然說「弟弟的房間」，我頓時意識到我似乎開始脫離這個家了。不過在洗澡的時候，動作都能反射性完成，果然是我長大的地方。&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="zh-tw">
        <title>安利美特</title>
        <published>2022-09-18T00:00:00+00:00</published>
        <updated>2022-09-18T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              NatsuCamellia
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://natsucamellia.github.io/animate/"/>
        <id>https://natsucamellia.github.io/animate/</id>
        
        <content type="html" xml:base="https://natsucamellia.github.io/animate/">&lt;p&gt;這條支線是從昨天下午約一位高中同學出來開始，我問說今天要不要出來走走，而我們最終的決定是：&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;中正紀念堂&lt;&#x2F;li&gt;
&lt;li&gt;二二八紀念公園&lt;&#x2F;li&gt;
&lt;li&gt;總統府&lt;&#x2F;li&gt;
&lt;li&gt;安利美特&lt;&#x2F;li&gt;
&lt;li&gt;更多動漫商品店&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;今天我們首先到中正紀念堂，這途中發生了點小插曲，我們原本說要在捷運站集合，結果我一不小心就走出捷運站了，還走錯到二號出口。我後來跟朋友說要到大孝門集合，當我到達的時候，他說他已經在二號出口了，還讓他再走過來。&lt;&#x2F;p&gt;
&lt;p&gt;中正紀念堂正在舉辦一個美術展覽，大多是水墨畫，我看到了好多厲害的作品，都是我一生中沒見過的高度。&lt;&#x2F;p&gt;
&lt;p&gt;走完中正紀念堂後，從自由廣場走出去，對面便是國家圖書館，但可惜的是入館需要辦證，所以我們馬上就離開了。&lt;&#x2F;p&gt;
&lt;p&gt;接著到二二八和平公園，是一個和大安森林公園差不多的地方，只不過比較多遊樂設施，裡面有記錄一些二二八事件受害者的姓名。&lt;&#x2F;p&gt;
&lt;p&gt;走出公園後馬上又開了一條支線，國家的賓館正在開放參觀。賓館是日治時代建造供外賓住的，裡面挑高目測五米，有臥室、客廳、早餐房和更多房間，傢俱都是巴洛克風的，極度高貴典雅與奢華。外面還有日式園林，石子和池塘構成了日本的氛圍，只能說貧窮限制了我的想像。&lt;&#x2F;p&gt;
&lt;p&gt;後來去了總統府，因為不能進入所以就到旁邊的市集走走，我買了一杯綠豆鮮奶，意外的非常好喝，十一點喝這個讓我午餐時間可以往後延一些。&lt;&#x2F;p&gt;
&lt;p&gt;接著就進入今天的主題動漫商品，我們首先到安利美特，號稱全日本最大的動漫商品連鎖店，也是我們今天逛到規模最大、商品最齊全的一間。裡面賣了好多漫畫和小說，BL 佔了一大區，看來已經非常流行了，此外，今天女性的顧客是比男性多的。&lt;&#x2F;p&gt;
&lt;p&gt;安利美特裡面也賣了很多動漫周邊，從吊飾、抱枕、卷軸、立牌都有，我最喜歡的是偶像大師的專輯，想不到在實體的店面竟然能看到，每一張都好想買，但是都超過 700 元的價格，以一個學生來說還是比較難下手的。&lt;&#x2F;p&gt;
&lt;p&gt;後來逛到二手商品區，那邊有很多便宜的吊飾和書籍，還有我最想要的專輯。我仔細地檢索有沒有偶像大師的專輯，結果還真的有，大約有兩排。價格有 100 元、 200 元和 500 元的，我找到我喜歡的三張就買了，都是 THE IDOLM@STER LIVE THE@TER 的專輯，總共是 400 元，買的專輯如下：&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;WAVE 01 Flyers!!!&lt;&#x2F;li&gt;
&lt;li&gt;GENERATION 7 STAR ELEMENT&lt;&#x2F;li&gt;
&lt;li&gt;DREAMERS 01 Dreaming!&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;接著我們又去逛了雜誌瘋，也是一家動漫商品店，只不過比安利美特小了一點，一手商品價格上比安利美特來得便宜。&lt;&#x2F;p&gt;
&lt;p&gt;時間來到下午兩點，我們去找東西吃，但因為是在西門町的緣故，價格都算是難以負荷，吃一餐就要超過 200 元，我們最後到麥當勞，找個位子坐下就花了不少時間，當天真的非常多人。&lt;&#x2F;p&gt;
&lt;p&gt;在用餐的時候，突然地震來襲，有些人不想跑，有些人想跑卻都擠在樓梯口，讓我想跑也沒辦法跑，只好在原地繼續吃我的漢堡。後來我才知道這是多年來規模最大的地震，東部還有多棟建築倒塌，幸好我安全沒事。&lt;&#x2F;p&gt;
&lt;p&gt;我們最後又逛了幾家商店，其中一家是虎之穴，裡面主要是賣 R18 本為主，都是封面露點的那種，其他的就沒什麼好說了，都是小型的店家。&lt;&#x2F;p&gt;
&lt;p&gt;回到宿舍後，我研究我今天買的專輯，三張封面都深得我心，一點都不覺得這四百元是浪費。我小心打開每一張專輯，放進跟室友借來的光碟機，但出來的檔案每一個都是「音軌 N」，沒有曲名。不過我馬上點開 STAR ELEMENT 的第一軌，原來這張專輯主要是廣播劇，裡面只有一曲 Episode. Tiara。&lt;&#x2F;p&gt;
&lt;p&gt;我仔細聽日文的廣播劇，發現大致上能聽懂，而且劇中前半段出現的兩個女主角都非常有夢想，跟著他們追夢成為偶像的腳步，非常感動，之後的部分我還沒聽，就先不寫了。&lt;&#x2F;p&gt;
&lt;p&gt;另外兩張都是有 Blu-ray 的專輯，可惜光碟機讀不到 Blu-ray，過幾天用家裡的光碟機試試看，希望可以播放。而普通的 CD 可以播，這兩張都是 ALLSTAR 的曲子，規模比較大，聽起來特別有大家一起為了舞台而努力的感覺，聽著也覺得充滿力量，感到幸福。&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="zh-tw">
        <title>從現代到古典，吉他社</title>
        <published>2022-09-17T00:00:00+00:00</published>
        <updated>2022-09-17T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              NatsuCamellia
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://natsucamellia.github.io/classical-guitar-club/"/>
        <id>https://natsucamellia.github.io/classical-guitar-club/</id>
        
        <content type="html" xml:base="https://natsucamellia.github.io/classical-guitar-club/">&lt;p&gt;今天有社團聯展，一百多個社團參與展覽，各式各樣的社團都有，有音樂的、運動的、表演的，尤其是慈善性質的佔最大宗，這點是最令我感到意外的。全部社團看下來，我有興趣的是管樂社、吉他社、古典吉他社。&lt;&#x2F;p&gt;
&lt;p&gt;其中我第一個遇到的是管樂社。我起初不抱任何入社的希望，因為我知道有入社考試，我慢慢地走過管樂社的攤位，同時盯著攤位桌上的傳單，心裡滿是憧憬，卻沒有能力。&lt;&#x2F;p&gt;
&lt;p&gt;後來有一位社員看我走地如此緩慢，察覺到我對管樂社有興趣，他上前介紹管樂團，並提到社團贏得多場比賽來問我是否有演奏樂器的相關經驗，我如實地向他說沒有，但是既然他都來到我面前了，我還是想爭取入社的機會。&lt;&#x2F;p&gt;
&lt;p&gt;我問：「沒有任何經驗的初學者也能加入嗎？」，我瞬間覺得這很明顯是要他們教我樂器，但我也深知管樂是無法快速學成的，因此我在一秒內補充一句：「因為你剛才不是說管樂團成績很好嗎，能力需求一定也很高吧，我想沒有基礎的人可能很難加入對吧？」。他接著補充說入社會有考試，直接讓我放棄管樂社了。&lt;&#x2F;p&gt;
&lt;p&gt;第二個社團是古典吉他社，我原本的目標就是鎖定吉他社，但是我卻先看到「古典吉他」。我問古典吉他和一般的吉他有什麼差別，社員表示：&lt;&#x2F;p&gt;
&lt;p&gt;兩個是不同的樂器
古典吉他的弦為尼龍線，有別於一般吉他的鋼弦
古典吉他音色圓潤，適合演奏古典音樂
可以把古典吉他當作是古典樂器
我仔細想想，我平常喜歡聽的音樂就是緩慢型的，因此圓潤的音色搞不好更適合我。&lt;&#x2F;p&gt;
&lt;p&gt;接著我走到吉他社，我看到裡面有好多人，不想要進去。我繞了一趟再回來，人數依舊是多得滿出帳篷，此時我看到一位社員在外面發傳單，我去拿了一份，並要求聽他介紹吉他社。他說社內有分家（？我想到兄弟分家），然後會有很多活動，包括各種出去玩。這些都是我不喜歡的，我又問社費多少，他表示 1200 元。&lt;&#x2F;p&gt;
&lt;p&gt;我又跑回古典吉他社，問說社團規模多大，得到的答案是：「上次來的（可能是社課？）大約 10 個人」。我心中暗地開心，這就是我要的小巧規模，而且有指導老師，表示每個學生都能得到更多老師的指導。我又問社費收多少，他說是 700 元，我就決定要參加古典吉他社了。&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="zh-tw">
        <title>校園阿伯奇遇記</title>
        <published>2022-09-15T00:00:00+00:00</published>
        <updated>2022-09-15T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              NatsuCamellia
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://natsucamellia.github.io/mysterious-uncle/"/>
        <id>https://natsucamellia.github.io/mysterious-uncle/</id>
        
        <content type="html" xml:base="https://natsucamellia.github.io/mysterious-uncle/">&lt;p&gt;今天上體育課做操時，和一位同學成為搭檔，自由活動後，我們兩個決定一起去走路。&lt;&#x2F;p&gt;
&lt;p&gt;我們互相告訴了彼此的名字、學校、還有入學方法等等，但就在我們走了約兩分鐘時，遇到了一個阿伯。他就是典型的非常會聊天的人，把我們的身世全部都問了出來，一聊就直接聊了一個小時，還讓小老師來救我們才得以結束。雖說聊了非常久，但我的體感時間只有二十分鐘。&lt;&#x2F;p&gt;
&lt;p&gt;儘管我覺得聊得有點久，但是他讓我對大學生活感到放心不少。他說我們都已經上台大了，都很優秀，千萬不要妄自菲薄，也說了不少讚美我們的話，雖然是場面話，但是卻為我打了一劑強心針。&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="zh-tw">
        <title>被遺忘的課程</title>
        <published>2022-09-12T00:00:00+00:00</published>
        <updated>2022-09-12T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              NatsuCamellia
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://natsucamellia.github.io/forgotten-course/"/>
        <id>https://natsucamellia.github.io/forgotten-course/</id>
        
        <content type="html" xml:base="https://natsucamellia.github.io/forgotten-course/">&lt;p&gt;今天梅花颱風接近台灣，臺北的天空雖不致烏雲密佈，但藍天也被蒙上一層灰紗，雨勢時驟時歇。&lt;&#x2F;p&gt;
&lt;p&gt;約莫下午五點許，國文課下課，正巧外頭一片黑暗，讓人感覺已經過六點了。我於是走到女九享用晚餐，當時人潮不如以往，我心中覺得疑惑，但並沒有多加思索。正當我快吃完時，抬手一看時間，原來才五點半，我赫然驚覺，我還有一堂微積分課還沒有上，於是在課堂上遲到了五分鐘。&lt;&#x2F;p&gt;
&lt;p&gt;也可能是遲到五分鐘的原因，助教在課堂上講述的內容我幾乎無法理解，只能先抄下。而回到宿舍後，我嘗試理解課堂上的知識點，發現僅靠那兩張講義是無法有任何進展的。我轉頭尋求課本的幫助，發現課本寫得比助教講的還要好，我很快就理解了，並大致完成了課堂講義。&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="zh-tw">
        <title>大安森林公園、光華三創</title>
        <published>2022-09-10T00:00:00+00:00</published>
        <updated>2022-09-10T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              NatsuCamellia
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://natsucamellia.github.io/daan-park-guanghua-syntrend/"/>
        <id>https://natsucamellia.github.io/daan-park-guanghua-syntrend/</id>
        
        <content type="html" xml:base="https://natsucamellia.github.io/daan-park-guanghua-syntrend/">&lt;p&gt;今天是中秋節，因此我決定到外面走走。&lt;&#x2F;p&gt;
&lt;p&gt;打開我的 Google Map ，隨心找尋想要去的地點，當然是光華啦，但是在我找到光華之前，我看到了大安森林公園，所以我也打算去那邊一趟。&lt;&#x2F;p&gt;
&lt;p&gt;有鑒於外面的食物很貴（就我臆測而言），我打算不要在外面吃正餐，因此我選擇午餐與晚餐之間出去。吃完午餐的我在 118 巷，離科技大樓比較近，所以我就騎去科技大樓站搭捷運。&lt;&#x2F;p&gt;
&lt;p&gt;自己搭捷運的感覺非常不錯，可以自己調整想要的速度，還能中途改變想要去的地方，比如說我在搭紅線的時候，看到 101 站我就心動了，我也想要去 101 看看，決定把 101 加入行程，雖然說最後因為時間不夠而沒有去成就是了。&lt;&#x2F;p&gt;
&lt;p&gt;首先是大安森林公園，這個公園和雲林完全不是一個檔次的，能在臺北市挪出這麼大一個面積蓋公園真的很不容易。我到處走，裏面有音樂展演場、兒童遊樂場、直排輪場等等，完全能夠讓市民在放假的時候到這裡放鬆娛樂，有這座公園真的太幸福了，之後一定要帶家人來走走。&lt;&#x2F;p&gt;
&lt;p&gt;再來是光華商場，裡面像是實體蝦皮一樣，都是些小小的攤位，不太有辦法讓人進去逛，感覺挺不舒服的，另外手扶梯要一直繞圈搭，這點輸三創很多。&lt;&#x2F;p&gt;
&lt;p&gt;在光華逛得不滿足的我，又去了隔壁的三創，這也是為什麼我沒有時間去 101 ，三創外面的廣場有個活動，似乎是華碩主機板的新發售，有個觀眾上去和來賓玩格鬥遊戲，讓來賓十秒打半管血，但最後觀眾還是以些微之差贏下了兩把遊戲，真的好厲害&lt;&#x2F;p&gt;
&lt;p&gt;在三創裡面有一些東西想要買，首先看到了小米的溫濕度計，小巧簡潔打中了我的心。再來是 MLTD 的彩圖，只有三個，其中還有兩個是重複的。我到處找還有沒有偶像大師的周邊，結果只有閃耀色彩的，還只有一種，失望，如果有春香、美希或是未來我就會買的說。最後一個是我上次來就看中的木製組裝機械萬年曆，大約 400 元，非常有復古的風味。但是到最後，我的天使跟我說這些都沒有什麼用，因此不要買吧！所以我就沒有買了，雙手空空走出三創，心裡想說如果只買必要品，我來逛這裡幹嘛的？&lt;&#x2F;p&gt;
&lt;p&gt;在要進捷運站的門口，有賣 6 個 50 的雞蛋糕，原本不想買要走進捷運站了，但後來還是轉頭過去買，老闆說剩 5 個，算我 30 ，真的是賺到了，但是後面有個小朋友要買卻剛好被我買了，心中還是有點愧疚的。&lt;&#x2F;p&gt;
&lt;p&gt;晚上找晚餐的時候，看到了一家水果店，我突然想到好久沒吃水果了。芭樂三顆 100 ，我不知道行情價如何，但這些芭樂是我有史以來看過最大的，上面標註著「甜」，老闆娘又說這是便宜賣，我就買下來了，後來想想是不是有點盤呢？&lt;&#x2F;p&gt;
&lt;p&gt;晚上繼續完成我的網頁，終於是正式上線了，雖然介面還很陽春，但是我沒有借助任何框架或 IDE ，完全是用 Vim 一個一個字慢慢打出來的，非常有成就感，之後也要延續這個精神，完全用自己的雙手打造出自己的網站！&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="zh-tw">
        <title>誠品書店</title>
        <published>2022-09-09T00:00:00+00:00</published>
        <updated>2024-01-11T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              NatsuCamellia
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://natsucamellia.github.io/eslite-bookstore/"/>
        <id>https://natsucamellia.github.io/eslite-bookstore/</id>
        
        <content type="html" xml:base="https://natsucamellia.github.io/eslite-bookstore/">&lt;p&gt;這禮拜的課程到昨天就結束了，今天是中秋節補假。經過了一週的課程，到處跑教室，大致上知道教室在哪裡了，也熟悉了校園內的主要幹道，可以少依賴一點地圖了。&lt;&#x2F;p&gt;
&lt;p&gt;這一週的發現真不少，我原本以為大學教授都是嚴肅的研究員，但實際上課後才發現，其實教授們很多都很年輕也很親民，畢竟就是要這麼會教才有辦法在台大是吧！關於課程負載，現在還沒有什麼作業負擔，但我心中一直覺得似乎書還沒讀完，也許是因為我以為負擔會很重，但才開學第一週沒有什麼作業讓我完成吧，不知道接下來的課程我能不能順利完成呢？&lt;&#x2F;p&gt;
&lt;p&gt;另外是課外活動的部分，雖說要課業與活動兼顧，但是我覺得之後我的課業負擔會很大，目前還想不到什麼辦法來分配一點時間給活動，看看之後會不會有什麼想法。&lt;&#x2F;p&gt;
&lt;p&gt;早上我為了買日文課本和計程課本，我首先到出版中心，但今天是補假，所以沒有營業。後來我騎到誠品，臺大大門口就有一家誠品，地理位置極佳，實在是太完美了，業績一定很不錯。我一走進去，空間挺小的，當下有點失望，這樣書的種類太少了，一定選不到我要的書，不過後來發現旁邊有樓梯，從地下一樓到三樓。&lt;&#x2F;p&gt;
&lt;p&gt;我充滿期待地走下標記著文學、語言、科技的 B1 ，裏面有成千上萬的書。有賣各種語言的書，包含我要買的日文課本，也有程式語言的書，可惜沒有我要的課本，最大宗的是 Python ，我喜歡的 Java 被放在了最下層，且數目不多，看起來是有點退流行了。接著逛了其他區域，包含心理學、音樂、大眾心理學、漫畫、美術、宗教、科學、小說等等好多種類，真是身心靈的饗宴。我走到最後看到我以前很喜歡的，出自於小川糸的《山茶花文具店》、《閃亮亮共和國》，旁邊是她的新書《永遠的院子》，看到後面的介紹很喜歡忍不住就拿了。&lt;&#x2F;p&gt;
&lt;p&gt;最後結帳時聽店員說有會員和台大優惠，我花了一點時間來註冊，拿到了不少優惠券，日文課本用台大生九折，《永遠的院子》用每月七七折券，最後在用新會員 100 元折價券，原本 730 ，折完後剩 508，雖然知道是行銷手法，但還是很開心。&lt;&#x2F;p&gt;
&lt;p&gt;午餐去買淺草飯糰，新生手冊上說吃過就不會想再吃超商飯糰了，確實贏過超商飯糰非常多，而且價格不會比較貴，我也很推薦給別人試試看。&lt;&#x2F;p&gt;
&lt;p&gt;晚上在吃晚餐的時候，看到英國國民為伊莉莎白二世的離開流淚，我吃著飯也忍不住眼匡泛紅，最近真的是對生命的結束非常有體會，這樣的感覺真希望能長久保有呢！去同情他人，感受他人，共同體會喜悅與哀傷，不也是很多彩的生活嗎？&lt;&#x2F;p&gt;
</content>
        
    </entry>
</feed>
